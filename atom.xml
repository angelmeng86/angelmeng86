<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>海诺技术博客</title>
  
  <subtitle>专注iOS、Android技术开发实践</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.hndev.cn/"/>
  <updated>2018-12-08T01:17:45.845Z</updated>
  <id>http://www.hndev.cn/</id>
  
  <author>
    <name>Maple</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>单片机开发遇到的坑和填坑办法</title>
    <link href="http://www.hndev.cn/2018/02/09/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%E5%92%8C%E5%A1%AB%E5%9D%91%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.hndev.cn/2018/02/09/单片机开发遇到的坑和填坑办法/</id>
    <published>2018-02-09T09:31:45.000Z</published>
    <updated>2018-12-08T01:17:45.845Z</updated>
    
    <content type="html"><![CDATA[<p>一、IDE在线调试问题，点击调试遇到Fail to read registers，该问题有可能是设备当前运行的程序存在低功耗休眠的代码，导致芯片进入休眠状态无法调试，可以先暂时屏蔽低功耗代码进行相关工程代码的调试。 二、单片机时钟产生可以通过内部振荡器进行产生，也可以接入外部晶振，它们的区别在于：内部振荡器产生的时钟频率由于工艺问题会产生或多或少的偏差值，而外部晶振的误差非常小，但是会额外占用实际布板的面积；实际设计中需要根据具体需求进行选型。 三、调试技巧 1、波特率调试可以发送0x0a字符，然后使用示波器观察0101的电平跳变的周期，然后算出频率。 2、断点调试时，有可能会错过后续的中断；如串口接收数据时，断点在中断函数中，就会错过本次后续的中断信息及数据。 3、一条语句执行的耗时计算 1）在函数前将某一GPIO置高，函数执行完后将GPIO置低，通过示波器测量该IO的脉宽； 2）通过系统时钟计数器，函数执行前后对系统时钟进行计数采样，算出差值（注意时钟计数翻转问题），该方式精确度高。 四、当牵扯到DMA操作时，传入的地址必须是SRAM，而不能是其它如EFlash的地址，而且地址必须是对齐的；我之前在做证书认证时候为了节省内存资源，把EFlash的证书地址直接传入进行运算，发现在进行SM3运算时结果不对，最终定位到了上述DMA操作的情况，目前已解决。 五、在实际的两个ECU通信中，不管是串口通信还是SPI通信，都需要把两个ECU的GND接到一块，就是共地，不然会出现数据不一致的现象，谨记！ 六、根据所使用的单片机采用位宽进行赋值拷贝优化，可以有效减少处理数据的时钟周期。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、IDE在线调试问题，点击调试遇到Fail to read registers，该问题有可能是设备当前运行的程序存在低功耗休眠的代码，导致芯片进入休眠状态无法调试，可以先暂时屏蔽低功耗代码进行相关工程代码的调试。 二、单片机时钟产生可以通过内部振荡器进行产生，也可以接入外
      
    
    </summary>
    
      <category term="单片机" scheme="http://www.hndev.cn/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>单片机开发基础概念篇</title>
    <link href="http://www.hndev.cn/2018/02/09/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E7%AF%87/"/>
    <id>http://www.hndev.cn/2018/02/09/单片机开发基础概念篇/</id>
    <published>2018-02-09T09:30:45.000Z</published>
    <updated>2018-12-08T01:17:15.290Z</updated>
    
    <content type="html"><![CDATA[<p>一、SPI总线 SPI接口是Motorola 首先提出的全双工三线同步串行外围接口，采用主从模式（Master Slave）架构；支持多slave模式应用，一般仅支持单Master。 时钟由Master控制，在时钟移位脉冲下，数据按位传输，高位在前，低位在后（MSB first）；SPI接口有2根单向数据线，为全双工通信，目前应用中的数据速率可达几Mbps的水平。   一般应用4根信号线： MOSI：主器件数据输出，从器件数据输入 MISO：主器件数据输入，从器件数据输出 SCK：时钟信息，由主设备控制发出 SS：从设备选择信号，由主设备控制   根据时钟极性（CPOL）和相位（CPHA）组成4种工作模式： SPI0：CPOL=0,CPHA=0 SPI1：CPOL=0,CPHA=1 SPI2：CPOL=1,CPHA=0 SPI3：CPOL=1,CPHA=1 其中SPI0和SPI3为常用   二、QFP 方型扁平式封装技术（Plastic Quad Flat Package），该技术实现的CPU芯片引脚之间距离很小，管脚很细，一般大规模或超大规模集成电路采用这种封装形式，其引脚数一般都在100以上。该技术封装CPU时操作方便，可靠性高；而且其封装外形尺寸较小，寄生参数减小，适合高频应用；该技术主要适合用SMT表面安装技术在PCB上安装布线。   三、SRAM SRAM（静态随机存取存储器）不需要刷新电路即能保存它内部存储的数据。而DRAM（Dynamic Random Access Memory)每隔一段时间，要刷新充电一次，否则内部的数据即会消失，因此SRAM具有较高的性能，功耗较小，但是SRAM也有它的缺点，即它的集成度较低，相同容量的DRAM内存可以设计为较小的体积，但是SRAM却需要很大的体积。同样面积的硅片可以做出更大容量的DRAM，因此SRAM显得更贵。   四、I2C总线 I2C（Inter－Integrated Circuit）总线是由PHILIPS公司开发的两线式串行总线，用于连接微控制器及其外围设备。是微电子通信控制领域广泛采用的一种总线标准。它是同步通信的一种特殊形式，具有接口线少，控制方式简单，器件封装形式小，通信速率较高等优点。I2C 总线支持任何IC 生产工艺(CMOS、双极型）。通过串行数据（SDA）线和串行时钟 （SCL）线在连接到总线的器件间传递信息。每个器件都有一个唯一的地址识别（无论是微控制器——MCU、LCD 驱动器、存储器或键盘接口），而且都可以作为一个发送器或接收器（由器件的功能决定）。LCD 驱动器只能作为接收器，而存储器则既可以接收又可以发送数据。除了发送器和接收器外，器件在执行数据传输时也可以被看作是主机或从机（见表1）。主机是初始化总线的数据传输并产生允许传输的时钟信号的器件。此时，任何被寻址的器件都被认为是从机。 I2C总线（I2C bus，Inter-IC bus）是一个双向的两线连续总线，提供集成电路（ICs）之间的通信线路。I2C总线是一种串行扩展技术，最早由Philips公司推出，广泛应用于电视，录像机和音频设备。I2C总线的意思是“完成集成电路或功能单元之间信息交换的规范或协议”。Philips公司推出的I2C总线采用一条数据线（SDA），加一条时钟线（SCL）来完成数据的传输及外围器件的扩展；对各个节点的寻址是软寻址方式，节省了片选线，标准的寻址字节SLAM为7位，可以寻址127个单元。 I2C总线有三种数据传输速度：标准，快速模式和高速模式。标准的是100Kbps，快速模式为400Kbps，高速模式支持快至3.4Mbps的速度。所有的与次之传输速度的模式都是兼容的。I2C总线支持7位和10位地址空间设备和在不同电压下运行的设备。 五、DMA（直接存储器访问） DMA(Direct Memory Access，直接内存存取) 是所有现代电脑的重要特色，它允许不同速度的硬件装置来沟通，而不需要依赖于 CPU 的大量中断负载。否则，CPU 需要从来源把每一片段的资料复制到暂存器，然后把它们再次写回到新的地方。在这个时间中，CPU 对于其他的工作来说就无法使用。 一个完整的DMA传输过程必须经过DMA请求、DMA响应、DMA传输、DMA结束4个步骤。 DMA技术的出现，使得外围设备可以通过DMA控制器直接访问内存，与此同时，CPU可以继续执行程序．那么DMA控制器与CPU怎样分时使用内存呢?通常采用以下三种方法：(1)停止CPU访内存；(2)周期挪用；(3)DMA与CPU交替访问内存． 六、Watchdog 看门狗，又叫 watchdog timer，是一个定时器电路，一般有一个输入，叫喂狗，一个输出到MCU的RST端，MCU正常工作的时候，每隔一段时间输出一个信号到喂狗端，给 WDT 清零，如果超过规定时间不喂狗(一般在程序跑飞时)，WDT 定时超过，就会给出一个复位信号到MCU，使MCU复位。防止MCU死机. 看门狗的作用就是防止程序发生死循环或者说程序跑飞。 七、QFN QFN是一种无引脚封装，呈正方形或矩形，封装底部中央位置有一个大面积裸露焊盘用来导热，围绕大焊盘的封装外围四周有实现电气连结的导电焊盘。由于QFN封装不像传统的SOIC与TSOP封装那样具有鸥翼状引线，内部引脚与焊盘之间的导电路径短，自感系数以及封装体内布线电阻很低，所以它能提供卓越的电性能。此外，它还通过外露的引线框架焊盘提供了出色的散热性能，该焊盘具有直接散热通道，用于释放封装内的热量。通常将散热焊盘直接焊接在电路板上，并且PCB中的散热过孔有助于将多余的功耗扩散到铜接地板中，从而吸收多余的热量。 八、SCI、UART与RS232 SCI（Serial Communication Interface)意为“串行通信接口”，是相对于并行通信的，是串行通信技术的一种总称，最早由Motolora公司提出的。 UART（Universal Asynchronous Receiver &amp; Transmitter)即通用异步收发器，是串行通信的一种协议，它规定串行通信的波特率、起始/停止位、数据位、校验位等格式，以及各种异步握手信号。 RS232是串行通信的一种物理接口电气标准，规定传输介质（电缆）、收发电平等。其实，RS232、RS422、RS485等都是SCI，其中两线制（仅RXD和TXD）的RS232与RS422和RS485的通信协议是相同的（只有波特率、起始/停止位、数据位、校验位等参数），仅传输介质和收发电平不同</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、SPI总线 SPI接口是Motorola 首先提出的全双工三线同步串行外围接口，采用主从模式（Master Slave）架构；支持多slave模式应用，一般仅支持单Master。 时钟由Master控制，在时钟移位脉冲下，数据按位传输，高位在前，低位在后（MSB fir
      
    
    </summary>
    
      <category term="单片机" scheme="http://www.hndev.cn/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>单片机开发遇到的经验总结（持续更新）</title>
    <link href="http://www.hndev.cn/2017/06/22/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>http://www.hndev.cn/2017/06/22/单片机开发遇到的经验总结（持续更新）/</id>
    <published>2017-06-22T09:13:19.000Z</published>
    <updated>2018-12-08T01:18:11.113Z</updated>
    
    <content type="html"><![CDATA[<p>该文章记录自己在单片机开发调试过程中遇到的坑和解决办法；</p><h3 id="0x01-函数中声明大数组局部变量并初始化数据是一个非常耗时的操作，如果非要声明大数组，则声明时不进行初始化，根据需要进行部分初始化。"><a href="#0x01-函数中声明大数组局部变量并初始化数据是一个非常耗时的操作，如果非要声明大数组，则声明时不进行初始化，根据需要进行部分初始化。" class="headerlink" title="0x01 函数中声明大数组局部变量并初始化数据是一个非常耗时的操作，如果非要声明大数组，则声明时不进行初始化，根据需要进行部分初始化。"></a>0x01 函数中声明大数组局部变量并初始化数据是一个非常耗时的操作，如果非要声明大数组，则声明时不进行初始化，根据需要进行部分初始化。</h3><p>u8 data[2048] = {0};//该声明会导致单片机进行memset耗时操作 改为： u8 data[2048]; data[0]=0x00;//根据具体业务进行赋值操作  </p><h3 id="0x02-中断优先级很重要，在没有使用嵌套中断的情况下，当有两个中断同时触发时将会按照优先级处理优先级高的中断，如果刚处理完优先级高的中断，然后又来了个优先级高的中断，则会继续处理高优先级中断，这种情况下很有可能导致低优先级的中断迟迟不能触发，最后引起低优先级中断丢失的可能性；"><a href="#0x02-中断优先级很重要，在没有使用嵌套中断的情况下，当有两个中断同时触发时将会按照优先级处理优先级高的中断，如果刚处理完优先级高的中断，然后又来了个优先级高的中断，则会继续处理高优先级中断，这种情况下很有可能导致低优先级的中断迟迟不能触发，最后引起低优先级中断丢失的可能性；" class="headerlink" title="0x02 中断优先级很重要，在没有使用嵌套中断的情况下，当有两个中断同时触发时将会按照优先级处理优先级高的中断，如果刚处理完优先级高的中断，然后又来了个优先级高的中断，则会继续处理高优先级中断，这种情况下很有可能导致低优先级的中断迟迟不能触发，最后引起低优先级中断丢失的可能性；"></a>0x02 中断优先级很重要，在没有使用嵌套中断的情况下，当有两个中断同时触发时将会按照优先级处理优先级高的中断，如果刚处理完优先级高的中断，然后又来了个优先级高的中断，则会继续处理高优先级中断，这种情况下很有可能导致低优先级的中断迟迟不能触发，最后引起低优先级中断丢失的可能性；</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;该文章记录自己在单片机开发调试过程中遇到的坑和解决办法；&lt;/p&gt;
&lt;h3 id=&quot;0x01-函数中声明大数组局部变量并初始化数据是一个非常耗时的操作，如果非要声明大数组，则声明时不进行初始化，根据需要进行部分初始化。&quot;&gt;&lt;a href=&quot;#0x01-函数中声明大数组局部变量
      
    
    </summary>
    
      <category term="单片机" scheme="http://www.hndev.cn/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS苹果应用上架（五）Xcode工程配置及打包上传</title>
    <link href="http://www.hndev.cn/2017/06/14/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%BA%94%EF%BC%89Xcode%E5%B7%A5%E7%A8%8B%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%89%93%E5%8C%85%E4%B8%8A%E4%BC%A0/"/>
    <id>http://www.hndev.cn/2017/06/14/iOS苹果应用上架（五）Xcode工程配置及打包上传/</id>
    <published>2017-06-14T08:29:16.000Z</published>
    <updated>2018-12-08T02:00:21.700Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-打开Xcode代码工程，操作如下"><a href="#0x01-打开Xcode代码工程，操作如下" class="headerlink" title="0x01 打开Xcode代码工程，操作如下"></a>0x01 打开Xcode代码工程，操作如下</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-154128.png" alt="WX20170614-154128"></p><h2 id="0x02-取消签名自动管理功能，选择之前安装好的Provision文件，另外可以需要设置应用的版本号Version和Build信息，如1-0"><a href="#0x02-取消签名自动管理功能，选择之前安装好的Provision文件，另外可以需要设置应用的版本号Version和Build信息，如1-0" class="headerlink" title="0x02 取消签名自动管理功能，选择之前安装好的Provision文件，另外可以需要设置应用的版本号Version和Build信息，如1.0"></a>0x02 取消签名自动管理功能，选择之前安装好的Provision文件，另外可以需要设置应用的版本号Version和Build信息，如1.0<img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-154311.png" alt="WX20170614-154311"></h2><h2 id="0x03-点击选择，配置工程为真机编译选项"><a href="#0x03-点击选择，配置工程为真机编译选项" class="headerlink" title="0x03 点击选择，配置工程为真机编译选项"></a>0x03 点击选择，配置工程为真机编译选项<img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-154504.png" alt="WX20170614-154504"></h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/屏幕快照-2017-06-14-下午3.44.00.png" alt="屏幕快照 2017-06-14 下午3.44.00"></p><h2 id="0x04-然后开始进行打包操作"><a href="#0x04-然后开始进行打包操作" class="headerlink" title="0x04 然后开始进行打包操作"></a>0x04 然后开始进行打包操作</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/屏幕快照-2017-06-14-下午3.45.21.png" alt="屏幕快照 2017-06-14 下午3.45.21"></p><h2 id="0x05-编译成功的话，会弹出下框，选择打包好的版本，然后点击上传苹果商店"><a href="#0x05-编译成功的话，会弹出下框，选择打包好的版本，然后点击上传苹果商店" class="headerlink" title="0x05 编译成功的话，会弹出下框，选择打包好的版本，然后点击上传苹果商店"></a>0x05 编译成功的话，会弹出下框，选择打包好的版本，然后点击上传苹果商店</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-155555.png" alt="WX20170614-155555"></p><h2 id="0x06-选择对应的苹果账号，点击Choose"><a href="#0x06-选择对应的苹果账号，点击Choose" class="headerlink" title="0x06 选择对应的苹果账号，点击Choose"></a>0x06 选择对应的苹果账号，点击Choose</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-155708.png" alt="WX20170614-155708"></p><h2 id="0x07-接着网络畅通的话会显示如下信息，继续点击Upload"><a href="#0x07-接着网络畅通的话会显示如下信息，继续点击Upload" class="headerlink" title="0x07 接着网络畅通的话会显示如下信息，继续点击Upload"></a>0x07 接着网络畅通的话会显示如下信息，继续点击Upload</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-155732.png" alt="WX20170614-155732"></p><h2 id="0x08-如果你幸运的话，会看到如下结果，恭喜你上传版本成功。否则有可能网络或者APP包等其它原因弹出错误。"><a href="#0x08-如果你幸运的话，会看到如下结果，恭喜你上传版本成功。否则有可能网络或者APP包等其它原因弹出错误。" class="headerlink" title="0x08 如果你幸运的话，会看到如下结果，恭喜你上传版本成功。否则有可能网络或者APP包等其它原因弹出错误。"></a>0x08 如果你幸运的话，会看到如下结果，恭喜你上传版本成功。否则有可能网络或者APP包等其它原因弹出错误。</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-155912.png" alt="WX20170614-155912"></p><h2 id="0x09-上传的应用会在iTunes-Connect里面看到构建版本"><a href="#0x09-上传的应用会在iTunes-Connect里面看到构建版本" class="headerlink" title="0x09 上传的应用会在iTunes Connect里面看到构建版本"></a>0x09 上传的应用会在iTunes Connect里面看到构建版本</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-162830.png" alt="WX20170614-162830"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-打开Xcode代码工程，操作如下&quot;&gt;&lt;a href=&quot;#0x01-打开Xcode代码工程，操作如下&quot; class=&quot;headerlink&quot; title=&quot;0x01 打开Xcode代码工程，操作如下&quot;&gt;&lt;/a&gt;0x01 打开Xcode代码工程，操作如下&lt;/
      
    
    </summary>
    
      <category term="移动端开发" scheme="http://www.hndev.cn/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ios" scheme="http://www.hndev.cn/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>iOS苹果应用上架（四）在iTunes Connect中创建苹果应用</title>
    <link href="http://www.hndev.cn/2017/06/14/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E5%9B%9B%EF%BC%89%E5%9C%A8iTunes%20Connect%E4%B8%AD%E5%88%9B%E5%BB%BA%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8/"/>
    <id>http://www.hndev.cn/2017/06/14/iOS苹果应用上架（四）在iTunes Connect中创建苹果应用/</id>
    <published>2017-06-14T08:14:12.000Z</published>
    <updated>2018-12-08T02:00:24.332Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-继续登录官方开发者网站，点击进入iTunes-Connect"><a href="#0x01-继续登录官方开发者网站，点击进入iTunes-Connect" class="headerlink" title="0x01 继续登录官方开发者网站，点击进入iTunes Connect"></a>0x01 继续登录官方开发者网站，点击进入iTunes Connect<img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-142606.png" alt="WX20170614-142606"></h2><h2 id="0x02-点击进入我的App"><a href="#0x02-点击进入我的App" class="headerlink" title="0x02 点击进入我的App"></a>0x02 点击进入我的App</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-161004.png" alt="WX20170614-161004"></p><h2 id="0x03-点击-号新建App"><a href="#0x03-点击-号新建App" class="headerlink" title="0x03 点击+号新建App"></a>0x03 点击+号新建App</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-154927.png" alt="WX20170614-154927"></p><h2 id="0x04-如下图，填写并创建APP"><a href="#0x04-如下图，填写并创建APP" class="headerlink" title="0x04 如下图，填写并创建APP"></a>0x04 如下图，填写并创建APP</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-155214.png" alt="WX20170614-155214"></p><h2 id="0x05-已经能够看到创建好的APP，可以点击进入编辑信息"><a href="#0x05-已经能够看到创建好的APP，可以点击进入编辑信息" class="headerlink" title="0x05 已经能够看到创建好的APP，可以点击进入编辑信息"></a>0x05 已经能够看到创建好的APP，可以点击进入编辑信息</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-155308.png" alt="WX20170614-155308"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-继续登录官方开发者网站，点击进入iTunes-Connect&quot;&gt;&lt;a href=&quot;#0x01-继续登录官方开发者网站，点击进入iTunes-Connect&quot; class=&quot;headerlink&quot; title=&quot;0x01 继续登录官方开发者网站，点击进入i
      
    
    </summary>
    
      <category term="移动端开发" scheme="http://www.hndev.cn/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ios" scheme="http://www.hndev.cn/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>iOS苹果应用上架（三）根据APP包名创建Provision文件</title>
    <link href="http://www.hndev.cn/2017/06/14/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%B8%89%EF%BC%89%E6%A0%B9%E6%8D%AEAPP%E5%8C%85%E5%90%8D%E5%88%9B%E5%BB%BAProvision%E6%96%87%E4%BB%B6/"/>
    <id>http://www.hndev.cn/2017/06/14/iOS苹果应用上架（三）根据APP包名创建Provision文件/</id>
    <published>2017-06-14T07:35:48.000Z</published>
    <updated>2018-12-08T02:00:17.371Z</updated>
    
    <content type="html"><![CDATA[<p>Provision文件用于打包指定APP包名的应用。</p><h2 id="0x01-接上一节，登录官方开发网，进入证书、ID及配置文件管理界面，点击Provisioning-Profiles下的Distribution菜单，然后再点击右上角-号。"><a href="#0x01-接上一节，登录官方开发网，进入证书、ID及配置文件管理界面，点击Provisioning-Profiles下的Distribution菜单，然后再点击右上角-号。" class="headerlink" title="0x01 接上一节，登录官方开发网，进入证书、ID及配置文件管理界面，点击Provisioning Profiles下的Distribution菜单，然后再点击右上角+号。"></a>0x01 接上一节，登录官方开发网，进入证书、ID及配置文件管理界面，点击Provisioning Profiles下的Distribution菜单，然后再点击右上角+号。</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-143423.png" alt="WX20170614-143423"></p><h2 id="0x02-选择Distribution下AppStore选项，然后继续"><a href="#0x02-选择Distribution下AppStore选项，然后继续" class="headerlink" title="0x02 选择Distribution下AppStore选项，然后继续"></a>0x02 选择Distribution下AppStore选项，然后继续</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-143636.png" alt="WX20170614-143636"></p><h2 id="0x03-选择上一节创建好的APP-ID包名"><a href="#0x03-选择上一节创建好的APP-ID包名" class="headerlink" title="0x03 选择上一节创建好的APP ID包名"></a>0x03 选择上一节创建好的APP ID包名</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-143719.png" alt="WX20170614-143719"></p><h2 id="0x04-选择第一节创建的开发者证书"><a href="#0x04-选择第一节创建的开发者证书" class="headerlink" title="0x04 选择第一节创建的开发者证书"></a>0x04 选择第一节创建的开发者证书</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-143844.png" alt="WX20170614-143844"></p><h2 id="0x05-输入个Provision文件名"><a href="#0x05-输入个Provision文件名" class="headerlink" title="0x05 输入个Provision文件名"></a>0x05 输入个Provision文件名</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-143916.png" alt="WX20170614-143916"></p><h2 id="0x06-见下图，Provision文件创建完成"><a href="#0x06-见下图，Provision文件创建完成" class="headerlink" title="0x06 见下图，Provision文件创建完成"></a>0x06 见下图，Provision文件创建完成<img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-144014.png" alt="WX20170614-144014"></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Provision文件用于打包指定APP包名的应用。&lt;/p&gt;
&lt;h2 id=&quot;0x01-接上一节，登录官方开发网，进入证书、ID及配置文件管理界面，点击Provisioning-Profiles下的Distribution菜单，然后再点击右上角-号。&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="移动端开发" scheme="http://www.hndev.cn/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ios" scheme="http://www.hndev.cn/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>iOS苹果应用上架（二）创建APP包名</title>
    <link href="http://www.hndev.cn/2017/06/14/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%BA%8C%EF%BC%89%E5%88%9B%E5%BB%BAAPP%E5%8C%85%E5%90%8D/"/>
    <id>http://www.hndev.cn/2017/06/14/iOS苹果应用上架（二）创建APP包名/</id>
    <published>2017-06-14T07:22:17.000Z</published>
    <updated>2018-12-08T02:00:19.564Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-登录https-developer-apple-com网站，点击进入证书、ID及配置管理菜单"><a href="#0x01-登录https-developer-apple-com网站，点击进入证书、ID及配置管理菜单" class="headerlink" title="0x01 登录https://developer.apple.com网站，点击进入证书、ID及配置管理菜单"></a>0x01 登录<a href="https://developer.apple.com" target="_blank" rel="noopener">https://developer.apple.com</a>网站，点击进入证书、ID及配置管理菜单</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-142543.png" alt="WX20170614-142543"></p><h2 id="0x02-选择App-ID选项，点击右上角-号增加应用包名"><a href="#0x02-选择App-ID选项，点击右上角-号增加应用包名" class="headerlink" title="0x02 选择App ID选项，点击右上角+号增加应用包名"></a>0x02 选择App ID选项，点击右上角+号增加应用包名</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-142801.png" alt="WX20170614-142801"></p><h2 id="0x03-描述见下图"><a href="#0x03-描述见下图" class="headerlink" title="0x03 描述见下图"></a>0x03 描述见下图</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-143129.png" alt="WX20170614-143129"> <img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-143225.png" alt="WX20170614-143225"></p><h2 id="0x04-点击注册按钮，完成应用包名创建"><a href="#0x04-点击注册按钮，完成应用包名创建" class="headerlink" title="0x04 点击注册按钮，完成应用包名创建"></a>0x04 点击注册按钮，完成应用包名创建</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-143248.png" alt="WX20170614-143248"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-登录https-developer-apple-com网站，点击进入证书、ID及配置管理菜单&quot;&gt;&lt;a href=&quot;#0x01-登录https-developer-apple-com网站，点击进入证书、ID及配置管理菜单&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="移动端开发" scheme="http://www.hndev.cn/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ios" scheme="http://www.hndev.cn/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>iOS苹果应用上架（一）创建发布者证书</title>
    <link href="http://www.hndev.cn/2017/06/14/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9B%E5%BB%BA%E5%8F%91%E5%B8%83%E8%80%85%E8%AF%81%E4%B9%A6/"/>
    <id>http://www.hndev.cn/2017/06/14/iOS苹果应用上架（一）创建发布者证书/</id>
    <published>2017-06-14T06:58:12.000Z</published>
    <updated>2018-12-08T02:00:13.131Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-打开Xcode工具，进入下图菜单"><a href="#0x01-打开Xcode工具，进入下图菜单" class="headerlink" title="0x01 打开Xcode工具，进入下图菜单"></a>0x01 打开Xcode工具，进入下图菜单</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/屏幕快照-2017-06-14-下午2.14.36.png" alt="屏幕快照 2017-06-14 下午2.14.36"></p><h2 id="0x02-选择Account选项卡"><a href="#0x02-选择Account选项卡" class="headerlink" title="0x02 选择Account选项卡"></a>0x02 选择Account选项卡</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-141643.png" alt="WX20170614-141643"></p><h2 id="0x03-点击右下角-号，Add-Apple-ID增加苹果账号"><a href="#0x03-点击右下角-号，Add-Apple-ID增加苹果账号" class="headerlink" title="0x03 点击右下角+号，Add Apple ID增加苹果账号"></a>0x03 点击右下角+号，Add Apple ID增加苹果账号</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/屏幕快照-2017-06-14-下午2.16.59.png" alt="屏幕快照 2017-06-14 下午2.16.59"></p><h2 id="0x04-输入自己的申请好的苹果账号和密码，Sign-In"><a href="#0x04-输入自己的申请好的苹果账号和密码，Sign-In" class="headerlink" title="0x04 输入自己的申请好的苹果账号和密码，Sign In"></a>0x04 输入自己的申请好的苹果账号和密码，Sign In</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/屏幕快照-2017-06-14-下午2.18.14.png" alt="屏幕快照 2017-06-14 下午2.18.14"></p><h2 id="0x05-选择已登录的账号，然后点击View-Details"><a href="#0x05-选择已登录的账号，然后点击View-Details" class="headerlink" title="0x05 选择已登录的账号，然后点击View Details"></a>0x05 选择已登录的账号，然后点击View Details</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-142038.png" alt="WX20170614-142038"></p><h2 id="0x06-如果电脑中没有发布者证书，则红色箭头处会有一个Create按钮，点击该按钮进行iOS发布者证书创建"><a href="#0x06-如果电脑中没有发布者证书，则红色箭头处会有一个Create按钮，点击该按钮进行iOS发布者证书创建" class="headerlink" title="0x06 如果电脑中没有发布者证书，则红色箭头处会有一个Create按钮，点击该按钮进行iOS发布者证书创建"></a>0x06 如果电脑中没有发布者证书，则红色箭头处会有一个Create按钮，点击该按钮进行iOS发布者证书创建</h2><p><img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-142247.png" alt="WX20170614-142247"></p><h2 id="0x07-创建成功的话，在钥匙串应用中能够看见如下证书信息"><a href="#0x07-创建成功的话，在钥匙串应用中能够看见如下证书信息" class="headerlink" title="0x07 创建成功的话，在钥匙串应用中能够看见如下证书信息"></a>0x07 创建成功的话，在钥匙串应用中能够看见如下证书信息<img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/06/WX20170614-142330.png" alt="WX20170614-142330"></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-打开Xcode工具，进入下图菜单&quot;&gt;&lt;a href=&quot;#0x01-打开Xcode工具，进入下图菜单&quot; class=&quot;headerlink&quot; title=&quot;0x01 打开Xcode工具，进入下图菜单&quot;&gt;&lt;/a&gt;0x01 打开Xcode工具，进入下图菜单&lt;/
      
    
    </summary>
    
      <category term="移动端开发" scheme="http://www.hndev.cn/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ios" scheme="http://www.hndev.cn/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>各类总线传输速率（转）</title>
    <link href="http://www.hndev.cn/2017/04/18/%E5%90%84%E7%B1%BB%E6%80%BB%E7%BA%BF%E4%BC%A0%E8%BE%93%E9%80%9F%E7%8E%87%EF%BC%88%E8%BD%AC%EF%BC%89/"/>
    <id>http://www.hndev.cn/2017/04/18/各类总线传输速率（转）/</id>
    <published>2017-04-18T09:26:29.000Z</published>
    <updated>2018-12-08T01:18:23.018Z</updated>
    
    <content type="html"><![CDATA[<ol><li>USB总线</li></ol><p>USB1.1： ——-低速模式(low speed)：1.5Mbps ——-全速模式(full speed)： 12Mbps USB2.0：向下兼容。增加了高速模式，最大速率480Mbps。 ——-高速模式(high speed)： 25~480Mbps USB3.0：向下兼容。 ——-super speed ：理论上最高达4.8Gbps，实际中，也就是high speed 的10倍左右。  </p><ol start="2"><li>UART</li></ol><p>RS232：传输速率一般不超过20Kbps，速率低，抗干扰能力差，RS-232C能传输的最大距离不超过15m（50英尺）。   RS422：定义了一种平衡通信接口，将传输速率提高到10Mbps，传输距离延长到4000英尺（速率低于100Kbps时），并允许在一条平衡总线上连接最多10个接收器。RS-422是一种单机发送、多机接收的单向、平衡传输规范，被命名为TIA/EIA-422-A标准。   RS485：增加了多点、双向通信能力，即允许多个发送器连接到同一条总线上，同时增加了发送器的驱动能力和冲突保护特性，扩展了总线共模范围，后命名为TIA/EIA-485-A标准。最高传输速率10Mbps，抗干扰能力强，可以传距离1.5km。   平衡双绞线的长度与传输速率成反比，在100Kbps速率以下，才可能使用规定最长的电缆长度。只有在很短的距离下才能获得最高速率传输。一般100米长双绞线最大传输速率仅为1Mbps。  </p><ol start="3"><li>SPI总线</li></ol><p>全双工通信，传输速率可达几Mbps水平，比I2C快。  </p><ol start="4"><li>I2C总线：　半双工，只有2根线。数据线和时钟线。</li></ol><p>——–标准速度：100kbps ——–快速模式：400kbps ——–高速模式：3.4Mbps  </p><ol start="4"><li>Ethernet，也就是通常的网速。</li></ol><p>——–早期的以太网传输速率只有10Mbps。 ——–百兆网：理论上最大100Mbps。 ——–千兆网：理论上最大1Gbps。  </p><ol start="5"><li>SD总线：最高能达10Mbps。</li></ol><ol start="6"><li>SATA接口：</li></ol><p>——–SATA1.0：理论传输速度是150MB/s（或者1.5Gb/s），实际也就30MBps。 ——–SATA2.0： 300MBps，即3Gbps。实际也就80MBps。 ——–SATA3.0： 600MBps，即6Gbps。 ——–eSATA：理论传输速度可达到1.5Gbps或3Gbps。  </p><ol start="7"><li>PCI总线</li></ol><p>——–PCI：32位，33MHz时钟频率，速率是33*4 = 133MBps，即1Gbps。 ——– PCI 2.1：64位，66MHz时钟频率来说：速率是66*8 = 528MBps，即4Gbps。  </p><ol start="8"><li>PCI-e：</li></ol><p>PCI Express 总线频率 2500 MHz，这是在 100 MHz 的基准频率通过锁相环振荡器(Phase Lock Loop，PLL)达到的。 串行总线带宽(MB/s) = 串行总线时钟频率(MHz) <em> 串行总线位宽(bit/8 = B) </em> 串行总线管线 <em> 编码方式 </em> 每时钟传输几组数据(cycle) ——PCI Express x1 总线位宽是 1位，总线频率 2500 MHz，串行总线管线是 1 条，每时钟传输 2组数据，编码方式为 8b/10b，它的带宽为 476.84 MB/s，即 3814.7 Mbps。（带宽是 PCI 的 3.75 倍。） 公式是 2500000000(Hz) <em> 1/8(bit) </em> 1(条管线) <em> 8/10(bit) </em> 2(每时钟传输2组数据) = 500000000 B/s = 476.8371582 MB/s，即 3814.6972656 Mbps。 下面给出其它类型组合的带宽。 ——PCI Express x2 的带宽为 953.68 MB/s，即 7629.4 Mbps。（此模式仅用于主板内部接口而非插槽模式） ——PCI Express x4 的带宽为 1907.36 MB/s，即 15258.9 Mbps。 ——PCI Express x8 的带宽为 3814.72 MB/s，即 30517.8 Mbps。 ——PCI Express x16 的带宽为 7629.44 MB/s，即 61035.5 Mbps。（带宽是 AGP 8X 的 3.75 倍。） ——PCI Express x32 的带宽为 15258.88 MB/s，即 122071 Mbps。</p><ol start="9"><li>XGMII/XLGMII/CGMII</li></ol><p>在以太网标准中，MAC层与PHY层之间的10Gbps/40Gbps/100Gbps速率等级所对应的接口分别为XGMII/XLGMII/CGMII，由于XGMII/XLGMII是并行总线，而且采用的是单端信号，HSTL电平，最大传输距离只有7cm。所以在实际应用中，XGMII/XLGMII基本上被XAUI/XLAUI替代。XAUI/XLAUI是四通道串行总线，采用的差分信号，CML逻辑传输，并且进行了扰码，大大增强了信号的抗扰性能，使得信号的有效传输距离增加到50cm。 XAUI/XLAUI在物理结构上是一样的，收发通道独立，各四对差分信号线。对于XAUI总线，每对差分线上的数据速率为3.125Gbps，总数据带宽为12.5Gbps，有效带宽为12.5Gbps*0.8=10Gbps （因为XAUI总线数据在传输前进行了8B/10B变换，编码效率为80%）。   对于XLAUI总线，每对差分线上的数据速率为10.3125Gbps，总数据带宽为41.25Gbps，有效带宽为41.25Gbps*(64/66)=40Gbps（因为XLAUI总线数据在传输前进行了64B/66B变换，编码效率为96.97%）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;USB总线&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;USB1.1： ——-低速模式(low speed)：1.5Mbps ——-全速模式(full speed)： 12Mbps USB2.0：向下兼容。增加了高速模式，最大速率480Mbps。 ——-高速模式(high sp
      
    
    </summary>
    
      <category term="单片机" scheme="http://www.hndev.cn/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>在Mac OS上编译 SQLCipher</title>
    <link href="http://www.hndev.cn/2017/03/31/%E5%9C%A8Mac%20OS%E4%B8%8A%E7%BC%96%E8%AF%91%20SQLCipher/"/>
    <id>http://www.hndev.cn/2017/03/31/在Mac OS上编译 SQLCipher/</id>
    <published>2017-03-31T14:38:49.000Z</published>
    <updated>2018-12-08T02:15:30.853Z</updated>
    
    <content type="html"><![CDATA[<p>在sqlcipher官网给的方法没法在Mac OS上编译，所以做了以下记录，大家应该明白编译这东西是为了进行加密数据库的脱密或者加密。 ./configure –enable-load-extension –enable-tempstore=yes –with-crypto-lib=commoncrypto CFLAGS=”-DSQLITE_HAS_CODEC -DSQLITE_ENABLE_FTS3” LDFLAGS=”/System/Library/Frameworks/Security.framework/Versions/Current/Security” make</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在sqlcipher官网给的方法没法在Mac OS上编译，所以做了以下记录，大家应该明白编译这东西是为了进行加密数据库的脱密或者加密。 ./configure –enable-load-extension –enable-tempstore=yes –with-crypto
      
    
    </summary>
    
      <category term="开发工具" scheme="http://www.hndev.cn/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="mac os" scheme="http://www.hndev.cn/tags/mac-os/"/>
    
      <category term="sqlcipher" scheme="http://www.hndev.cn/tags/sqlcipher/"/>
    
  </entry>
  
  <entry>
    <title>单片机下的编码规范</title>
    <link href="http://www.hndev.cn/2017/03/06/%E5%8D%95%E7%89%87%E6%9C%BA%E4%B8%8B%E7%9A%84%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    <id>http://www.hndev.cn/2017/03/06/单片机下的编码规范/</id>
    <published>2017-03-06T06:50:43.000Z</published>
    <updated>2018-12-08T01:14:48.241Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1。模块描述"><a href="#1。模块描述" class="headerlink" title="1。模块描述"></a>1。模块描述</h2><p>模块是为了实现某一功能的函数的集合，文件名使用缺省的后缀，在每一模块的开头应有如下的描述体： /****************************************************************************** *** * PROJECT CODE ：项目代号或名称 <em> </em> CREATE DATE ：创建日期 <em> </em> CREATED BY ：创建人 <em> </em> FUNCTION ：模块功能 <em> </em> MODIFY DATE ：修改日期 <em> </em> DOCUMENT ：参考文档 <em> </em> OTHERS ：程序员认为应做特别说明的部分，如特别的编译开关 <em> <strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></em>/ 不同的修改人应在修改的地方加上适当的注释，包括修改人的姓名。另外，如有必要，要注明模块的工作平台，如单板OS、DOS、WINDOWS 等。注明适用的编译器和编译模式。</p><h2 id="2。函数描述"><a href="#2。函数描述" class="headerlink" title="2。函数描述"></a>2。函数描述</h2><p>函数是组成模块的单元，一般用来完成某一算法或控制等。在每一函数的开头应有如下的描述体： /****************************************************************************** *** * FUNCTION NAME：函数名称 <em> </em> CREATE DATE ：创建日期 <em> </em> CREATED BY ：创建人 <em> </em> FUNCTION ：函数功能 <em> </em> MODIFY DATE ：修改日期 <em> </em> INPUT ：输入参数类型(逐个说明) <em> </em> OUTPUT ：输出参数类型(逐个说明) <em> </em> RETURN ：返回信息 <em> <strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></em>/ 可选的描述有： <em> RECEIVED MESSAGES：收到的消息 </em> <em> SENT MESSAGES ：发送的消息 </em> <em> DATABASE ACCESS ：存取的数据库 </em> <em> CALLED BY ：该函数的调用者 </em> <em> PROCEDURES CALLED：调用的过程 </em> <em> RECEVED PRIMITIVES : 收到的原语 </em> <em> SENT PRIMITIVES : 发送的原语 </em> 及其它程序员认为应有的描述。标题可以只大写第一个字母。例如：Function Name：</p><h2 id="3。命名规则："><a href="#3。命名规则：" class="headerlink" title="3。命名规则："></a>3。命名规则：</h2><p>A) 函数： 函数名应能体现该函数完成的功能，关键部分应采用完整的单词，辅助部分若太长可采用缩写，缩写应符合英文的规范。每个单词的第一个字母大写。如：ShowPoints，CtrlDestBoard，SendResetMsg 等。 B) 变量： 变量的命名规则部分采用匈牙利命名规则(鼓励完全使用匈牙利名规则)。变量的第一个或前两个字母小写，表示其数据类型，其后每个词的第一个字母大写。推荐的类型前缀如下： <img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/03/规范.png" alt="规范"> 如iCurrentValue，uTransitionCount 等。对于其他复合类型或自定义类型，请用适当的前缀来表示。除局部循环变量外，不鼓励单个字母的变量名。 对于常用的类型定义，尽量使用WORD、BOOL、LPWORD、VOID、FAR、NEAR 等惯用写法，避免使用char、long、void、far、near 等小写格式。</p><h2 id="4。书写风格："><a href="#4。书写风格：" class="headerlink" title="4。书写风格："></a>4。书写风格：</h2><p>A) 函数：函数的返回类型一定要写，不管它是否默认类型，函数的参数之间应用一逗 号加一空格隔开,若有多个参数，应排列整齐。例如： int SendResetMsg( PTLAPENTITY pLAPEntity, int iErrorNo ) { int iTempValue; . . . } 函数的类型和上下两个括号应从第一列开始，函数的第一行应缩进一个TAB，不得用空格缩进。(按大多数程序范例，TAB 为四个字符宽，我们规定：TAB 为四个字符宽。) B) 语句：循环语句和if 语句等块语句的第一个大括号‘{’可跟在第一行的后面，接 下来的语句应缩进一个TAB，如： for ( count = 0 ; count &lt; MAXLINE ; count++ ) { if ( (count % PAGELINE) == 0 ) { . . . } . . } 也可另起一行，如： for ( count = 0 ; count &lt; MAXLINE ; count++ ) { if ( (count % PAGELINE) == 0 ) { . . . } . . } 两种写法在世界著名的程序员手下均可见到，我们尊重个人的习惯，但推荐使用后一种写法。复杂表达式(两个运算符以上，含两个)必须用括号区分运算顺序，运算符的前后应各有一空格，习惯写在一行的几个语句(如IF 语句)，中间应有一空格，其它语句不鼓励写在同一行。 空格加在适当的地方，如 if ( ; for ( ; ) {; 语句的上下对齐也可使程序便于阅读，如： myStruct.iFirstNumber = 0; myStruct.lSecondNumber = 1; myStruct.pThePoint = NULL; C) 常量：常量一般情况下可用宏定义，用大写的方式，单词之间用下划线隔开 如： #define MAX_LINE 100 #define PI 3.1415926 不鼓励在程序中出现大量的数字常数。 注：对于一些有必要说明的缩写，可以在模块描述内加以说明。</p><h2 id="5。头文件："><a href="#5。头文件：" class="headerlink" title="5。头文件："></a>5。头文件：</h2><p>头文件一般包括了数据结构的定义，函数原形的说明，宏定义等，不许包含函数体和变量实体，文件名使用缺省的后缀.h，不使用类似.DEF 等非标准的后缀名，头文件的开始可包括如下的注释： /<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong> <em> CREATE DATE：创建日期 </em> <em> CREATED BY ：创建人 </em> <em> MODIFIED BY ：修改人 </em> <em> USED BY ：由哪些模块使用 </em> <strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>/ 为了避免重编译，应加上条件编译语句，如文件headfille.h 应包含下列语句： #ifndef __HEADFILE_H #define __HEADFILE_H . . . #endif</p><h2 id="6。注释："><a href="#6。注释：" class="headerlink" title="6。注释："></a>6。注释：</h2><p>注释是源码中非常重要的部分，不应少于源码行数的15%，我们希望能达到25%或更多。注释用中英文都可以，但应易读易懂。不要在一个语句的中间插入注释。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1。模块描述&quot;&gt;&lt;a href=&quot;#1。模块描述&quot; class=&quot;headerlink&quot; title=&quot;1。模块描述&quot;&gt;&lt;/a&gt;1。模块描述&lt;/h2&gt;&lt;p&gt;模块是为了实现某一功能的函数的集合，文件名使用缺省的后缀，在每一模块的开头应有如下的描述体： /******
      
    
    </summary>
    
      <category term="单片机" scheme="http://www.hndev.cn/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Centos Linux下部署Parse服务器</title>
    <link href="http://www.hndev.cn/2017/03/05/Centos%20Linux%E4%B8%8B%E9%83%A8%E7%BD%B2Parse%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://www.hndev.cn/2017/03/05/Centos Linux下部署Parse服务器/</id>
    <published>2017-03-05T09:42:45.000Z</published>
    <updated>2018-12-08T01:57:35.500Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>Parse是Facebook很有名的一个项目，能够帮助目前很多应用快速搭建平台快速开发，官网目前已经关闭，并在github提供开源，很好的一个东西。</p><h2 id="0x01-环境要求"><a href="#0x01-环境要求" class="headerlink" title="0x01 环境要求"></a>0x01 环境要求</h2><h3 id="1、MongoDB数据库"><a href="#1、MongoDB数据库" class="headerlink" title="1、MongoDB数据库"></a>1、MongoDB数据库</h3><p>1）下载命令如下：<br>curl -O <a href="https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.4.2.tgz" target="_blank" rel="noopener">https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.4.2.tgz</a> </p><p>tar -xvf mongodb-linux-x86_64-3.4.2.tgz 2）移动目录，配置环境变量： mv mongodb-linux-x86_64-3.4.2 /opt/mongodb</p><p>export PATH=<mongodb-install-directory>/bin:$PATH </mongodb-install-directory></p><p>我的<mongodb-install-directory>就是/opt/mongodb</mongodb-install-directory></p><p>3）创建数据库目录：<br>mkdir -p /data/db</p><p>/data/db 是 MongoDB 默认的启动的数据库路径(–dbpath)</p><p>4）执行mongod命令启动数据库</p><h3 id="2、Nodejs"><a href="#2、Nodejs" class="headerlink" title="2、Nodejs"></a>2、Nodejs</h3><pre><code>curl --silent --location https://rpm.nodesource.com/setup_6.x | bash -yum -y install nodejsyum install gcc-c++ make</code></pre><p><a href="https://github.com/ParsePlatform/docs" target="_blank" rel="noopener"> https://github.com/ParsePlatform/docs</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;Parse是Facebook很有名的一个项目，能够帮助目前很多应用快速搭建平台快速开发，官网目前已经
      
    
    </summary>
    
      <category term="服务端开发" scheme="http://www.hndev.cn/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="parse" scheme="http://www.hndev.cn/tags/parse/"/>
    
      <category term="saas" scheme="http://www.hndev.cn/tags/saas/"/>
    
  </entry>
  
  <entry>
    <title>Linux下Gitblit的安装</title>
    <link href="http://www.hndev.cn/2017/03/05/Linux%E4%B8%8BGitblit%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://www.hndev.cn/2017/03/05/Linux下Gitblit的安装/</id>
    <published>2017-03-05T08:59:02.000Z</published>
    <updated>2018-12-08T02:01:12.724Z</updated>
    
    <content type="html"><![CDATA[<p>直接进入正题（下列操作都是以root用户执行）：</p><h3 id="1、去官网下载gitblit-1-8-0-tar-gz，我使用的是Go语言版本；"><a href="#1、去官网下载gitblit-1-8-0-tar-gz，我使用的是Go语言版本；" class="headerlink" title="1、去官网下载gitblit-1.8.0.tar.gz，我使用的是Go语言版本；"></a>1、去官网下载gitblit-1.8.0.tar.gz，我使用的是Go语言版本；</h3><h3 id="2、解压下载包"><a href="#2、解压下载包" class="headerlink" title="2、解压下载包"></a>2、解压下载包</h3><p>tar -xvf gitblit-1.8.0.tar.gz</p><h3 id="3、把解压的目录移动并改名"><a href="#3、把解压的目录移动并改名" class="headerlink" title="3、把解压的目录移动并改名"></a>3、把解压的目录移动并改名</h3><p>mv gitblit-1.8.0 /opt/gitblit</p><h3 id="4、编辑配置文件"><a href="#4、编辑配置文件" class="headerlink" title="4、编辑配置文件"></a>4、编辑配置文件</h3><p>vim /opt/gitblit/data/defaults.properties 我们只需要关注server.httpPort和server.httpsPort，就是访问的Web端口</p><h3 id="5、配置完成后可以执行脚本，初始化数据"><a href="#5、配置完成后可以执行脚本，初始化数据" class="headerlink" title="5、配置完成后可以执行脚本，初始化数据"></a>5、配置完成后可以执行脚本，初始化数据</h3><p>cd /opt/gitblit/ ./gitblit.sh 通过浏览器能够正常访问gitblit，这一步已经完成了基本部署。</p><h3 id="6、配置为服务，我使用的是Centos系统，执行如下"><a href="#6、配置为服务，我使用的是Centos系统，执行如下" class="headerlink" title="6、配置为服务，我使用的是Centos系统，执行如下"></a>6、配置为服务，我使用的是Centos系统，执行如下</h3><p>cd /opt/gitblit ./install-service-centos.sh</p><h3 id="7、启动服务"><a href="#7、启动服务" class="headerlink" title="7、启动服务"></a>7、启动服务</h3><p>service gitblit start 大功告成，谢谢。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;直接进入正题（下列操作都是以root用户执行）：&lt;/p&gt;
&lt;h3 id=&quot;1、去官网下载gitblit-1-8-0-tar-gz，我使用的是Go语言版本；&quot;&gt;&lt;a href=&quot;#1、去官网下载gitblit-1-8-0-tar-gz，我使用的是Go语言版本；&quot; class=
      
    
    </summary>
    
      <category term="开发工具" scheme="http://www.hndev.cn/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="gitblit" scheme="http://www.hndev.cn/tags/gitblit/"/>
    
  </entry>
  
  <entry>
    <title>ionic下native触发js事件</title>
    <link href="http://www.hndev.cn/2017/02/21/ionic%E4%B8%8Bnative%E8%A7%A6%E5%8F%91js%E4%BA%8B%E4%BB%B6/"/>
    <id>http://www.hndev.cn/2017/02/21/ionic下native触发js事件/</id>
    <published>2017-02-21T15:09:35.000Z</published>
    <updated>2018-12-08T01:25:04.577Z</updated>
    
    <content type="html"><![CDATA[<p>说明一下本地层回调js事件的应用场景，推送、后台任务提醒、即时通讯等等；</p><h2 id="一、在www-js-app-js中增加如下回调函数："><a href="#一、在www-js-app-js中增加如下回调函数：" class="headerlink" title="一、在www/js/app.js中增加如下回调函数："></a>一、在www/js/app.js中增加如下回调函数：</h2><p>$ionicPlatform.ready(function() {<br>     if (window.cordova &amp;&amp; window.cordova.plugins &amp;&amp; window.cordova.plugins.Keyboard) {<br>         cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);<br>         cordova.plugins.Keyboard.disableScroll(true);</p><pre><code>}if (window.StatusBar) {    // org.apache.cordova.statusbar required    StatusBar.styleDefault();}//注册事件函数var onReceiveMaple = function(event) {</code></pre><p> alert(event.msg);<br> };<br> document.addEventListener(“hndev.receiveMessage”, onReceiveMaple, false);</p><p> });</p><h2 id="二、在iOS插件中执行js命令，其它平台类似"><a href="#二、在iOS插件中执行js命令，其它平台类似" class="headerlink" title="二、在iOS插件中执行js命令，其它平台类似"></a>二、在iOS插件中执行js命令，其它平台类似</h2><p>CDVPlugin.commandDelegate evalJs:[NSString stringWithFormat:@”cordova.fireDocumentEvent(‘hndev.%@’,%@)”, eventName, jsString]];</p><p>参数eventName为receiveMessage 参数jsString为传入回调函数的对象，必须为json。如 {“msg”:”Hello Maple!”}</p><h2 id="三、详细可以参考极光推送的实现"><a href="#三、详细可以参考极光推送的实现" class="headerlink" title="三、详细可以参考极光推送的实现"></a>三、详细可以参考极光推送的实现</h2><p><a href="https://github.com/jpush/jpush-phonegap-plugin" target="_blank" rel="noopener">https://github.com/jpush/jpush-phonegap-plugin</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;说明一下本地层回调js事件的应用场景，推送、后台任务提醒、即时通讯等等；&lt;/p&gt;
&lt;h2 id=&quot;一、在www-js-app-js中增加如下回调函数：&quot;&gt;&lt;a href=&quot;#一、在www-js-app-js中增加如下回调函数：&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="混合开发" scheme="http://www.hndev.cn/categories/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="cordova" scheme="http://www.hndev.cn/tags/cordova/"/>
    
      <category term="ionic" scheme="http://www.hndev.cn/tags/ionic/"/>
    
  </entry>
  
  <entry>
    <title>Mac OS下互联网共享无法连接问题</title>
    <link href="http://www.hndev.cn/2017/02/20/Mac%20OS%E4%B8%8B%E4%BA%92%E8%81%94%E7%BD%91%E5%85%B1%E4%BA%AB%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98/"/>
    <id>http://www.hndev.cn/2017/02/20/Mac OS下互联网共享无法连接问题/</id>
    <published>2017-02-20T07:57:18.000Z</published>
    <updated>2018-12-08T02:15:20.414Z</updated>
    
    <content type="html"><![CDATA[<p>这个问题折腾我好久了，今天终于解决了，如果你也遇到请试试下列方法： 1、首先进入“系统偏好设置”-》“共享”，修改你的电脑名称，要求修改很简单的字母，如Maple； 2、如果你已经开启共享网络，请先关闭； 3、进入“系统偏好设置”-》“安全性与隐私”，选择“防火墙”，关闭防火墙。 4、删除以下文件：</p><pre><code>/Library/Preferences/SystemConfiguration/com.apple.nat.plist/Library/Preferences/SystemConfiguration/NetworkInterfaces.plist/Library/Preferences/SystemConfiguration/com.apple.airport.preferences.plist</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个问题折腾我好久了，今天终于解决了，如果你也遇到请试试下列方法： 1、首先进入“系统偏好设置”-》“共享”，修改你的电脑名称，要求修改很简单的字母，如Maple； 2、如果你已经开启共享网络，请先关闭； 3、进入“系统偏好设置”-》“安全性与隐私”，选择“防火墙”，关闭防
      
    
    </summary>
    
      <category term="操作系统" scheme="http://www.hndev.cn/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="mac os" scheme="http://www.hndev.cn/tags/mac-os/"/>
    
  </entry>
  
  <entry>
    <title>Cordova插件自定义iOS版</title>
    <link href="http://www.hndev.cn/2017/02/19/Cordova%E6%8F%92%E4%BB%B6%E8%87%AA%E5%AE%9A%E4%B9%89iOS%E7%89%88/"/>
    <id>http://www.hndev.cn/2017/02/19/Cordova插件自定义iOS版/</id>
    <published>2017-02-19T08:38:25.000Z</published>
    <updated>2018-12-08T01:41:11.385Z</updated>
    
    <content type="html"><![CDATA[<p>Cordova版本：6.0.0</p><h2 id="一、参考官网搭建基本环境"><a href="#一、参考官网搭建基本环境" class="headerlink" title="一、参考官网搭建基本环境"></a>一、参考官网搭建基本环境</h2><p><a href="http://cordova.apache.org/#getstarted" target="_blank" rel="noopener">http://cordova.apache.org/#getstarted</a> 1、npm install -g cordova 2、cordova create helloPlugin 3、cordova platform add ios 4、cordova run ios 按照上述操作已经搭建好了一个测试环境，我们做好后的插件就是在helloPlugin项目中做测试。</p><h2 id="二、继续参考官方文档搭建插件管理环境"><a href="#二、继续参考官方文档搭建插件管理环境" class="headerlink" title="二、继续参考官方文档搭建插件管理环境"></a>二、继续参考官方文档搭建插件管理环境</h2><p><a href="http://cordova.apache.org/docs/zh-cn/6.x/plugin_ref/plugman.html" target="_blank" rel="noopener">http://cordova.apache.org/docs/zh-cn/6.x/plugin_ref/plugman.html</a> 1、npm install -g plugman 2、 plugman create –name dialog –plugin_id cordova-plugin-dialog –plugin_version 0.1 –variable author=Maple 上述命令执行完，我们已经创建了一个插件目录。</p><h2 id="三、编写iOS版插件，其它平台类似"><a href="#三、编写iOS版插件，其它平台类似" class="headerlink" title="三、编写iOS版插件，其它平台类似"></a>三、编写iOS版插件，其它平台类似</h2><p><a href="http://cordova.apache.org/docs/zh-cn/6.x/guide/platforms/ios/plugin.html" target="_blank" rel="noopener">http://cordova.apache.org/docs/zh-cn/6.x/guide/platforms/ios/plugin.html</a> 1、参考官方文档创建一个iOS插件类： HndevDialog.h:</p><p>#import &lt;UIKit/UIKit.h&gt;</p><p>#import &lt;Cordova/CDVPlugin.h&gt;</p><p>@interface HndevDialog : CDVPlugin</p><p>- (void)showMessageBox:(CDVInvokedUrlCommand*)command;</p><p>@end</p><p>HndevDialog.m:</p><p>#import “HndevDialog.h”</p><p>@implementation HndevDialog</p><p>- (void)showMessageBox:(CDVInvokedUrlCommand<em>)command<br>{<br>    CDVPluginResult</em> pluginResult = nil;<br>    if (command.arguments.count == 2) {<br>        NSString<em> title = [command.arguments objectAtIndex:0];<br>        NSString</em> message = [command.arguments objectAtIndex:1];<br>        UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:title message:message delegate:nil cancelButtonTitle:@”Cancel” otherButtonTitles:nil, nil];<br>        [alertView show];<br>        pluginResult = [CDVPluginResult resultWithStatus:CDVCommandStatus_OK];<br>    }<br>    else<br>    {<br>        pluginResult = [CDVPluginResult resultWithStatus:CDVCommandStatus_ERROR messageAsString:@”Arg was invalid.”];<br>    }<br>    [self.commandDelegate sendPluginResult:pluginResult callbackId:command.callbackId];<br>}</p><p>@end</p><p>把上述两个文件放到插件工程dialog/src/ios/目录下。编写上述类时可以使用xcode开发工具进行编写，编译没问题再直接拷过来。 2、修改dialog/plugin.xml文件</p><p>&lt;?xml version=’1.0’ encoding=’utf-8’?&gt;</p><plugin id="cordova-plugin-dialog" version="0.1" xmlns="http://apache.org/cordova/ns/plugins/1.0" xmlns:android="http://schemas.android.com/apk/res/android"><br> <name>dialog</name><br> <author>Maple</author><br> <js-module name="dialog" src="www/dialog.js"><br>     <clobbers target="cordova.plugins.dialog"><br> </clobbers></js-module><br> <platform name="ios"><br>     <config-file target="config.xml" parent="/*"><br>         <feature name="HndevDialog"><br>             <param name="ios-package" value="HndevDialog"><br>         </feature><br>     </config-file><br><br>     <header-file src="src/ios/HndevDialog.h"><br>     <source-file src="src/ios/HndevDialog.m"><br> </source-file></header-file></platform><br></plugin><p>3、修改dialog/www/dialog.js文件</p><p>var exec = require(‘cordova/exec’);</p><p>exports.show = function(title, msg, success, error) {<br>    exec(success, error, “HndevDialog”, “showMessageBox”, [title, msg]);<br>};</p><p>到此插件的代码基本完成。</p><h2 id="四、安装插件并验证可用性"><a href="#四、安装插件并验证可用性" class="headerlink" title="四、安装插件并验证可用性"></a>四、安装插件并验证可用性</h2><p>回到第一章我们创建的helloPlugin项目目录 1、 cordova plugin add /Users/maple/Documents/ionic/dialog 上面的路径就是你的插件绝对路径。 2、在helloPlugin/www/js/index.js增加测试代码:</p><p>var app = {<br> // Application Constructor<br> initialize: function() {<br> this.bindEvents();<br> },<br> // Bind Event Listeners<br> //<br> // Bind any events that are required on startup. Common events are:<br> // ‘load’, ‘deviceready’, ‘offline’, and ‘online’.<br> bindEvents: function() {<br> document.addEventListener(‘deviceready’, this.onDeviceReady, false);<br> },<br> // deviceready Event Handler<br> //<br> // The scope of ‘this’ is the event. In order to call the ‘receivedEvent’<br> // function, we must explicitly call ‘app.receivedEvent(…);’<br> onDeviceReady: function() {<br>     app.receivedEvent(‘deviceready’);<br> var dialog = cordova.require(‘cordova-plugin-dialog.dialog’);<br> dialog.show(‘Dialog Title’, ‘Hello Maple!’,function() {</p><p> }, function(message) {<br> alert(message);<br> });</p><p> },<br> // Update DOM on a Received Event<br> receivedEvent: function(id) {<br> var parentElement = document.getElementById(id);<br> var listeningElement = parentElement.querySelector(‘.listening’);<br> var receivedElement = parentElement.querySelector(‘.received’);</p><p> listeningElement.setAttribute(‘style’, ‘display:none;’);<br> receivedElement.setAttribute(‘style’, ‘display:block;’);</p><p> console.log(‘Received Event: ‘ + id);<br> }<br>};</p><p>app.initialize();</p><p>3、cordova run ios 执行效果如图： <img src="http://www.hndev.cn/wordpress/wp-content/uploads/2017/02/result.jpeg" alt="result"> 大功告成，附上插件源码：<a href="https://github.com/angelmeng86/cordova-plugin-dialog" target="_blank" rel="noopener">https://github.com/angelmeng86/cordova-plugin-dialog</a> 谢谢支持！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Cordova版本：6.0.0&lt;/p&gt;
&lt;h2 id=&quot;一、参考官网搭建基本环境&quot;&gt;&lt;a href=&quot;#一、参考官网搭建基本环境&quot; class=&quot;headerlink&quot; title=&quot;一、参考官网搭建基本环境&quot;&gt;&lt;/a&gt;一、参考官网搭建基本环境&lt;/h2&gt;&lt;p&gt;&lt;a href
      
    
    </summary>
    
      <category term="混合开发" scheme="http://www.hndev.cn/categories/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="cordova" scheme="http://www.hndev.cn/tags/cordova/"/>
    
  </entry>
  
  <entry>
    <title>ionic 安装问题汇总</title>
    <link href="http://www.hndev.cn/2017/02/14/ionic%20%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://www.hndev.cn/2017/02/14/ionic 安装问题汇总/</id>
    <published>2017-02-14T14:33:37.000Z</published>
    <updated>2018-12-08T01:40:35.505Z</updated>
    
    <content type="html"><![CDATA[<p>一、ionic info出现如下警告 <strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong> Dependency warning - for the CLI to run correctly, it is highly recommended to install/upgrade the following: Please install your Cordova CLI to version  &gt;=4.2.0 `npm install -g cordova` <strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong> 解决办法： sudo npm install -g <a href="mailto:cordova@6.0.0" target="_blank" rel="noopener">cordova@6.0.0</a>   二、ios-deploy无法安装 解决办法： sudo npm install -g ios-deploy –unsafe-perm=true   三、ionic run ios –device真机调试失败 解决办法： 进入到项目目录platform/ios中，打开xcode项目，然后配置所使用的开发者账号和签名</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一、ionic info出现如下警告 &lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;/s
      
    
    </summary>
    
      <category term="混合开发" scheme="http://www.hndev.cn/categories/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ionic" scheme="http://www.hndev.cn/tags/ionic/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发小记</title>
    <link href="http://www.hndev.cn/2016/12/12/iOS%E5%BC%80%E5%8F%91%E5%B0%8F%E8%AE%B0/"/>
    <id>http://www.hndev.cn/2016/12/12/iOS开发小记/</id>
    <published>2016-12-12T12:22:20.000Z</published>
    <updated>2018-12-08T02:00:06.026Z</updated>
    
    <content type="html"><![CDATA[<p>20150808 在使用nib加载view时，千万注意锚定功能合理选择，不然将会导致不可预知的高度缩放问题，因为iOS7以上版本，页面在加载时一般会进行一次缩放，这样它同时会对里面的控件也进行相应的缩放操作，谨记！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;20150808 在使用nib加载view时，千万注意锚定功能合理选择，不然将会导致不可预知的高度缩放问题，因为iOS7以上版本，页面在加载时一般会进行一次缩放，这样它同时会对里面的控件也进行相应的缩放操作，谨记！&lt;/p&gt;

      
    
    </summary>
    
      <category term="移动端开发" scheme="http://www.hndev.cn/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ios" scheme="http://www.hndev.cn/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>iOS UIScroll的一个BUG</title>
    <link href="http://www.hndev.cn/2016/12/12/iOS%20UIScroll%E7%9A%84%E4%B8%80%E4%B8%AABUG/"/>
    <id>http://www.hndev.cn/2016/12/12/iOS UIScroll的一个BUG/</id>
    <published>2016-12-12T12:18:01.000Z</published>
    <updated>2018-12-08T02:00:01.416Z</updated>
    
    <content type="html"><![CDATA[<p>之前发现了个UIScroll的BUG，让我郁闷半天，就是当继承该类时，如果使用init方法初始化，其将依次调用initWithFrame和init。真的很让人费解。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前发现了个UIScroll的BUG，让我郁闷半天，就是当继承该类时，如果使用init方法初始化，其将依次调用initWithFrame和init。真的很让人费解。&lt;/p&gt;

      
    
    </summary>
    
      <category term="移动端开发" scheme="http://www.hndev.cn/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="ios" scheme="http://www.hndev.cn/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Android驱动设备节点自动创建</title>
    <link href="http://www.hndev.cn/2016/10/19/Android%E9%A9%B1%E5%8A%A8%E8%AE%BE%E5%A4%87%E8%8A%82%E7%82%B9%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA/"/>
    <id>http://www.hndev.cn/2016/10/19/Android驱动设备节点自动创建/</id>
    <published>2016-10-19T03:08:15.000Z</published>
    <updated>2018-12-08T01:58:17.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h2><p>最近帮同事解决一个问题，就是在Ubuntu（主机）下编译的USB驱动程序，在设备热插拔的时候会自动创建设备节点，但是该驱动程序移植到Android系统下，则需要手动创建节点，该节点还需要手工配置DAC和MAC安全策略，对于实际使用中非常麻烦；</p><h2 id="0x01-问题分析及解决"><a href="#0x01-问题分析及解决" class="headerlink" title="0x01 问题分析及解决"></a>0x01 问题分析及解决</h2><p>参见文章《<a href="http://blog.chinaunix.net/uid-24545924-id-3128349.html" target="_blank" rel="noopener">Android Uevent 分析，从kernel到framework</a> 》 我们知道Android上层的uevent事件使用了自个的一套实现，接下来我们开发分析代码，源码文件：system/core/init/devices.c</p><p>static void handle_generic_device_event(struct uevent <em>uevent)<br>{<br>    char </em>base;<br>    const char *name;<br>    char devpath[DEVPATH_LEN] = {0};<br>    char **links = NULL;</p><pre><code>INFO(&quot;lwz usb: generic\_device\_event start\\n&quot;);name = parse\_device\_name(uevent, 64);if (!name)    return;</code></pre><p>//打印收到的热插拔事件信息<br>INFO(“maple usb1: device_name:%s, major:%d, minor:%d, action:%s name:%s\n”,  uevent-&gt;device_name, uevent-&gt;major, uevent-&gt;minor, uevent-&gt;action, name);<br>    struct ueventd_subsystem *subsystem =<br>            ueventd_subsystem_find_by_name(uevent-&gt;subsystem);</p><pre><code>if (subsystem) {    const char *devname;    switch (subsystem-&gt;devname_src) {    case DEVNAME\_UEVENT\_DEVNAME:        devname = uevent-&gt;device_name;        break;    case DEVNAME\_UEVENT\_DEVPATH:        devname = name;        break;    default:        ERROR(&quot;%s subsystem&apos;s devpath option is not set; ignoring event\\n&quot;,                uevent-&gt;subsystem);        return;    }    if (!assemble_devpath(devpath, subsystem-&gt;dirname, devname))        return;    mkdir\_recursive\_for_devpath(devpath);} else if (!strncmp(uevent-&gt;subsystem, &quot;usb&quot;, 3)) {     if (!strcmp(uevent-&gt;subsystem, &quot;usb&quot;)) {        if (uevent-&gt;device_name) {            if (!assemble\_devpath(devpath, &quot;/dev&quot;, uevent-&gt;device\_name))                return;            mkdir\_recursive\_for_devpath(devpath);         }         else {             /\* This imitates the file system that would be created              \* if we were using devfs instead.              \* Minors are broken up into groups of 128, starting at &quot;001&quot;              */             int bus_id = uevent-&gt;minor / 128 + 1;             int device_id = uevent-&gt;minor % 128 + 1;             /\* build directories */             make_dir(&quot;/dev/bus&quot;, 0755);             make_dir(&quot;/dev/bus/usb&quot;, 0755);             snprintf(devpath, sizeof(devpath), &quot;/dev/bus/usb/%03d&quot;, bus_id);             make_dir(devpath, 0755);             snprintf(devpath, sizeof(devpath), &quot;/dev/bus/usb/%03d/%03d&quot;, bus\_id, device\_id);         }     } else {         /\* ignore other USB events */         //忽略一些不符合上述条件的USB事件，并返回    INFO(&quot;maple usb: ignore other USB events\\n&quot;);         //我这里是通过判断创建的节点名称是否是我们想要的，如果是则继续往下执行进行节点的创建和移除操作     if(!strncmp(uevent-&gt;device_name, &quot;myusb&quot;, 5)) {    base = &quot;/dev/&quot;;         }         else         return;     } } else if (!strncmp(uevent-&gt;subsystem, &quot;graphics&quot;, 8)) {     base = &quot;/dev/graphics/&quot;;     make_dir(base, 0755); } else if (!strncmp(uevent-&gt;subsystem, &quot;drm&quot;, 3)) {     base = &quot;/dev/dri/&quot;;     make_dir(base, 0755); } else if (!strncmp(uevent-&gt;subsystem, &quot;oncrpc&quot;, 6)) {     base = &quot;/dev/oncrpc/&quot;;     make_dir(base, 0755); } else if (!strncmp(uevent-&gt;subsystem, &quot;adsp&quot;, 4)) {     base = &quot;/dev/adsp/&quot;;     make_dir(base, 0755); } else if (!strncmp(uevent-&gt;subsystem, &quot;msm_camera&quot;, 10)) {     base = &quot;/dev/msm_camera/&quot;;     make_dir(base, 0755); } else if(!strncmp(uevent-&gt;subsystem, &quot;input&quot;, 5)) {     base = &quot;/dev/input/&quot;;     make_dir(base, 0755); } else if(!strncmp(uevent-&gt;subsystem, &quot;mtd&quot;, 3)) {     base = &quot;/dev/mtd/&quot;;     make_dir(base, 0755); } else if(!strncmp(uevent-&gt;subsystem, &quot;sound&quot;, 5)) {     base = &quot;/dev/snd/&quot;;     make_dir(base, 0755); } else if(!strncmp(uevent-&gt;subsystem, &quot;misc&quot;, 4) &amp;&amp;             !strncmp(name, &quot;log_&quot;, 4)) {     kernel_logger();     base = &quot;/dev/log/&quot;;     make_dir(base, 0755);     name += 4; } else if (!strncmp(uevent-&gt;subsystem, &quot;dvb&quot;, 3)) {     /\* This imitates the file system that would be created      \* if we were using devfs instead to preserve backward compatibility      \* for users of dvb devices      */     int adapter_id;     char dev_name\[20\] = {0};     sscanf(name, &quot;dvb%d.%s&quot;, &amp;adapter\_id, dev\_name);     /\* build dvb directory */     base = &quot;/dev/dvb&quot;;     mkdir(base, 0755);     /\* build adapter directory */     snprintf(devpath, sizeof(devpath), &quot;/dev/dvb/adapter%d&quot;, adapter_id);     mkdir(devpath, 0755);     /\* build actual device directory */     snprintf(devpath, sizeof(devpath), &quot;/dev/dvb/adapter%d/%s&quot;,              adapter\_id, dev\_name); } else     base = &quot;/dev/&quot;; links = get\_character\_device_symlinks(uevent); if (!links)     links = get\_v4l\_device_symlinks(uevent); if (!devpath\[0\])     snprintf(devpath, sizeof(devpath), &quot;%s%s&quot;, base, name);//开始进行热插拔处理，包括设备节点的创建和移除，可参考相关代码继续分析INFO(&quot;maple usb: devpath %s, major:%d, minor:%d, action:%s\\n&quot;, devpath, uevent-&gt;major, uevent-&gt;minor, uevent-&gt;action); handle_device(uevent-&gt;action, devpath, uevent-&gt;path, 0,         uevent-&gt;major, uevent-&gt;minor, links);</code></pre><p>}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x00-背景&quot;&gt;&lt;a href=&quot;#0x00-背景&quot; class=&quot;headerlink&quot; title=&quot;0x00 背景&quot;&gt;&lt;/a&gt;0x00 背景&lt;/h2&gt;&lt;p&gt;最近帮同事解决一个问题，就是在Ubuntu（主机）下编译的USB驱动程序，在设备热插拔的时候会自动创
      
    
    </summary>
    
      <category term="移动端开发" scheme="http://www.hndev.cn/categories/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="android" scheme="http://www.hndev.cn/tags/android/"/>
    
  </entry>
  
</feed>
