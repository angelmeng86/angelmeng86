<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>君正x1000平台SPI接口使用</title>
      <link href="/%E5%90%9B%E6%AD%A3x1000%E5%B9%B3%E5%8F%B0SPI%E6%8E%A5%E5%8F%A3%E4%BD%BF%E7%94%A8.html"/>
      <url>/%E5%90%9B%E6%AD%A3x1000%E5%B9%B3%E5%8F%B0SPI%E6%8E%A5%E5%8F%A3%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-平台环境"><a href="#0x00-平台环境" class="headerlink" title="0x00 平台环境"></a>0x00 平台环境</h2><ul><li>开发板 X1000_HALLEY2_BASEBOARD_V4.1</li><li>源码版本 ingenic-linux-kernel3.10.14-x1000-v8.2-20181116</li></ul><h2 id="0x01-源码编译"><a href="#0x01-源码编译" class="headerlink" title="0x01 源码编译"></a>0x01 源码编译</h2><p>参照官方文档《Manhattan_platform 编译系统使用指南》，进行一次完整编译。</p><h2 id="0x02-SPI配置"><a href="#0x02-SPI配置" class="headerlink" title="0x02 SPI配置"></a>0x02 SPI配置</h2><p>参考官方文档《X1000软件开发手册V4.2》中的SPI模块章节进行一步一步配置。<br>需要注意的是，该开发板中由于SFC模块被用于spi nor flash，已被占用，所以改用SSI0接口复用为标准SPI接口。</p><ul><li><p>配置spi_board_info和spi_info<br>文件arch/mips/xburst/soc-x1000/chip-x1000/halley2/common/spi_bus.c</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#if defined(CONFIG_JZ_SPI0) || defined(CONFIG_SPI_GPIO)</span></span><br><span class="line"><span class="string">//</span>注：如果有多个SPI接口可以对该数组进行扩展</span><br><span class="line">struct spi_board_info jz_spi0_board_info[] = &#123;</span><br><span class="line">[0] = &#123;</span><br><span class="line"><span class="string">.modalias</span> = <span class="string">"spidev"</span>,<span class="string">//</span>设备名称，与驱动名称相匹配</span><br><span class="line"><span class="string">.platform_data</span> = NULL,    <span class="string">//device</span> private data</span><br><span class="line"><span class="string">.max_speed_hz</span> = 50000000, <span class="string">//</span>设置总线最大支持频率</span><br><span class="line"><span class="string">.bus_num</span> = 0,    <span class="string">//bus</span> num</span><br><span class="line"><span class="string">.chip_select</span> = 0,    <span class="string">//chip</span> select</span><br><span class="line"><span class="string">.mode</span> = 0,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">int jz_spi0_devs_size = ARRAY_SIZE<span class="params">(jz_spi0_board_info)</span>;</span><br><span class="line"><span class="comment">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ifdef CONFIG_JZ_SPI0</span></span><br><span class="line">struct jz_spi_info spi0_info_cfg = &#123;</span><br><span class="line"><span class="string">.chnl</span> = 0,</span><br><span class="line"><span class="string">.bus_num</span> = 0,</span><br><span class="line"><span class="string">.max_clk</span> = 54000000,<span class="string">//SPI</span>支持的最大时钟</span><br><span class="line"><span class="string">.num_chipselect</span> = 1,<span class="string">//</span>支持的芯片片选数，根据需要配置</span><br><span class="line"><span class="string">.allow_cs_same</span>  = 1,</span><br><span class="line"><span class="string">.chipselect</span>     = &#123;GPIO_PD<span class="params">(1)</span>,GPIO_PD<span class="params">(1)</span>&#125;,<span class="string">//</span>片选引脚定义，这里是有PD1管脚</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">#endif</span></span><br></pre></td></tr></table></figure></li><li><p>SPI驱动相关文件</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kernel/drivers/spi/</span><br><span class="line">├── jz_spi.c</span><br><span class="line">├── jz_spi.h</span><br><span class="line">├── spi-bitbang.c</span><br><span class="line">├── spi.c</span><br><span class="line">├── spidev.c</span><br></pre></td></tr></table></figure></li><li><p>内核编译配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> kernel</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make menuconfig</span></span><br></pre></td></tr></table></figure></li></ul><p>进入菜单Device Drivers -&gt; SPI support (SPI [=y])<br><img src="/upload/201812/2018121001.PNG" alt=""><br><img src="/upload/201812/2018121002.PNG" alt=""><br>另外测试发现SSI0_DR管脚被摄像头占用，需要屏蔽掉摄像头相关驱动<br>进入菜单Device Drivers -&gt; Multimedia support -&gt; Sensors used on soc_camera driver<br><img src="/upload/201812/2018121003.PNG" alt=""></p><h2 id="0x03-测试SPI接口"><a href="#0x03-测试SPI接口" class="headerlink" title="0x03 测试SPI接口"></a>0x03 测试SPI接口</h2><p>在packages/example/Sample/spi目录下，官方意见提供spi的demo，根据需要自行修改，最后连接SPI从设备测试SPI通信。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> x1000 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>单片机开发遇到的坑和填坑办法</title>
      <link href="/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%E5%92%8C%E5%A1%AB%E5%9D%91%E5%8A%9E%E6%B3%95.html"/>
      <url>/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%E5%92%8C%E5%A1%AB%E5%9D%91%E5%8A%9E%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<p><strong>一、IDE在线调试问题，点击调试遇到Fail to read registers，该问题有可能是设备当前运行的程序存在低功耗休眠的代码，导致芯片进入休眠状态无法调试，可以先暂时屏蔽低功耗代码进行相关工程代码的调试。 </strong></p><p><strong>二、单片机时钟产生可以通过内部振荡器进行产生，也可以接入外部晶振，它们的区别在于：内部振荡器产生的时钟频率由于工艺问题会产生或多或少的偏差值，而外部晶振的误差非常小，但是会额外占用实际布板的面积；实际设计中需要根据具体需求进行选型。 </strong></p><p><strong>三、调试技巧 </strong></p><p>1、波特率调试可以发送0x0a字符，然后使用示波器观察0101的电平跳变的周期，然后算出频率。<br>2、断点调试时，有可能会错过后续的中断；如串口接收数据时，断点在中断函数中，就会错过本次后续的中断信息及数据。<br>3、一条语句执行的耗时计算<br>1）在函数前将某一GPIO置高，函数执行完后将GPIO置低，通过示波器测量该IO的脉宽；<br>2）通过系统时钟计数器，函数执行前后对系统时钟进行计数采样，算出差值（注意时钟计数翻转问题），该方式精确度高。 </p><p><strong>四、当牵扯到DMA操作时，传入的地址必须是SRAM，而不能是其它如EFlash的地址，而且地址必须是对齐的；我之前在做证书认证时候为了节省内存资源，把EFlash的证书地址直接传入进行运算，发现在进行SM3运算时结果不对，最终定位到了上述DMA操作的情况，目前已解决。 </strong></p><p><strong>五、在实际的两个ECU通信中，不管是串口通信还是SPI通信，都需要把两个ECU的GND接到一块，就是共地，不然会出现数据不一致的现象，谨记！ </strong></p><p><strong>六、根据所使用的单片机采用位宽进行赋值拷贝优化，可以有效减少处理数据的时钟周期。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>单片机开发基础概念篇</title>
      <link href="/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E7%AF%87.html"/>
      <url>/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E7%AF%87.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、SPI总线"><a href="#一、SPI总线" class="headerlink" title="一、SPI总线 "></a>一、SPI总线 </h2><p>SPI接口是Motorola 首先提出的全双工三线同步串行外围接口，采用主从模式（Master Slave）架构；支持多slave模式应用，一般仅支持单Master。<br>时钟由Master控制，在时钟移位脉冲下，数据按位传输，高位在前，低位在后（MSB first）；SPI接口有2根单向数据线，为全双工通信，目前应用中的数据速率可达几Mbps的水平。<br>一般应用4根信号线：<br>MOSI：主器件数据输出，从器件数据输入<br>MISO：主器件数据输入，从器件数据输出<br>SCK：时钟信息，由主设备控制发出<br>SS：从设备选择信号，由主设备控制   </p><p>根据时钟极性（CPOL）和相位（CPHA）组成4种工作模式：<br>SPI0：CPOL=0,CPHA=0<br>SPI1：CPOL=0,CPHA=1<br>SPI2：CPOL=1,CPHA=0<br>SPI3：CPOL=1,CPHA=1<br>其中SPI0和SPI3为常用   </p><h2 id="二、QFP"><a href="#二、QFP" class="headerlink" title="二、QFP "></a>二、QFP </h2><p>方型扁平式封装技术（Plastic Quad Flat Package），该技术实现的CPU芯片引脚之间距离很小，管脚很细，一般大规模或超大规模集成电路采用这种封装形式，其引脚数一般都在100以上。该技术封装CPU时操作方便，可靠性高；而且其封装外形尺寸较小，寄生参数减小，适合高频应用；该技术主要适合用SMT表面安装技术在PCB上安装布线。   </p><h2 id="三、SRAM"><a href="#三、SRAM" class="headerlink" title="三、SRAM "></a>三、SRAM </h2><p>SRAM（静态随机存取存储器）不需要刷新电路即能保存它内部存储的数据。而DRAM（Dynamic Random Access Memory)每隔一段时间，要刷新充电一次，否则内部的数据即会消失，因此SRAM具有较高的性能，功耗较小，但是SRAM也有它的缺点，即它的集成度较低，相同容量的DRAM内存可以设计为较小的体积，但是SRAM却需要很大的体积。同样面积的硅片可以做出更大容量的DRAM，因此SRAM显得更贵。   </p><h2 id="四、I2C"><a href="#四、I2C" class="headerlink" title="四、I2C"></a>四、I2C</h2><p>总线 I2C（Inter－Integrated Circuit）总线是由PHILIPS公司开发的两线式串行总线，用于连接微控制器及其外围设备。是微电子通信控制领域广泛采用的一种总线标准。它是同步通信的一种特殊形式，具有接口线少，控制方式简单，器件封装形式小，通信速率较高等优点。I2C 总线支持任何IC 生产工艺(CMOS、双极型）。通过串行数据（SDA）线和串行时钟 （SCL）线在连接到总线的器件间传递信息。每个器件都有一个唯一的地址识别（无论是微控制器——MCU、LCD 驱动器、存储器或键盘接口），而且都可以作为一个发送器或接收器（由器件的功能决定）。LCD 驱动器只能作为接收器，而存储器则既可以接收又可以发送数据。除了发送器和接收器外，器件在执行数据传输时也可以被看作是主机或从机（见表1）。主机是初始化总线的数据传输并产生允许传输的时钟信号的器件。此时，任何被寻址的器件都被认为是从机。<br>I2C总线（I2C bus，Inter-IC bus）是一个双向的两线连续总线，提供集成电路（ICs）之间的通信线路。I2C总线是一种串行扩展技术，最早由Philips公司推出，广泛应用于电视，录像机和音频设备。I2C总线的意思是“完成集成电路或功能单元之间信息交换的规范或协议”。Philips公司推出的I2C总线采用一条数据线（SDA），加一条时钟线（SCL）来完成数据的传输及外围器件的扩展；对各个节点的寻址是软寻址方式，节省了片选线，标准的寻址字节SLAM为7位，可以寻址127个单元。<br>I2C总线有三种数据传输速度：标准，快速模式和高速模式。标准的是100Kbps，快速模式为400Kbps，高速模式支持快至3.4Mbps的速度。所有的与次之传输速度的模式都是兼容的。I2C总线支持7位和10位地址空间设备和在不同电压下运行的设备。 </p><h2 id="五、DMA（直接存储器访问）"><a href="#五、DMA（直接存储器访问）" class="headerlink" title="五、DMA（直接存储器访问） "></a>五、DMA（直接存储器访问） </h2><p>DMA(Direct Memory Access，直接内存存取) 是所有现代电脑的重要特色，它允许不同速度的硬件装置来沟通，而不需要依赖于 CPU 的大量中断负载。否则，CPU 需要从来源把每一片段的资料复制到暂存器，然后把它们再次写回到新的地方。在这个时间中，CPU 对于其他的工作来说就无法使用。<br>一个完整的DMA传输过程必须经过DMA请求、DMA响应、DMA传输、DMA结束4个步骤。<br>DMA技术的出现，使得外围设备可以通过DMA控制器直接访问内存，与此同时，CPU可以继续执行程序．那么DMA控制器与CPU怎样分时使用内存呢?通常采用以下三种方法：<br>(1)停止CPU访内存；<br>(2)周期挪用；<br>(3)DMA与CPU交替访问内存． </p><h2 id="六、Watchdog"><a href="#六、Watchdog" class="headerlink" title="六、Watchdog "></a>六、Watchdog </h2><p>看门狗，又叫 watchdog timer，是一个定时器电路，一般有一个输入，叫喂狗，一个输出到MCU的RST端，MCU正常工作的时候，每隔一段时间输出一个信号到喂狗端，给 WDT 清零，如果超过规定时间不喂狗(一般在程序跑飞时)，WDT 定时超过，就会给出一个复位信号到MCU，使MCU复位。防止MCU死机. 看门狗的作用就是防止程序发生死循环或者说程序跑飞。 </p><h2 id="七、QFN"><a href="#七、QFN" class="headerlink" title="七、QFN "></a>七、QFN </h2><p>QFN是一种无引脚封装，呈正方形或矩形，封装底部中央位置有一个大面积裸露焊盘用来导热，围绕大焊盘的封装外围四周有实现电气连结的导电焊盘。由于QFN封装不像传统的SOIC与TSOP封装那样具有鸥翼状引线，内部引脚与焊盘之间的导电路径短，自感系数以及封装体内布线电阻很低，所以它能提供卓越的电性能。此外，它还通过外露的引线框架焊盘提供了出色的散热性能，该焊盘具有直接散热通道，用于释放封装内的热量。通常将散热焊盘直接焊接在电路板上，并且PCB中的散热过孔有助于将多余的功耗扩散到铜接地板中，从而吸收多余的热量。 </p><h2 id="八、SCI、UART与RS232"><a href="#八、SCI、UART与RS232" class="headerlink" title="八、SCI、UART与RS232 "></a>八、SCI、UART与RS232 </h2><p>SCI（Serial Communication Interface)意为“串行通信接口”，是相对于并行通信的，是串行通信技术的一种总称，最早由Motolora公司提出的。 UART（Universal Asynchronous Receiver &amp; Transmitter)即通用异步收发器，是串行通信的一种协议，它规定串行通信的波特率、起始/停止位、数据位、校验位等格式，以及各种异步握手信号。<br>RS232是串行通信的一种物理接口电气标准，规定传输介质（电缆）、收发电平等。<br>其实，RS232、RS422、RS485等都是SCI，其中两线制（仅RXD和TXD）的RS232与RS422和RS485的通信协议是相同的（只有波特率、起始/停止位、数据位、校验位等参数），仅传输介质和收发电平不同</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>单片机开发遇到的经验总结（持续更新）</title>
      <link href="/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html"/>
      <url>/%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p>该文章记录自己在单片机开发调试过程中遇到的坑和解决办法；</p><h3 id="0x01-函数中声明大数组局部变量并初始化数据是一个非常耗时的操作，如果非要声明大数组，则声明时不进行初始化，根据需要进行部分初始化。"><a href="#0x01-函数中声明大数组局部变量并初始化数据是一个非常耗时的操作，如果非要声明大数组，则声明时不进行初始化，根据需要进行部分初始化。" class="headerlink" title="0x01 函数中声明大数组局部变量并初始化数据是一个非常耗时的操作，如果非要声明大数组，则声明时不进行初始化，根据需要进行部分初始化。"></a>0x01 函数中声明大数组局部变量并初始化数据是一个非常耗时的操作，如果非要声明大数组，则声明时不进行初始化，根据需要进行部分初始化。</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">u8</span> <span class="class"><span class="keyword">data</span>\[2048\] = &#123;0&#125;;//该声明会导致单片机进行memset耗时操作</span></span><br></pre></td></tr></table></figure><p>改为： </p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">u8 data<span class="tag">\<span class="name">[</span></span>2048<span class="tag">\<span class="name">]</span></span>; </span><br><span class="line">data<span class="tag">\<span class="name">[</span></span>0<span class="tag">\<span class="name">]</span>=<span class="number">0</span></span>x00;//根据具体业务进行赋值操作</span><br></pre></td></tr></table></figure><h3 id="0x02-中断优先级很重要，在没有使用嵌套中断的情况下，当有两个中断同时触发时将会按照优先级处理优先级高的中断，如果刚处理完优先级高的中断，然后又来了个优先级高的中断，则会继续处理高优先级中断，这种情况下很有可能导致低优先级的中断迟迟不能触发，最后引起低优先级中断丢失的可能性；"><a href="#0x02-中断优先级很重要，在没有使用嵌套中断的情况下，当有两个中断同时触发时将会按照优先级处理优先级高的中断，如果刚处理完优先级高的中断，然后又来了个优先级高的中断，则会继续处理高优先级中断，这种情况下很有可能导致低优先级的中断迟迟不能触发，最后引起低优先级中断丢失的可能性；" class="headerlink" title="0x02 中断优先级很重要，在没有使用嵌套中断的情况下，当有两个中断同时触发时将会按照优先级处理优先级高的中断，如果刚处理完优先级高的中断，然后又来了个优先级高的中断，则会继续处理高优先级中断，这种情况下很有可能导致低优先级的中断迟迟不能触发，最后引起低优先级中断丢失的可能性；"></a>0x02 中断优先级很重要，在没有使用嵌套中断的情况下，当有两个中断同时触发时将会按照优先级处理优先级高的中断，如果刚处理完优先级高的中断，然后又来了个优先级高的中断，则会继续处理高优先级中断，这种情况下很有可能导致低优先级的中断迟迟不能触发，最后引起低优先级中断丢失的可能性；</h3>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>iOS苹果应用上架（五）Xcode工程配置及打包上传</title>
      <link href="/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%BA%94%EF%BC%89Xcode%E5%B7%A5%E7%A8%8B%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%89%93%E5%8C%85%E4%B8%8A%E4%BC%A0.html"/>
      <url>/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%BA%94%EF%BC%89Xcode%E5%B7%A5%E7%A8%8B%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%89%93%E5%8C%85%E4%B8%8A%E4%BC%A0.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-打开Xcode代码工程，操作如下"><a href="#0x01-打开Xcode代码工程，操作如下" class="headerlink" title="0x01 打开Xcode代码工程，操作如下"></a>0x01 打开Xcode代码工程，操作如下</h2><p><img src="/upload/old/201706WX20170614-154128.png" alt=""></p><h2 id="0x02-取消签名自动管理功能，选择之前安装好的Provision文件，另外可以需要设置应用的版本号Version和Build信息，如1-0"><a href="#0x02-取消签名自动管理功能，选择之前安装好的Provision文件，另外可以需要设置应用的版本号Version和Build信息，如1-0" class="headerlink" title="0x02 取消签名自动管理功能，选择之前安装好的Provision文件，另外可以需要设置应用的版本号Version和Build信息，如1.0"></a>0x02 取消签名自动管理功能，选择之前安装好的Provision文件，另外可以需要设置应用的版本号Version和Build信息，如1.0</h2><p><img src="/upload/old/201706WX20170614-154311.png" alt=""></p><h2 id="0x03-点击选择，配置工程为真机编译选项"><a href="#0x03-点击选择，配置工程为真机编译选项" class="headerlink" title="0x03 点击选择，配置工程为真机编译选项"></a>0x03 点击选择，配置工程为真机编译选项</h2><p><img src="/upload/old/201706WX20170614-154504.png" alt=""></p><p><img src="/upload/old/201706屏幕快照-2017-06-14-下午3.44.00.png" alt=""></p><h2 id="0x04-然后开始进行打包操作"><a href="#0x04-然后开始进行打包操作" class="headerlink" title="0x04 然后开始进行打包操作"></a>0x04 然后开始进行打包操作</h2><p><img src="/upload/old/201706屏幕快照-2017-06-14-下午3.45.21.png" alt=""></p><h2 id="0x05-编译成功的话，会弹出下框，选择打包好的版本，然后点击上传苹果商店"><a href="#0x05-编译成功的话，会弹出下框，选择打包好的版本，然后点击上传苹果商店" class="headerlink" title="0x05 编译成功的话，会弹出下框，选择打包好的版本，然后点击上传苹果商店"></a>0x05 编译成功的话，会弹出下框，选择打包好的版本，然后点击上传苹果商店</h2><p><img src="/upload/old/201706WX20170614-155555.png" alt=""></p><h2 id="0x06-选择对应的苹果账号，点击Choose"><a href="#0x06-选择对应的苹果账号，点击Choose" class="headerlink" title="0x06 选择对应的苹果账号，点击Choose"></a>0x06 选择对应的苹果账号，点击Choose</h2><p><img src="/upload/old/201706WX20170614-155708.png" alt=""></p><h2 id="0x07-接着网络畅通的话会显示如下信息，继续点击Upload"><a href="#0x07-接着网络畅通的话会显示如下信息，继续点击Upload" class="headerlink" title="0x07 接着网络畅通的话会显示如下信息，继续点击Upload"></a>0x07 接着网络畅通的话会显示如下信息，继续点击Upload</h2><p><img src="/upload/old/201706WX20170614-155732.png" alt=""></p><h2 id="0x08-如果你幸运的话，会看到如下结果，恭喜你上传版本成功。否则有可能网络或者APP包等其它原因弹出错误。"><a href="#0x08-如果你幸运的话，会看到如下结果，恭喜你上传版本成功。否则有可能网络或者APP包等其它原因弹出错误。" class="headerlink" title="0x08 如果你幸运的话，会看到如下结果，恭喜你上传版本成功。否则有可能网络或者APP包等其它原因弹出错误。"></a>0x08 如果你幸运的话，会看到如下结果，恭喜你上传版本成功。否则有可能网络或者APP包等其它原因弹出错误。</h2><p><img src="/upload/old/201706WX20170614-155912.png" alt=""></p><h2 id="0x09-上传的应用会在iTunes-Connect里面看到构建版本"><a href="#0x09-上传的应用会在iTunes-Connect里面看到构建版本" class="headerlink" title="0x09 上传的应用会在iTunes Connect里面看到构建版本"></a>0x09 上传的应用会在iTunes Connect里面看到构建版本</h2><p><img src="/upload/old/201706WX20170614-162830.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS苹果应用上架（四）在iTunes Connect中创建苹果应用</title>
      <link href="/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E5%9B%9B%EF%BC%89%E5%9C%A8iTunes%20Connect%E4%B8%AD%E5%88%9B%E5%BB%BA%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8.html"/>
      <url>/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E5%9B%9B%EF%BC%89%E5%9C%A8iTunes%20Connect%E4%B8%AD%E5%88%9B%E5%BB%BA%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-继续登录官方开发者网站，点击进入iTunes-Connect"><a href="#0x01-继续登录官方开发者网站，点击进入iTunes-Connect" class="headerlink" title="0x01 继续登录官方开发者网站，点击进入iTunes Connect"></a>0x01 继续登录官方开发者网站，点击进入iTunes Connect</h2><p><img src="/upload/old/201706WX20170614-142606.png" alt=""></p><h2 id="0x02-点击进入我的App"><a href="#0x02-点击进入我的App" class="headerlink" title="0x02 点击进入我的App"></a>0x02 点击进入我的App</h2><p><img src="/upload/old/201706WX20170614-161004.png" alt=""></p><h2 id="0x03-点击-号新建App"><a href="#0x03-点击-号新建App" class="headerlink" title="0x03 点击+号新建App"></a>0x03 点击+号新建App</h2><p><img src="/upload/old/201706WX20170614-154927.png" alt=""></p><h2 id="0x04-如下图，填写并创建APP"><a href="#0x04-如下图，填写并创建APP" class="headerlink" title="0x04 如下图，填写并创建APP"></a>0x04 如下图，填写并创建APP</h2><p><img src="/upload/old/201706WX20170614-155214.png" alt=""></p><h2 id="0x05-已经能够看到创建好的APP，可以点击进入编辑信息"><a href="#0x05-已经能够看到创建好的APP，可以点击进入编辑信息" class="headerlink" title="0x05 已经能够看到创建好的APP，可以点击进入编辑信息"></a>0x05 已经能够看到创建好的APP，可以点击进入编辑信息</h2><p><img src="/upload/old/201706WX20170614-155308.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS苹果应用上架（三）根据APP包名创建Provision文件</title>
      <link href="/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%B8%89%EF%BC%89%E6%A0%B9%E6%8D%AEAPP%E5%8C%85%E5%90%8D%E5%88%9B%E5%BB%BAProvision%E6%96%87%E4%BB%B6.html"/>
      <url>/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%B8%89%EF%BC%89%E6%A0%B9%E6%8D%AEAPP%E5%8C%85%E5%90%8D%E5%88%9B%E5%BB%BAProvision%E6%96%87%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<p><strong>Provision文件用于打包指定APP包名的应用。</strong></p><h2 id="0x01-接上一节，登录官方开发网，进入证书、ID及配置文件管理界面，点击Provisioning-Profiles下的Distribution菜单，然后再点击右上角-号。"><a href="#0x01-接上一节，登录官方开发网，进入证书、ID及配置文件管理界面，点击Provisioning-Profiles下的Distribution菜单，然后再点击右上角-号。" class="headerlink" title="0x01 接上一节，登录官方开发网，进入证书、ID及配置文件管理界面，点击Provisioning Profiles下的Distribution菜单，然后再点击右上角+号。"></a>0x01 接上一节，登录官方开发网，进入证书、ID及配置文件管理界面，点击Provisioning Profiles下的Distribution菜单，然后再点击右上角+号。</h2><p><img src="/upload/old/201706WX20170614-143423.png" alt=""></p><h2 id="0x02-选择Distribution下AppStore选项，然后继续"><a href="#0x02-选择Distribution下AppStore选项，然后继续" class="headerlink" title="0x02 选择Distribution下AppStore选项，然后继续"></a>0x02 选择Distribution下AppStore选项，然后继续</h2><p><img src="/upload/old/201706WX20170614-143636.png" alt=""></p><h2 id="0x03-选择上一节创建好的APP-ID包名"><a href="#0x03-选择上一节创建好的APP-ID包名" class="headerlink" title="0x03 选择上一节创建好的APP ID包名"></a>0x03 选择上一节创建好的APP ID包名</h2><p><img src="/upload/old/201706WX20170614-143719.png" alt=""></p><h2 id="0x04-选择第一节创建的开发者证书"><a href="#0x04-选择第一节创建的开发者证书" class="headerlink" title="0x04 选择第一节创建的开发者证书"></a>0x04 选择第一节创建的开发者证书</h2><p><img src="/upload/old/201706WX20170614-143844.png" alt=""></p><h2 id="0x05-输入个Provision文件名"><a href="#0x05-输入个Provision文件名" class="headerlink" title="0x05 输入个Provision文件名"></a>0x05 输入个Provision文件名</h2><p><img src="/upload/old/201706WX20170614-143916.png" alt=""></p><h2 id="0x06-见下图，Provision文件创建完成"><a href="#0x06-见下图，Provision文件创建完成" class="headerlink" title="0x06 见下图，Provision文件创建完成"></a>0x06 见下图，Provision文件创建完成</h2><p><img src="/upload/old/201706WX20170614-144014.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS苹果应用上架（二）创建APP包名</title>
      <link href="/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%BA%8C%EF%BC%89%E5%88%9B%E5%BB%BAAPP%E5%8C%85%E5%90%8D.html"/>
      <url>/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%BA%8C%EF%BC%89%E5%88%9B%E5%BB%BAAPP%E5%8C%85%E5%90%8D.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-登录https-developer-apple-com网站，点击进入证书、ID及配置管理菜单"><a href="#0x01-登录https-developer-apple-com网站，点击进入证书、ID及配置管理菜单" class="headerlink" title="0x01 登录https://developer.apple.com网站，点击进入证书、ID及配置管理菜单"></a>0x01 登录<a href="https://developer.apple.com" rel="external nofollow noopener noreferrer" target="_blank">https://developer.apple.com</a>网站，点击进入证书、ID及配置管理菜单</h2><p><img src="/upload/old/201706WX20170614-142543.png" alt=""></p><h2 id="0x02-选择App-ID选项，点击右上角-号增加应用包名"><a href="#0x02-选择App-ID选项，点击右上角-号增加应用包名" class="headerlink" title="0x02 选择App ID选项，点击右上角+号增加应用包名"></a>0x02 选择App ID选项，点击右上角+号增加应用包名</h2><p><img src="/upload/old/201706WX20170614-142801.png" alt=""></p><h2 id="0x03-描述见下图"><a href="#0x03-描述见下图" class="headerlink" title="0x03 描述见下图"></a>0x03 描述见下图</h2><p><img src="/upload/old/201706WX20170614-143129.png" alt=""><br><img src="/upload/old/201706WX20170614-143225.png" alt=""></p><h2 id="0x04-点击注册按钮，完成应用包名创建"><a href="#0x04-点击注册按钮，完成应用包名创建" class="headerlink" title="0x04 点击注册按钮，完成应用包名创建"></a>0x04 点击注册按钮，完成应用包名创建</h2><p><img src="/upload/old/201706WX20170614-143248.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS苹果应用上架（一）创建发布者证书</title>
      <link href="/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9B%E5%BB%BA%E5%8F%91%E5%B8%83%E8%80%85%E8%AF%81%E4%B9%A6.html"/>
      <url>/iOS%E8%8B%B9%E6%9E%9C%E5%BA%94%E7%94%A8%E4%B8%8A%E6%9E%B6%EF%BC%88%E4%B8%80%EF%BC%89%E5%88%9B%E5%BB%BA%E5%8F%91%E5%B8%83%E8%80%85%E8%AF%81%E4%B9%A6.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-打开Xcode工具，进入下图菜单"><a href="#0x01-打开Xcode工具，进入下图菜单" class="headerlink" title="0x01 打开Xcode工具，进入下图菜单"></a>0x01 打开Xcode工具，进入下图菜单</h2><p><img src="/upload/old/屏幕快照-2017-06-14-下午2.14.36.png" alt=""></p><h2 id="0x02-选择Account选项卡"><a href="#0x02-选择Account选项卡" class="headerlink" title="0x02 选择Account选项卡"></a>0x02 选择Account选项卡</h2><p><img src="/upload/old/201706WX20170614-141643.png" alt=""></p><h2 id="0x03-点击右下角-号，Add-Apple-ID增加苹果账号"><a href="#0x03-点击右下角-号，Add-Apple-ID增加苹果账号" class="headerlink" title="0x03 点击右下角+号，Add Apple ID增加苹果账号"></a>0x03 点击右下角+号，Add Apple ID增加苹果账号</h2><p><img src="/upload/old/201706屏幕快照-2017-06-14-下午2.16.59.png" alt=""></p><h2 id="0x04-输入自己的申请好的苹果账号和密码，Sign-In"><a href="#0x04-输入自己的申请好的苹果账号和密码，Sign-In" class="headerlink" title="0x04 输入自己的申请好的苹果账号和密码，Sign In"></a>0x04 输入自己的申请好的苹果账号和密码，Sign In</h2><p><img src="/upload/old/201706屏幕快照-2017-06-14-下午2.18.14.png" alt=""></p><h2 id="0x05-选择已登录的账号，然后点击View-Details"><a href="#0x05-选择已登录的账号，然后点击View-Details" class="headerlink" title="0x05 选择已登录的账号，然后点击View Details"></a>0x05 选择已登录的账号，然后点击View Details</h2><p><img src="/upload/old/201706WX20170614-142038.png" alt=""></p><h2 id="0x06-如果电脑中没有发布者证书，则红色箭头处会有一个Create按钮，点击该按钮进行iOS发布者证书创建"><a href="#0x06-如果电脑中没有发布者证书，则红色箭头处会有一个Create按钮，点击该按钮进行iOS发布者证书创建" class="headerlink" title="0x06 如果电脑中没有发布者证书，则红色箭头处会有一个Create按钮，点击该按钮进行iOS发布者证书创建"></a>0x06 如果电脑中没有发布者证书，则红色箭头处会有一个Create按钮，点击该按钮进行iOS发布者证书创建</h2><p><img src="/upload/old/201706WX20170614-142247.png" alt=""></p><h2 id="0x07-创建成功的话，在钥匙串应用中能够看见如下证书信息"><a href="#0x07-创建成功的话，在钥匙串应用中能够看见如下证书信息" class="headerlink" title="0x07 创建成功的话，在钥匙串应用中能够看见如下证书信息"></a>0x07 创建成功的话，在钥匙串应用中能够看见如下证书信息</h2><p><img src="/upload/old/201706WX20170614-142330.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>各类总线传输速率（转）</title>
      <link href="/%E5%90%84%E7%B1%BB%E6%80%BB%E7%BA%BF%E4%BC%A0%E8%BE%93%E9%80%9F%E7%8E%87%EF%BC%88%E8%BD%AC%EF%BC%89.html"/>
      <url>/%E5%90%84%E7%B1%BB%E6%80%BB%E7%BA%BF%E4%BC%A0%E8%BE%93%E9%80%9F%E7%8E%87%EF%BC%88%E8%BD%AC%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-USB总线"><a href="#1-USB总线" class="headerlink" title="1.USB总线"></a>1.USB总线</h2><p>USB1.1：<br>——-低速模式(low speed)：1.5Mbps<br>——-全速模式(full speed)： 12Mbps<br>USB2.0：<br>向下兼容。增加了高速模式，最大速率480Mbps。<br>——-高速模式(high speed)： 25~480Mbps </p><p>USB3.0：向下兼容。<br>——-super speed ：理论上最高达4.8Gbps，实际中，也就是high speed 的10倍左右。  </p><h2 id="2-UART"><a href="#2-UART" class="headerlink" title="2.UART"></a>2.UART</h2><p>RS232：传输速率一般不超过20Kbps，速率低，抗干扰能力差，RS-232C能传输的最大距离不超过15m（50英尺）。<br>RS422：定义了一种平衡通信接口，将传输速率提高到10Mbps，传输距离延长到4000英尺（速率低于100Kbps时），并允许在一条平衡总线上连接最多10个接收器。<br>RS-422是一种单机发送、多机接收的单向、平衡传输规范，被命名为TIA/EIA-422-A标准。<br>RS485：增加了多点、双向通信能力，即允许多个发送器连接到同一条总线上，同时增加了发送器的驱动能力和冲突保护特性，扩展了总线共模范围，后命名为TIA/EIA-485-A标准。最高传输速率10Mbps，抗干扰能力强，可以传距离1.5km。<br>平衡双绞线的长度与传输速率成反比，在100Kbps速率以下，才可能使用规定最长的电缆长度。只有在很短的距离下才能获得最高速率传输。一般100米长双绞线最大传输速率仅为1Mbps。  </p><h2 id="3-SPI总线"><a href="#3-SPI总线" class="headerlink" title="3.SPI总线"></a>3.SPI总线</h2><p>全双工通信，传输速率可达几Mbps水平，比I2C快。  </p><h2 id="4-I2C总线"><a href="#4-I2C总线" class="headerlink" title="4.I2C总线"></a>4.I2C总线</h2><p>半双工，只有2根线。数据线和时钟线。<br>——–标准速度：100kbps<br>——–快速模式：400kbps<br>——–高速模式：3.4Mbps  </p><h2 id="4-Ethernet，也就是通常的网速。"><a href="#4-Ethernet，也就是通常的网速。" class="headerlink" title="4.Ethernet，也就是通常的网速。"></a>4.Ethernet，也就是通常的网速。</h2><p>——–早期的以太网传输速率只有10Mbps。<br>——–百兆网：理论上最大100Mbps。<br>——–千兆网：理论上最大1Gbps。  </p><h2 id="5-SD总线：最高能达10Mbps。"><a href="#5-SD总线：最高能达10Mbps。" class="headerlink" title="5.SD总线：最高能达10Mbps。"></a>5.SD总线：最高能达10Mbps。</h2><h2 id="6-SATA接口："><a href="#6-SATA接口：" class="headerlink" title="6.SATA接口："></a>6.SATA接口：</h2><p>——–SATA1.0：理论传输速度是150MB/s（或者1.5Gb/s），实际也就30MBps。<br>——–SATA2.0： 300MBps，即3Gbps。实际也就80MBps。<br>——–SATA3.0： 600MBps，即6Gbps。<br>——–eSATA：理论传输速度可达到1.5Gbps或3Gbps。  </p><h2 id="7-PCI总线"><a href="#7-PCI总线" class="headerlink" title="7.PCI总线"></a>7.PCI总线</h2><p>——–PCI：32位，33MHz时钟频率，速率是33*4 = 133MBps，即1Gbps。<br>——–PCI 2.1：64位，66MHz时钟频率来说：速率是66*8 = 528MBps，即4Gbps。  </p><h2 id="8-PCI-e："><a href="#8-PCI-e：" class="headerlink" title="8.PCI-e："></a>8.PCI-e：</h2><p>PCI Express 总线频率 2500 MHz，这是在 100 MHz 的基准频率通过锁相环振荡器(Phase Lock Loop，PLL)达到的。<br>串行总线带宽(MB/s) = 串行总线时钟频率(MHz) <em> 串行总线位宽(bit/8 = B) </em> 串行总线管线 <em> 编码方式 </em> 每时钟传输几组数据(cycle)<br>——PCI Express x1 总线位宽是 1位，总线频率 2500 MHz，串行总线管线是 1 条，每时钟传输 2组数据，编码方式为 8b/10b，它的带宽为 476.84 MB/s，即 3814.7 Mbps。（带宽是 PCI 的 3.75 倍。）<br>公式是 2500000000(Hz) <em> 1/8(bit) </em> 1(条管线) <em> 8/10(bit) </em> 2(每时钟传输2组数据) = 500000000 B/s = 476.8371582 MB/s，即 3814.6972656 Mbps。<br>下面给出其它类型组合的带宽。<br>——PCI Express x2 的带宽为 953.68 MB/s，即 7629.4 Mbps。（此模式仅用于主板内部接口而非插槽模式）<br>——PCI Express x4 的带宽为 1907.36 MB/s，即 15258.9 Mbps。<br>——PCI Express x8 的带宽为 3814.72 MB/s，即 30517.8 Mbps。<br>——PCI Express x16 的带宽为 7629.44 MB/s，即 61035.5 Mbps。（带宽是 AGP 8X 的 3.75 倍。）<br>——PCI Express x32 的带宽为 15258.88 MB/s，即 122071 Mbps。</p><h2 id="9-XGMII-XLGMII-CGMII"><a href="#9-XGMII-XLGMII-CGMII" class="headerlink" title="9.XGMII/XLGMII/CGMII"></a>9.XGMII/XLGMII/CGMII</h2><p>在以太网标准中，MAC层与PHY层之间的10Gbps/40Gbps/100Gbps速率等级所对应的接口分别为XGMII/XLGMII/CGMII，由于XGMII/XLGMII是并行总线，而且采用的是单端信号，HSTL电平，最大传输距离只有7cm。所以在实际应用中，XGMII/XLGMII基本上被XAUI/XLAUI替代。XAUI/XLAUI是四通道串行总线，采用的差分信号，CML逻辑传输，并且进行了扰码，大大增强了信号的抗扰性能，使得信号的有效传输距离增加到50cm。<br>XAUI/XLAUI在物理结构上是一样的，收发通道独立，各四对差分信号线。对于XAUI总线，每对差分线上的数据速率为3.125Gbps，总数据带宽为12.5Gbps，有效带宽为12.5Gbps*0.8=10Gbps （因为XAUI总线数据在传输前进行了8B/10B变换，编码效率为80%）。<br>对于XLAUI总线，每对差分线上的数据速率为10.3125Gbps，总数据带宽为41.25Gbps，有效带宽为41.25Gbps*(64/66)=40Gbps（因为XLAUI总线数据在传输前进行了64B/66B变换，编码效率为96.97%）。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>在Mac OS上编译 SQLCipher</title>
      <link href="/%E5%9C%A8Mac%20OS%E4%B8%8A%E7%BC%96%E8%AF%91%20SQLCipher.html"/>
      <url>/%E5%9C%A8Mac%20OS%E4%B8%8A%E7%BC%96%E8%AF%91%20SQLCipher.html</url>
      
        <content type="html"><![CDATA[<p>在sqlcipher官网给的方法没法在Mac OS上编译，所以做了以下记录，大家应该明白编译这东西是为了进行加密数据库的脱密或者加密。 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --enable-load-extension <span class="attribute">--enable-tempstore</span>=<span class="literal">yes</span> <span class="attribute">--with-crypto-lib</span>=commoncrypto <span class="attribute">CFLAGS</span>=<span class="string">"-DSQLITE\_HAS\_CODEC -DSQLITE\_ENABLE\_FTS3"</span> <span class="attribute">LDFLAGS</span>=<span class="string">"/System/Library/Frameworks/Security.framework/Versions/Current/Security"</span> </span><br><span class="line">make</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac os </tag>
            
            <tag> sqlcipher </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>单片机下的编码规范</title>
      <link href="/%E5%8D%95%E7%89%87%E6%9C%BA%E4%B8%8B%E7%9A%84%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83.html"/>
      <url>/%E5%8D%95%E7%89%87%E6%9C%BA%E4%B8%8B%E7%9A%84%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-模块描述"><a href="#1-模块描述" class="headerlink" title="1.模块描述"></a>1.模块描述</h2><p>模块是为了实现某一功能的函数的集合，文件名使用缺省的后缀，在每一模块的开头应有如下的描述体：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"><span class="bullet">* </span>PROJECT CODE ：项目代号或名称 *</span><br><span class="line"><span class="bullet">* </span>CREATE DATE ：创建日期 *</span><br><span class="line"><span class="bullet">* </span>CREATED BY ：创建人 *</span><br><span class="line"><span class="bullet">* </span>FUNCTION ：模块功能 *</span><br><span class="line"><span class="bullet">* </span>MODIFY DATE ：修改日期 *</span><br><span class="line"><span class="bullet">* </span>DOCUMENT ：参考文档 *</span><br><span class="line"><span class="bullet">* </span>OTHERS ：程序员认为应做特别说明的部分，如特别的编译开关 *</span><br><span class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span><br></pre></td></tr></table></figure></p><p>不同的修改人应在修改的地方加上适当的注释，包括修改人的姓名。另外，如有必要，要注明模块的工作平台，如单板OS、DOS、WINDOWS 等。注明适用的编译器和编译模式。</p><h2 id="2-函数描述"><a href="#2-函数描述" class="headerlink" title="2.函数描述"></a>2.函数描述</h2><p>函数是组成模块的单元，一般用来完成某一算法或控制等。在每一函数的开头应有如下的描述体：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"><span class="bullet">* </span>FUNCTION NAME：函数名称 *</span><br><span class="line"><span class="bullet">* </span>CREATE DATE ：创建日期 *</span><br><span class="line"><span class="bullet">* </span>CREATED BY ：创建人 *</span><br><span class="line"><span class="bullet">* </span>FUNCTION ：函数功能 *</span><br><span class="line"><span class="bullet">* </span>MODIFY DATE ：修改日期 *</span><br><span class="line"><span class="bullet">* </span>INPUT ：输入参数类型(逐个说明) *</span><br><span class="line"><span class="bullet">* </span>OUTPUT ：输出参数类型(逐个说明) *</span><br><span class="line"><span class="bullet">* </span>RETURN ：返回信息 *</span><br><span class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span><br><span class="line"></span><br><span class="line">可选的描述有：</span><br><span class="line"><span class="bullet">* </span>RECEIVED MESSAGES：收到的消息 *</span><br><span class="line"><span class="bullet">* </span>SENT MESSAGES ：发送的消息 *</span><br><span class="line"><span class="bullet">* </span>DATABASE ACCESS ：存取的数据库 *</span><br><span class="line"><span class="bullet">* </span>CALLED BY ：该函数的调用者 *</span><br><span class="line"><span class="bullet">* </span>PROCEDURES CALLED：调用的过程 *</span><br><span class="line"><span class="bullet">* </span>RECEVED PRIMITIVES : 收到的原语 *</span><br><span class="line"><span class="bullet">* </span>SENT PRIMITIVES : 发送的原语 *</span><br><span class="line">及其它程序员认为应有的描述。标题可以只大写第一个字母。例如：Function Name：</span><br></pre></td></tr></table></figure></p><h2 id="3-命名规则："><a href="#3-命名规则：" class="headerlink" title="3.命名规则："></a>3.命名规则：</h2><p>A) 函数： 函数名应能体现该函数完成的功能，关键部分应采用完整的单词，辅助部分若太长可采用缩写，缩写应符合英文的规范。每个单词的第一个字母大写。如：ShowPoints，CtrlDestBoard，SendResetMsg 等。 B) 变量： 变量的命名规则部分采用匈牙利命名规则(鼓励完全使用匈牙利名规则)。变量的第一个或前两个字母小写，表示其数据类型，其后每个词的第一个字母大写。推荐的类型前缀如下：<br><img src="/upload/old/20170326规范.png" alt="规范"><br>如iCurrentValue，uTransitionCount 等。对于其他复合类型或自定义类型，请用适当的前缀来表示。除局部循环变量外，不鼓励单个字母的变量名。<br>对于常用的类型定义，尽量使用WORD、BOOL、LPWORD、VOID、FAR、NEAR 等惯用写法，避免使用char、long、void、far、near 等小写格式。</p><h2 id="4-书写风格："><a href="#4-书写风格：" class="headerlink" title="4.书写风格："></a>4.书写风格：</h2><p>A) 函数：函数的返回类型一定要写，不管它是否默认类型，函数的参数之间应用一逗 号加一空格隔开,若有多个参数，应排列整齐。例如： </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SendResetMsg</span><span class="params">( PTLAPENTITY pLAPEntity, <span class="keyword">int</span> iErrorNo )</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">int</span> iTempValue; </span><br><span class="line">. . . </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数的类型和上下两个括号应从第一列开始，函数的第一行应缩进一个TAB，不得用空格缩进。(按大多数程序范例，TAB 为四个字符宽，我们规定：TAB 为四个字符宽。) </p><p>B) 语句：循环语句和if 语句等块语句的第一个大括号‘{’可跟在第一行的后面，接 下来的语句应缩进一个TAB，如： </p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="built_in">count</span> = <span class="number">0</span> ; <span class="built_in">count</span> &lt; MAXLINE ; <span class="built_in">count</span>++ ) &#123; </span><br><span class="line"><span class="keyword">if</span> ( (<span class="built_in">count</span> % PAGELINE) == <span class="number">0</span> ) </span><br><span class="line">&#123; </span><br><span class="line">. . . </span><br><span class="line">&#125; </span><br><span class="line">. . </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可另起一行，如： </p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="built_in">count</span> = <span class="number">0</span> ; <span class="built_in">count</span> &lt; MAXLINE ; <span class="built_in">count</span>++ ) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span> ( (<span class="built_in">count</span> % PAGELINE) == <span class="number">0</span> ) </span><br><span class="line">&#123; . . . &#125; </span><br><span class="line">. . </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两种写法在世界著名的程序员手下均可见到，我们尊重个人的习惯，但推荐使用后一种写法。复杂表达式(两个运算符以上，含两个)必须用括号区分运算顺序，运算符的前后应各有一空格，习惯写在一行的几个语句(如IF 语句)，中间应有一空格，其它语句不鼓励写在同一行。<br>空格加在适当的地方，如 if ( ; for ( ; ) {;<br>语句的上下对齐也可使程序便于阅读，如： </p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">myStruct.iFirstNumber = <span class="number">0</span><span class="comment">; </span></span><br><span class="line">myStruct.lSecondNumber = <span class="number">1</span><span class="comment">;</span></span><br><span class="line">myStruct.pThePoint = NULL<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>C) 常量：常量一般情况下可用宏定义，用大写的方式，单词之间用下划线隔开 如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_LINE 100 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415926</span></span><br></pre></td></tr></table></figure><p>不鼓励在程序中出现大量的数字常数。<br>注：对于一些有必要说明的缩写，可以在模块描述内加以说明。</p><h2 id="5-头文件："><a href="#5-头文件：" class="headerlink" title="5.头文件："></a>5.头文件：</h2><p>头文件一般包括了数据结构的定义，函数原形的说明，宏定义等，不许包含函数体和变量实体，文件名使用缺省的后缀.h，不使用类似.DEF 等非标准的后缀名，头文件的开始可包括如下的注释：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span></span><br><span class="line"><span class="bullet">* </span>CREATE DATE：创建日期 *</span><br><span class="line"><span class="bullet">* </span>CREATED BY ：创建人 *</span><br><span class="line"><span class="bullet">* </span>MODIFIED BY ：修改人 *</span><br><span class="line"><span class="bullet">* </span>USED BY ：由哪些模块使用 *</span><br><span class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>*/</span><br></pre></td></tr></table></figure></p><p>为了避免重编译，应加上条件编译语句，如文件headfille.h 应包含下列语句：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __HEADFILE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __HEADFILE_H</span></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p><h2 id="6。注释："><a href="#6。注释：" class="headerlink" title="6。注释："></a>6。注释：</h2><p>注释是源码中非常重要的部分，不应少于源码行数的15%，我们希望能达到25%或更多。<br>注释用中英文都可以，但应易读易懂。不要在一个语句的中间插入注释。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Centos Linux下部署Parse服务器</title>
      <link href="/Centos%20Linux%E4%B8%8B%E9%83%A8%E7%BD%B2Parse%E6%9C%8D%E5%8A%A1%E5%99%A8.html"/>
      <url>/Centos%20Linux%E4%B8%8B%E9%83%A8%E7%BD%B2Parse%E6%9C%8D%E5%8A%A1%E5%99%A8.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>Parse是Facebook很有名的一个项目，能够帮助目前很多应用快速搭建平台快速开发，官网目前已经关闭，并在github提供开源，很好的一个东西。</p><h2 id="0x01-环境要求"><a href="#0x01-环境要求" class="headerlink" title="0x01 环境要求"></a>0x01 环境要求</h2><h3 id="1、MongoDB数据库"><a href="#1、MongoDB数据库" class="headerlink" title="1、MongoDB数据库"></a>1、MongoDB数据库</h3><p>1）下载命令如下：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -O https:<span class="regexp">//</span>fastdl.mongodb.org<span class="regexp">/linux/m</span>ongodb-linux-x86_64-<span class="number">3.4</span>.<span class="number">2</span>.tgz </span><br><span class="line"></span><br><span class="line">tar -xvf mongodb-linux-x86\_64-<span class="number">3.4</span>.<span class="number">2</span>.tgz</span><br></pre></td></tr></table></figure></p><p>2）移动目录，配置环境变量：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv mongodb-linux-x86\_64-3.4.2 /opt/mongodb</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=&lt;mongodb-install-directory&gt;/bin:$PATH</span><br></pre></td></tr></table></figure></p><p>我的<mongodb-install-directory>就是/opt/mongodb</mongodb-install-directory></p><p>3）创建数据库目录：<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/db</span></span><br></pre></td></tr></table></figure></p><p>/data/db 是 MongoDB 默认的启动的数据库路径(–dbpath)</p><p>4）执行mongod命令启动数据库</p><h3 id="2、Nodejs"><a href="#2、Nodejs" class="headerlink" title="2、Nodejs"></a>2、Nodejs</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl --<span class="keyword">silent</span> --location http<span class="variable">s:</span>//rpm.nodesource.<span class="keyword">com</span>/setup_6.<span class="keyword">x</span> | bash -</span><br><span class="line"></span><br><span class="line">yum -<span class="keyword">y</span> install nodejs</span><br><span class="line"></span><br><span class="line">yum install gcc-<span class="keyword">c</span>++ <span class="keyword">make</span></span><br></pre></td></tr></table></figure><p><a href="https://github.com/ParsePlatform/docs" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/ParsePlatform/docs</a></p>]]></content>
      
      
      <categories>
          
          <category> 服务端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> parse </tag>
            
            <tag> saas </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux下Gitblit的安装</title>
      <link href="/Linux%E4%B8%8BGitblit%E7%9A%84%E5%AE%89%E8%A3%85.html"/>
      <url>/Linux%E4%B8%8BGitblit%E7%9A%84%E5%AE%89%E8%A3%85.html</url>
      
        <content type="html"><![CDATA[<p>直接进入正题（下列操作都是以root用户执行）：</p><h3 id="1、去官网下载gitblit-1-8-0-tar-gz，我使用的是Go语言版本；"><a href="#1、去官网下载gitblit-1-8-0-tar-gz，我使用的是Go语言版本；" class="headerlink" title="1、去官网下载gitblit-1.8.0.tar.gz，我使用的是Go语言版本；"></a>1、去官网下载gitblit-1.8.0.tar.gz，我使用的是Go语言版本；</h3><h3 id="2、解压下载包"><a href="#2、解压下载包" class="headerlink" title="2、解压下载包"></a>2、解压下载包</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-xvf</span> <span class="selector-tag">gitblit-1</span><span class="selector-class">.8</span><span class="selector-class">.0</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><h3 id="3、把解压的目录移动并改名"><a href="#3、把解压的目录移动并改名" class="headerlink" title="3、把解压的目录移动并改名"></a>3、把解压的目录移动并改名</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv gitblit<span class="number">-1.8</span><span class="number">.0</span> /opt/gitblit</span><br></pre></td></tr></table></figure><h3 id="4、编辑配置文件"><a href="#4、编辑配置文件" class="headerlink" title="4、编辑配置文件"></a>4、编辑配置文件</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">vim</span> /<span class="meta">opt</span>/gitblit/<span class="meta">data</span>/defaults.properties</span><br></pre></td></tr></table></figure><p>我们只需要关注server.httpPort和server.httpsPort，就是访问的Web端口</p><h3 id="5、配置完成后可以执行脚本，初始化数据"><a href="#5、配置完成后可以执行脚本，初始化数据" class="headerlink" title="5、配置完成后可以执行脚本，初始化数据"></a>5、配置完成后可以执行脚本，初始化数据</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/opt/gitblit/</span> </span><br><span class="line"><span class="string">./gitblit.sh</span></span><br></pre></td></tr></table></figure><p>通过浏览器能够正常访问gitblit，这一步已经完成了基本部署。</p><h3 id="6、配置为服务，我使用的是Centos系统，执行如下"><a href="#6、配置为服务，我使用的是Centos系统，执行如下" class="headerlink" title="6、配置为服务，我使用的是Centos系统，执行如下"></a>6、配置为服务，我使用的是Centos系统，执行如下</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/opt/gitblit</span> <span class="string">./install-service-centos.sh</span></span><br></pre></td></tr></table></figure><h3 id="7、启动服务"><a href="#7、启动服务" class="headerlink" title="7、启动服务"></a>7、启动服务</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service gitblit <span class="literal">start</span></span><br></pre></td></tr></table></figure><p>大功告成，谢谢。</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitblit </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ionic下native触发js事件</title>
      <link href="/ionic%E4%B8%8Bnative%E8%A7%A6%E5%8F%91js%E4%BA%8B%E4%BB%B6.html"/>
      <url>/ionic%E4%B8%8Bnative%E8%A7%A6%E5%8F%91js%E4%BA%8B%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<p><strong>说明一下本地层回调js事件的应用场景，推送、后台任务提醒、即时通讯等等；</strong></p><h2 id="一、在www-js-app-js中增加如下回调函数："><a href="#一、在www-js-app-js中增加如下回调函数：" class="headerlink" title="一、在www/js/app.js中增加如下回调函数："></a>一、在www/js/app.js中增加如下回调函数：</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ionicPlatform.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (<span class="built_in">window</span>.cordova &amp;&amp; <span class="built_in">window</span>.cordova.plugins &amp;&amp; <span class="built_in">window</span>.cordova.plugins.Keyboard) &#123;</span><br><span class="line">         cordova.plugins.Keyboard.hideKeyboardAccessoryBar(<span class="literal">true</span>);</span><br><span class="line">         cordova.plugins.Keyboard.disableScroll(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (<span class="built_in">window</span>.StatusBar) &#123;</span><br><span class="line">         <span class="comment">// org.apache.cordova.statusbar required</span></span><br><span class="line">         StatusBar.styleDefault();</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">//注册事件函数</span></span><br><span class="line">     <span class="keyword">var</span> onReceiveMaple = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">         alert(event.msg);</span><br><span class="line">     &#125;;</span><br><span class="line">     <span class="built_in">document</span>.addEventListener(<span class="string">"hndev.receiveMessage"</span>, onReceiveMaple, <span class="literal">false</span>);</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h2 id="二、在iOS插件中执行js命令，其它平台类似"><a href="#二、在iOS插件中执行js命令，其它平台类似" class="headerlink" title="二、在iOS插件中执行js命令，其它平台类似"></a>二、在iOS插件中执行js命令，其它平台类似</h2><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="name">CDVPlugin.commandDelegate</span> evalJs:</span><br><span class="line">    [<span class="name">NSString</span> stringWithFormat:@<span class="string">"cordova.fireDocumentEvent('hndev.%@',%@)"</span>, </span><br><span class="line">    eventName, jsString]]<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>参数eventName为receiveMessage 参数jsString为传入回调函数的对象，必须为json。如 </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"msg"</span>:<span class="string">"Hello Maple!"</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="三、详细可以参考极光推送的实现"><a href="#三、详细可以参考极光推送的实现" class="headerlink" title="三、详细可以参考极光推送的实现"></a>三、详细可以参考极光推送的实现</h2><p><a href="https://github.com/jpush/jpush-phonegap-plugin" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/jpush/jpush-phonegap-plugin</a></p>]]></content>
      
      
      <categories>
          
          <category> 混合开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cordova </tag>
            
            <tag> ionic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mac OS下互联网共享无法连接问题</title>
      <link href="/Mac%20OS%E4%B8%8B%E4%BA%92%E8%81%94%E7%BD%91%E5%85%B1%E4%BA%AB%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98.html"/>
      <url>/Mac%20OS%E4%B8%8B%E4%BA%92%E8%81%94%E7%BD%91%E5%85%B1%E4%BA%AB%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98.html</url>
      
        <content type="html"><![CDATA[<p>这个问题折腾我好久了，今天终于解决了，如果你也遇到请试试下列方法： </p><h3 id="1、首先进入“系统偏好设置”-》“共享”，修改你的电脑名称，要求修改很简单的字母，如Maple；"><a href="#1、首先进入“系统偏好设置”-》“共享”，修改你的电脑名称，要求修改很简单的字母，如Maple；" class="headerlink" title="1、首先进入“系统偏好设置”-》“共享”，修改你的电脑名称，要求修改很简单的字母，如Maple；"></a>1、首先进入“系统偏好设置”-》“共享”，修改你的电脑名称，要求修改很简单的字母，如Maple；</h3><h3 id="2、如果你已经开启共享网络，请先关闭；"><a href="#2、如果你已经开启共享网络，请先关闭；" class="headerlink" title="2、如果你已经开启共享网络，请先关闭；"></a>2、如果你已经开启共享网络，请先关闭；</h3><h3 id="3、进入“系统偏好设置”-》“安全性与隐私”，选择“防火墙”，关闭防火墙。"><a href="#3、进入“系统偏好设置”-》“安全性与隐私”，选择“防火墙”，关闭防火墙。" class="headerlink" title="3、进入“系统偏好设置”-》“安全性与隐私”，选择“防火墙”，关闭防火墙。"></a>3、进入“系统偏好设置”-》“安全性与隐私”，选择“防火墙”，关闭防火墙。</h3><h3 id="4、删除以下文件："><a href="#4、删除以下文件：" class="headerlink" title="4、删除以下文件："></a>4、删除以下文件：</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/Library/Preferences/SystemConfiguration/com<span class="selector-class">.apple</span><span class="selector-class">.nat</span><span class="selector-class">.plist</span></span><br><span class="line">/Library/Preferences/SystemConfiguration/NetworkInterfaces.plist</span><br><span class="line">/Library/Preferences/SystemConfiguration/com<span class="selector-class">.apple</span><span class="selector-class">.airport</span><span class="selector-class">.preferences</span><span class="selector-class">.plist</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac os </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Cordova插件自定义iOS版</title>
      <link href="/Cordova%E6%8F%92%E4%BB%B6%E8%87%AA%E5%AE%9A%E4%B9%89iOS%E7%89%88.html"/>
      <url>/Cordova%E6%8F%92%E4%BB%B6%E8%87%AA%E5%AE%9A%E4%B9%89iOS%E7%89%88.html</url>
      
        <content type="html"><![CDATA[<p>Cordova版本：6.0.0</p><h2 id="一、参考官网搭建基本环境"><a href="#一、参考官网搭建基本环境" class="headerlink" title="一、参考官网搭建基本环境"></a>一、参考官网搭建基本环境</h2><p><a href="http://cordova.apache.org/#getstarted" rel="external nofollow noopener noreferrer" target="_blank">http://cordova.apache.org/#getstarted</a> </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cordova </span><br><span class="line">cordova create helloPlugin </span><br><span class="line">cordova platform <span class="keyword">add</span><span class="bash"> ios </span></span><br><span class="line"><span class="bash">cordova run ios</span></span><br></pre></td></tr></table></figure><p>按照上述操作已经搭建好了一个测试环境，我们做好后的插件就是在helloPlugin项目中做测试。</p><h2 id="二、继续参考官方文档搭建插件管理环境"><a href="#二、继续参考官方文档搭建插件管理环境" class="headerlink" title="二、继续参考官方文档搭建插件管理环境"></a>二、继续参考官方文档搭建插件管理环境</h2><p><a href="http://cordova.apache.org/docs/zh-cn/6.x/plugin_ref/plugman.html" rel="external nofollow noopener noreferrer" target="_blank">http://cordova.apache.org/docs/zh-cn/6.x/plugin_ref/plugman.html</a> </p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g plugman</span><br><span class="line">plugman create <span class="params">--name</span> dialog <span class="params">--plugin</span>\_id cordova-plugin-dialog <span class="params">--plugin</span>\_<span class="keyword">version</span> 0.1 <span class="params">--variable</span> author=Maple</span><br></pre></td></tr></table></figure><p>上述命令执行完，我们已经创建了一个插件目录。</p><h2 id="三、编写iOS版插件，其它平台类似"><a href="#三、编写iOS版插件，其它平台类似" class="headerlink" title="三、编写iOS版插件，其它平台类似"></a>三、编写iOS版插件，其它平台类似</h2><p><a href="http://cordova.apache.org/docs/zh-cn/6.x/guide/platforms/ios/plugin.html" rel="external nofollow noopener noreferrer" target="_blank">http://cordova.apache.org/docs/zh-cn/6.x/guide/platforms/ios/plugin.html</a> </p><p>1、参考官方文档创建一个iOS插件类： HndevDialog.h</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;Cordova/CDVPlugin.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">HndevDialog</span> : <span class="title">CDVPlugin</span></span></span><br><span class="line"></span><br><span class="line">\- (<span class="keyword">void</span>)showMessageBox:(CDVInvokedUrlCommand*)command;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line">HndevDialog.m:</span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="meta-string">"HndevDialog.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">HndevDialog</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)showMessageBox:(CDVInvokedUrlCommand*)command</span><br><span class="line">&#123;</span><br><span class="line">    CDVPluginResult* pluginResult = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">if</span> (command.arguments.count == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">NSString</span>* title = [command.arguments objectAtIndex:<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">NSString</span>* message = [command.arguments objectAtIndex:<span class="number">1</span>];</span><br><span class="line">        <span class="built_in">UIAlertView</span> *alertView = [[<span class="built_in">UIAlertView</span> alloc] initWithTitle:title message:message delegate:<span class="literal">nil</span> cancelButtonTitle:<span class="string">@"Cancel"</span> otherButtonTitles:<span class="literal">nil</span>, <span class="literal">nil</span>];</span><br><span class="line">        [alertView show];</span><br><span class="line">        pluginResult = [CDVPluginResult resultWithStatus:CDVCommandStatus_OK];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        pluginResult = [CDVPluginResult resultWithStatus:CDVCommandStatus_ERROR messageAsString:<span class="string">@"Arg was invalid."</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span>.commandDelegate sendPluginResult:pluginResult callbackId:command.callbackId];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>把上述两个文件放到插件工程dialog/src/ios/目录下。编写上述类时可以使用xcode开发工具进行编写，编译没问题再直接拷过来。 </p><p>2、修改dialog/plugin.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='utf-8'?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span> <span class="attr">id</span>=<span class="string">"cordova-plugin-dialog"</span> <span class="attr">version</span>=<span class="string">"0.1"</span> <span class="attr">xmlns</span>=<span class="string">"http://apache.org/cordova/ns/plugins/1.0"</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>dialog<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">AUTHOR</span>&gt;</span>Maple<span class="tag">&lt;/<span class="name">AUTHOR</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">js-module</span> <span class="attr">name</span>=<span class="string">"dialog"</span> <span class="attr">src</span>=<span class="string">"www/dialog.js"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">clobbers</span> <span class="attr">target</span>=<span class="string">"cordova.plugins.dialog"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">js-module</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">platform</span> <span class="attr">name</span>=<span class="string">"ios"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">config-file</span> <span class="attr">target</span>=<span class="string">"config.xml"</span> <span class="attr">parent</span>=<span class="string">"/*"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">feature</span> <span class="attr">name</span>=<span class="string">"HndevDialog"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"ios-package"</span> <span class="attr">value</span>=<span class="string">"HndevDialog"</span> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">feature</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">config-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">header-file</span> <span class="attr">src</span>=<span class="string">"src/ios/HndevDialog.h"</span> /&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">source-file</span> <span class="attr">src</span>=<span class="string">"src/ios/HndevDialog.m"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">platform</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、修改dialog/www/dialog.js文件</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var <span class="built_in">exec</span> = require('cordova/<span class="built_in">exec</span>');</span><br><span class="line"></span><br><span class="line">exports.<span class="keyword">show</span> = function(<span class="built_in">title</span>, msg, success, <span class="built_in">error</span>) &#123;</span><br><span class="line">    <span class="built_in">exec</span>(success, <span class="built_in">error</span>, <span class="string">"HndevDialog"</span>, <span class="string">"showMessageBox"</span>, [<span class="built_in">title</span>, msg]);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>到此插件的代码基本完成。</p><h2 id="四、安装插件并验证可用性"><a href="#四、安装插件并验证可用性" class="headerlink" title="四、安装插件并验证可用性"></a>四、安装插件并验证可用性</h2><p>回到第一章我们创建的helloPlugin项目目录 1、 cordova plugin add /Users/maple/Documents/ionic/dialog 上面的路径就是你的插件绝对路径。 2、在helloPlugin/www/js/index.js增加测试代码:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = &#123;</span><br><span class="line"> <span class="comment">// Application Constructor</span></span><br><span class="line"> initialize: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>.bindEvents();</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="comment">// Bind Event Listeners</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> <span class="comment">// Bind any events that are required on startup. Common events are:</span></span><br><span class="line"> <span class="comment">// 'load', 'deviceready', 'offline', and 'online'.</span></span><br><span class="line"> bindEvents: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"> <span class="built_in">document</span>.addEventListener(<span class="string">'deviceready'</span>, <span class="keyword">this</span>.onDeviceReady, <span class="literal">false</span>);</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="comment">// deviceready Event Handler</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> <span class="comment">// The scope of 'this' is the event. In order to call the 'receivedEvent'</span></span><br><span class="line"> <span class="comment">// function, we must explicitly call 'app.receivedEvent(...);'</span></span><br><span class="line"> onDeviceReady: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     app.receivedEvent(<span class="string">'deviceready'</span>);</span><br><span class="line"> <span class="keyword">var</span> dialog = cordova.require(<span class="string">'cordova-plugin-dialog.dialog'</span>);</span><br><span class="line"> dialog.show(<span class="string">'Dialog Title'</span>, <span class="string">'Hello Maple!'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"> </span><br><span class="line"> &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">message</span>) </span>&#123;</span><br><span class="line"> alert(message);</span><br><span class="line"> &#125;);</span><br><span class="line"> </span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="comment">// Update DOM on a Received Event</span></span><br><span class="line"> receivedEvent: <span class="function"><span class="keyword">function</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> parentElement = <span class="built_in">document</span>.getElementById(id);</span><br><span class="line"> <span class="keyword">var</span> listeningElement = parentElement.querySelector(<span class="string">'.listening'</span>);</span><br><span class="line"> <span class="keyword">var</span> receivedElement = parentElement.querySelector(<span class="string">'.received'</span>);</span><br><span class="line"></span><br><span class="line"> listeningElement.setAttribute(<span class="string">'style'</span>, <span class="string">'display:none;'</span>);</span><br><span class="line"> receivedElement.setAttribute(<span class="string">'style'</span>, <span class="string">'display:block;'</span>);</span><br><span class="line"></span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'Received Event: '</span> + id);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">app.initialize();</span><br></pre></td></tr></table></figure><p>3、cordova run ios<br>执行效果如图：<br><img src="/upload/old/201702result.jpeg" alt="result"> 大功告成，<br>附上插件源码：<a href="https://github.com/angelmeng86/cordova-plugin-dialog" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/angelmeng86/cordova-plugin-dialog</a><br>谢谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 混合开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cordova </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ionic 安装问题汇总</title>
      <link href="/ionic%20%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB.html"/>
      <url>/ionic%20%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、ionic-info出现如下警告"><a href="#一、ionic-info出现如下警告" class="headerlink" title="一、ionic info出现如下警告 "></a>一、ionic info出现如下警告 </h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>* </span><br><span class="line">Dependency warning - for the CLI to run correctly, it is highly recommended to install/upgrade the following: Please install your Cordova CLI to version  &gt;=4.2.0 \<span class="code">`npm install -g cordova\`</span> </span><br><span class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>*</span><br></pre></td></tr></table></figure><p>解决办法： </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">npm</span> <span class="selector-tag">install</span> <span class="selector-tag">-g</span> <span class="selector-tag">cordova</span>@<span class="keyword">6</span>.<span class="keyword">0</span>.<span class="keyword">0</span></span><br></pre></td></tr></table></figure><h1 id="二、ios-deploy无法安装-解决办法："><a href="#二、ios-deploy无法安装-解决办法：" class="headerlink" title="二、ios-deploy无法安装 解决办法："></a>二、ios-deploy无法安装 解决办法：</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm <span class="keyword">install</span> -g ios-deploy --unsafe-perm=<span class="keyword">true</span></span><br></pre></td></tr></table></figure><h1 id="三、ionic-run-ios-–device真机调试失败"><a href="#三、ionic-run-ios-–device真机调试失败" class="headerlink" title="三、ionic run ios –device真机调试失败 "></a>三、ionic run ios –device真机调试失败 </h1><p>解决办法：<br>进入到项目目录platform/ios中，打开xcode项目，然后配置所使用的开发者账号和签名</p>]]></content>
      
      
      <categories>
          
          <category> 混合开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ionic </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS开发小记</title>
      <link href="/iOS%E5%BC%80%E5%8F%91%E5%B0%8F%E8%AE%B0.html"/>
      <url>/iOS%E5%BC%80%E5%8F%91%E5%B0%8F%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h2 id="20150808"><a href="#20150808" class="headerlink" title="20150808 "></a>20150808 </h2><p>在使用nib加载view时，千万注意锚定功能合理选择，不然将会导致不可预知的高度缩放问题，因为iOS7以上版本，页面在加载时一般会进行一次缩放，这样它同时会对里面的控件也进行相应的缩放操作，谨记！</p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS UIScroll的一个BUG</title>
      <link href="/iOS%20UIScroll%E7%9A%84%E4%B8%80%E4%B8%AABUG.html"/>
      <url>/iOS%20UIScroll%E7%9A%84%E4%B8%80%E4%B8%AABUG.html</url>
      
        <content type="html"><![CDATA[<p><strong>之前发现了个UIScroll的BUG，让我郁闷半天，就是当继承该类时，如果使用init方法初始化，其将依次调用initWithFrame和init。真的很让人费解。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Android驱动设备节点自动创建</title>
      <link href="/Android%E9%A9%B1%E5%8A%A8%E8%AE%BE%E5%A4%87%E8%8A%82%E7%82%B9%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA.html"/>
      <url>/Android%E9%A9%B1%E5%8A%A8%E8%AE%BE%E5%A4%87%E8%8A%82%E7%82%B9%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA.html</url>
      
        <content type="html"><![CDATA[<h2 id="x00-背景"><a href="#x00-背景" class="headerlink" title="x00 背景"></a>x00 背景</h2><p>最近帮同事解决一个问题，就是在Ubuntu（主机）下编译的USB驱动程序，在设备热插拔的时候会自动创建设备节点，但是该驱动程序移植到Android系统下，则需要手动创建节点，该节点还需要手工配置DAC和MAC安全策略，对于实际使用中非常麻烦；</p><h2 id="0x01-问题分析及解决"><a href="#0x01-问题分析及解决" class="headerlink" title="0x01 问题分析及解决"></a>0x01 问题分析及解决</h2><p>参见文章《<a href="http://blog.chinaunix.net/uid-24545924-id-3128349.html" rel="external nofollow noopener noreferrer" target="_blank">Android Uevent 分析，从kernel到framework</a> 》 我们知道Android上层的uevent事件使用了自个的一套实现，接下来我们开发分析代码，源码文件：system/core/init/devices.c<br><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">static void handle\_generic\_device_event(struct uevent *uevent)</span><br><span class="line">&#123;</span><br><span class="line">    char *base;</span><br><span class="line">    const char *<span class="keyword">name</span>;</span><br><span class="line">    char devpath\[DEVPATH_LEN\] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    char **links = NULL;</span><br><span class="line"></span><br><span class="line">    INFO(<span class="string">"lwz usb: generic\_device\_event start\\n"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">name</span> = parse\_device\_<span class="keyword">name</span>(uevent, <span class="number">64</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">name</span>)</span><br><span class="line">        return;</span><br><span class="line">    <span class="comment">//打印收到的热插拔事件信息</span></span><br><span class="line">    INFO(<span class="string">"maple usb1: device\_name:%s, major:%d, minor:%d, action:%s name:%s\\n"</span>,  <span class="function"><span class="title">uevent</span>-&gt;</span><span class="function"><span class="title">device</span>\_name, uevent-&gt;</span><span class="function"><span class="title">major</span>, uevent-&gt;</span><span class="function"><span class="title">minor</span>, uevent-&gt;</span>action, <span class="keyword">name</span>);</span><br><span class="line">    struct ueventd_subsystem *subsystem =</span><br><span class="line">            <span class="function"><span class="title">ueventd</span>\_subsystem\_find\_by\_name(uevent-&gt;</span>subsystem);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (subsystem) &#123;</span><br><span class="line">        const char *devname;</span><br><span class="line">        <span class="function"><span class="title">switch</span> (subsystem-&gt;</span>devname_src) &#123;</span><br><span class="line">        case DEVNAME\_UEVENT\_DEVNAME:</span><br><span class="line">            <span class="function"><span class="title">devname</span> = uevent-&gt;</span>device_name;</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        case DEVNAME\_UEVENT\_DEVPATH:</span><br><span class="line">            devname = <span class="keyword">name</span>;</span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">        default:</span><br><span class="line">            ERROR(<span class="string">"%s subsystem's devpath option is not set; ignoring event\\n"</span>,</span><br><span class="line">                    <span class="function"><span class="title">uevent</span>-&gt;</span>subsystem);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="title">if</span> (!assemble_devpath(devpath, subsystem-&gt;</span>dirname, devname))</span><br><span class="line">            return;</span><br><span class="line">        mkdir\_recursive\_for_devpath(devpath);</span><br><span class="line">    &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span> (!strncmp(uevent-&gt;</span>subsystem, <span class="string">"usb"</span>, <span class="number">3</span>)) &#123;</span><br><span class="line">         <span class="function"><span class="title">if</span> (!strcmp(uevent-&gt;</span>subsystem, <span class="string">"usb"</span>)) &#123;</span><br><span class="line">            <span class="function"><span class="title">if</span> (uevent-&gt;</span>device_name) &#123;</span><br><span class="line">                <span class="function"><span class="title">if</span> (!assemble\_devpath(devpath, "/dev", uevent-&gt;</span>device\_<span class="keyword">name</span>))</span><br><span class="line">                    return;</span><br><span class="line">                mkdir\_recursive\_for_devpath(devpath);</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">else</span> &#123;</span><br><span class="line">                 /\* This imitates the file system that would be created</span><br><span class="line">                  \* <span class="keyword">if</span> we were using devfs instead.</span><br><span class="line">                  \* Minors are broken up into groups of <span class="number">128</span>, starting <span class="built_in">at</span> <span class="string">"001"</span></span><br><span class="line">                  */</span><br><span class="line">                 <span class="function"><span class="title">int</span> bus_id = uevent-&gt;</span>minor / <span class="number">128</span> + <span class="number">1</span>;</span><br><span class="line">                 <span class="function"><span class="title">int</span> device_id = uevent-&gt;</span>minor % <span class="number">128</span> + <span class="number">1</span>;</span><br><span class="line">                 /\* build directories */</span><br><span class="line">                 make_dir(<span class="string">"/dev/bus"</span>, <span class="number">0755</span>);</span><br><span class="line">                 make_dir(<span class="string">"/dev/bus/usb"</span>, <span class="number">0755</span>);</span><br><span class="line">                 snprintf(devpath, sizeof(devpath), <span class="string">"/dev/bus/usb/%03d"</span>, bus_id);</span><br><span class="line">                 make_dir(devpath, <span class="number">0755</span>);</span><br><span class="line">                 snprintf(devpath, sizeof(devpath), <span class="string">"/dev/bus/usb/%03d/%03d"</span>, bus\_id, device\_id);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             /\* ignore other USB events */</span><br><span class="line">             <span class="comment">//忽略一些不符合上述条件的USB事件，并返回</span></span><br><span class="line">        INFO(<span class="string">"maple usb: ignore other USB events\\n"</span>);</span><br><span class="line">             <span class="comment">//我这里是通过判断创建的节点名称是否是我们想要的，如果是则继续往下执行进行节点的创建和移除操作</span></span><br><span class="line">         <span class="function"><span class="title">if</span>(!strncmp(uevent-&gt;</span>device_name, <span class="string">"myusb"</span>, <span class="number">5</span>)) &#123;</span><br><span class="line">        base = <span class="string">"/dev/"</span>;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">             return;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span> (!strncmp(uevent-&gt;</span>subsystem, <span class="string">"graphics"</span>, <span class="number">8</span>)) &#123;</span><br><span class="line">         base = <span class="string">"/dev/graphics/"</span>;</span><br><span class="line">         make_dir(base, <span class="number">0755</span>);</span><br><span class="line">     &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span> (!strncmp(uevent-&gt;</span>subsystem, <span class="string">"drm"</span>, <span class="number">3</span>)) &#123;</span><br><span class="line">         base = <span class="string">"/dev/dri/"</span>;</span><br><span class="line">         make_dir(base, <span class="number">0755</span>);</span><br><span class="line">     &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span> (!strncmp(uevent-&gt;</span>subsystem, <span class="string">"oncrpc"</span>, <span class="number">6</span>)) &#123;</span><br><span class="line">         base = <span class="string">"/dev/oncrpc/"</span>;</span><br><span class="line">         make_dir(base, <span class="number">0755</span>);</span><br><span class="line">     &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span> (!strncmp(uevent-&gt;</span>subsystem, <span class="string">"adsp"</span>, <span class="number">4</span>)) &#123;</span><br><span class="line">         base = <span class="string">"/dev/adsp/"</span>;</span><br><span class="line">         make_dir(base, <span class="number">0755</span>);</span><br><span class="line">     &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span> (!strncmp(uevent-&gt;</span>subsystem, <span class="string">"msm_camera"</span>, <span class="number">10</span>)) &#123;</span><br><span class="line">         base = <span class="string">"/dev/msm_camera/"</span>;</span><br><span class="line">         make_dir(base, <span class="number">0755</span>);</span><br><span class="line">     &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span>(!strncmp(uevent-&gt;</span>subsystem, <span class="string">"input"</span>, <span class="number">5</span>)) &#123;</span><br><span class="line">         base = <span class="string">"/dev/input/"</span>;</span><br><span class="line">         make_dir(base, <span class="number">0755</span>);</span><br><span class="line">     &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span>(!strncmp(uevent-&gt;</span>subsystem, <span class="string">"mtd"</span>, <span class="number">3</span>)) &#123;</span><br><span class="line">         base = <span class="string">"/dev/mtd/"</span>;</span><br><span class="line">         make_dir(base, <span class="number">0755</span>);</span><br><span class="line">     &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span>(!strncmp(uevent-&gt;</span>subsystem, <span class="string">"sound"</span>, <span class="number">5</span>)) &#123;</span><br><span class="line">         base = <span class="string">"/dev/snd/"</span>;</span><br><span class="line">         make_dir(base, <span class="number">0755</span>);</span><br><span class="line">     &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span>(!strncmp(uevent-&gt;</span>subsystem, <span class="string">"misc"</span>, <span class="number">4</span>) &amp;&amp;</span><br><span class="line">                 !strncmp(<span class="keyword">name</span>, <span class="string">"log_"</span>, <span class="number">4</span>)) &#123;</span><br><span class="line">         kernel_logger();</span><br><span class="line">         base = <span class="string">"/dev/log/"</span>;</span><br><span class="line">         make_dir(base, <span class="number">0755</span>);</span><br><span class="line">         <span class="keyword">name</span> += <span class="number">4</span>;</span><br><span class="line">     &#125; <span class="function"><span class="title">else</span> <span class="keyword">if</span> (!strncmp(uevent-&gt;</span>subsystem, <span class="string">"dvb"</span>, <span class="number">3</span>)) &#123;</span><br><span class="line">         /\* This imitates the file system that would be created</span><br><span class="line">          \* <span class="keyword">if</span> we were using devfs instead to preserve backward compatibility</span><br><span class="line">          \* <span class="keyword">for</span> users of dvb devices</span><br><span class="line">          */</span><br><span class="line">         int adapter_id;</span><br><span class="line">         char dev_name\[<span class="number">20</span>\] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">         sscanf(<span class="keyword">name</span>, <span class="string">"dvb%d.%s"</span>, &amp;adapter\_id, dev\_<span class="keyword">name</span>);</span><br><span class="line"></span><br><span class="line">         /\* build dvb directory */</span><br><span class="line">         base = <span class="string">"/dev/dvb"</span>;</span><br><span class="line">         mkdir(base, <span class="number">0755</span>);</span><br><span class="line"></span><br><span class="line">         /\* build adapter directory */</span><br><span class="line">         snprintf(devpath, sizeof(devpath), <span class="string">"/dev/dvb/adapter%d"</span>, adapter_id);</span><br><span class="line">         mkdir(devpath, <span class="number">0755</span>);</span><br><span class="line"></span><br><span class="line">         /\* build actual device directory */</span><br><span class="line">         snprintf(devpath, sizeof(devpath), <span class="string">"/dev/dvb/adapter%d/%s"</span>,</span><br><span class="line">                  adapter\_id, dev\_<span class="keyword">name</span>);</span><br><span class="line">     &#125; <span class="keyword">else</span></span><br><span class="line">         base = <span class="string">"/dev/"</span>;</span><br><span class="line">     links = get\_character\_device_symlinks(uevent);</span><br><span class="line">     <span class="keyword">if</span> (!links)</span><br><span class="line">         links = get\_v4l\_device_symlinks(uevent);</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> (!devpath\[<span class="number">0</span>\])</span><br><span class="line">         snprintf(devpath, sizeof(devpath), <span class="string">"%s%s"</span>, base, <span class="keyword">name</span>);</span><br><span class="line">    <span class="comment">//开始进行热插拔处理，包括设备节点的创建和移除，可参考相关代码继续分析</span></span><br><span class="line">    INFO(<span class="string">"maple usb: devpath %s, major:%d, minor:%d, action:%s\\n"</span>, <span class="function"><span class="title">devpath</span>, uevent-&gt;</span><span class="function"><span class="title">major</span>, uevent-&gt;</span><span class="function"><span class="title">minor</span>, uevent-&gt;</span>action);</span><br><span class="line">     <span class="function"><span class="title">handle_device</span>(uevent-&gt;</span><span class="function"><span class="title">action</span>, devpath, uevent-&gt;</span><span class="built_in">path</span>, <span class="number">0</span>,</span><br><span class="line">             <span class="function"><span class="title">uevent</span>-&gt;</span><span class="function"><span class="title">major</span>, uevent-&gt;</span>minor, links);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux kernel directio（内核态实现direct IO）</title>
      <link href="/Linux%20kernel%20directio%EF%BC%88%E5%86%85%E6%A0%B8%E6%80%81%E5%AE%9E%E7%8E%B0direct%20IO%EF%BC%89.html"/>
      <url>/Linux%20kernel%20directio%EF%BC%88%E5%86%85%E6%A0%B8%E6%80%81%E5%AE%9E%E7%8E%B0direct%20IO%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-需求"><a href="#0x00-需求" class="headerlink" title="0x00 需求"></a>0x00 需求</h2><p>近段时间在研究Strongswans，需要加入硬件算法，由于Strongswans中的IPSec通道加密依赖于内核的XFRM框架，所以需要在内核层实现加密硬件的驱动，涉及到了对设备文件的O_DIRECT操作，在测试中遇到一些问题并通过以下文章受到启发，对其进行了代码改进。<br>参考文章：《<a href="http://blog.csdn.net/u010059563/article/details/41655835" rel="external nofollow noopener noreferrer" target="_blank">内核态下实现direct IO</a>》</p><h2 id="0x01-优化"><a href="#0x01-优化" class="headerlink" title="0x01 优化"></a>0x01 优化</h2><p>文章所使用的do_mmap_pgoff方法是内核内部方法，所以需要对内核进行修改并重新编译后才能运用于内核模块的使用。通过该方法顺藤摸瓜，我找到了一个内核导出方法，经测试能够正常使用，方法如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">vm_munmap</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span>, <span class="keyword">size_t</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">vm_mmap</span><span class="params">(struct file *, <span class="keyword">unsigned</span> <span class="keyword">long</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">unsigned</span> <span class="keyword">long</span>, <span class="keyword">unsigned</span> <span class="keyword">long</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">unsigned</span> <span class="keyword">long</span>, <span class="keyword">unsigned</span> <span class="keyword">long</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>vm_mmap内部其实就是调用了do_mmap_pgoff方法，原理一样，只是不需要重新编译内核，参考上述文章代码修改如下（蓝色字体）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/mm.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/fs.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;asm/uaccess.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;asm/mman.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN 1024*64</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COUNT 1024*1024/32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIR_OUT <span class="meta-string">"/home/wpp/Desktop/wpp.txt"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">run_time</span><span class="params">(struct timeval end, struct timeval start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> sec, usec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(end.tv_usec &gt;= start.tv_usec)</span><br><span class="line">&#123;</span><br><span class="line">sec = end.tv_sec - start.tv_sec;</span><br><span class="line">usec = end.tv_usec - start.tv_usec;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">sec = end.tv_sec - start.tv_sec - <span class="number">1</span>;</span><br><span class="line">usec = end.tv_usec + <span class="number">1000000</span> - start.tv_usec;</span><br><span class="line">&#125;</span><br><span class="line">printk(<span class="string">"the run time is %lus%luus\n"</span>, sec, usec);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sec*<span class="number">1000000</span> + usec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> __<span class="function">init <span class="title">temp_init_module</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">file</span> *<span class="title">fp</span>;</span></span><br><span class="line"><span class="keyword">char</span> *buf;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> i, populate, rate, time;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">start</span>, <span class="title">end</span>;</span></span><br><span class="line"><span class="keyword">mm_segment_t</span> old_fs;</span><br><span class="line"><span class="keyword">loff_t</span> pos;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> memp;</span><br><span class="line"></span><br><span class="line">fp = filp_open(DIR_OUT, O_RDWR | O_CREAT | O_DIRECT, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(IS_ERR(fp))</span><br><span class="line">&#123;</span><br><span class="line">printk(<span class="string">"open error\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">buf = <span class="literal">NULL</span>;</span><br><span class="line">memp = vm_mmap(<span class="literal">NULL</span>, <span class="number">0</span>, LEN, PROT_READ | PROT_WRITE, MAP_PRIVATE, <span class="number">0</span>);<span class="comment">//add by maple</span></span><br><span class="line">buf = (<span class="keyword">char</span> *)memp;<span class="comment">//add by maple</span></span><br><span class="line"><span class="comment">//buf = (char *)do_mmap_pgoff(NULL, 0, LEN, PROT_READ | PROT_WRITE, MAP_SHARED, 0, &amp;populate);</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == buf)</span><br><span class="line">&#123;</span><br><span class="line">printk(<span class="string">"do_mmap_pgoff error\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="string">'w'</span>, LEN<span class="number">-1</span>);</span><br><span class="line">buf[LEN<span class="number">-1</span>] = <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">old_fs = get_fs();</span><br><span class="line">set_fs(KERNEL_DS);</span><br><span class="line">pos = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">do_gettimeofday(&amp;start);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;COUNT; i++)</span><br><span class="line">vfs_write(fp, (<span class="keyword">char</span> *)buf, LEN, &amp;pos);</span><br><span class="line">do_gettimeofday(&amp;end);</span><br><span class="line"></span><br><span class="line">time = run_time(end, start);</span><br><span class="line">rate = (<span class="number">2</span>*<span class="number">1024</span>*<span class="number">1000000</span>) / time;</span><br><span class="line">printk(<span class="string">"the rate of write no cache is %luM/s\n"</span>, rate);</span><br><span class="line"></span><br><span class="line">set_fs(old_fs);</span><br><span class="line">filp_close(fp, <span class="literal">NULL</span>);</span><br><span class="line">vm_munmap(memp, LEN);<span class="comment">//add by maple</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> __<span class="function"><span class="built_in">exit</span> <span class="title">temp_exit_module</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">printk(<span class="string">"Goodbye\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module_init(temp_init_module);</span><br><span class="line">module_exit(temp_exit_module);</span><br><span class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 服务端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kernel </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux kernel内核源码gitignore</title>
      <link href="/linux%20kernel%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81gitignore.html"/>
      <url>/linux%20kernel%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81gitignore.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># NOTE! Don't add files that are generated in specific</span></span><br><span class="line"><span class="comment"># subdirectories here. Add them in the ".gitignore" file</span></span><br><span class="line"><span class="comment"># in that subdirectory instead.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># NOTE! Please use 'git ls-files -i --exclude-standard'</span></span><br><span class="line"><span class="comment"># command after changing this file, to see if there are</span></span><br><span class="line"><span class="comment"># any tracked files which get ignored after the change.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Normal rules</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">.*</span><br><span class="line">*<span class="string">.o</span></span><br><span class="line">*<span class="string">.o.</span>*</span><br><span class="line">*<span class="string">.a</span></span><br><span class="line">*<span class="string">.s</span></span><br><span class="line">*<span class="string">.ko</span></span><br><span class="line">*<span class="string">.so</span></span><br><span class="line">*<span class="string">.so.dbg</span></span><br><span class="line">*<span class="string">.mod.c</span></span><br><span class="line">*<span class="string">.i</span></span><br><span class="line">*<span class="string">.lst</span></span><br><span class="line">*<span class="string">.symtypes</span></span><br><span class="line">*<span class="string">.order</span></span><br><span class="line">*<span class="string">.elf</span></span><br><span class="line">*<span class="string">.bin</span></span><br><span class="line">*<span class="string">.gz</span></span><br><span class="line">*<span class="string">.bz2</span></span><br><span class="line">*<span class="string">.lzma</span></span><br><span class="line">*<span class="string">.xz</span></span><br><span class="line">*<span class="string">.lz4</span></span><br><span class="line">*<span class="string">.lzo</span></span><br><span class="line">*<span class="string">.patch</span></span><br><span class="line">*<span class="string">.gcno</span></span><br><span class="line">modules.builtin</span><br><span class="line">Module.symvers</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Top-level generic files</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="string">/tags</span></span><br><span class="line"><span class="string">/TAGS</span></span><br><span class="line"><span class="string">/linux</span></span><br><span class="line"><span class="string">/vmlinux</span></span><br><span class="line"><span class="string">/vmlinuz</span></span><br><span class="line"><span class="string">/System.map</span></span><br><span class="line"><span class="string">/Module.markers</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Debian directory (make deb-pkg)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="string">/debian/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># git files that we don't want to ignore even it they are dot-files</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">!<span class="string">.gitignore</span></span><br><span class="line">!<span class="string">.mailmap</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Generated include files</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">include/config</span><br><span class="line">include/generated</span><br><span class="line">arch/*<span class="string">/include/generated</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># stgit generated dirs</span></span><br><span class="line">patches-*</span><br><span class="line"></span><br><span class="line"><span class="comment"># quilt's files</span></span><br><span class="line">patches</span><br><span class="line">series</span><br><span class="line"></span><br><span class="line"><span class="comment"># cscope files</span></span><br><span class="line">cscope.*</span><br><span class="line">ncscope.*</span><br><span class="line"></span><br><span class="line"><span class="comment"># gnu global files</span></span><br><span class="line">GPATH</span><br><span class="line">GRTAGS</span><br><span class="line">GSYMS</span><br><span class="line">GTAGS</span><br><span class="line"></span><br><span class="line">*<span class="string">.orig</span></span><br><span class="line">*~</span><br><span class="line">\\<span class="comment">#*#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Leavings from module signing</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">extra_certificates</span><br><span class="line">signing_key.priv</span><br><span class="line">signing_key.x509</span><br><span class="line">x509.genkey</span><br><span class="line"></span><br><span class="line"><span class="comment"># Kconfig presets</span></span><br><span class="line">all.config</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何在Mac OS X中开启或关闭显示隐藏文件命令</title>
      <link href="/%E5%A6%82%E4%BD%95%E5%9C%A8Mac%20OS%20X%E4%B8%AD%E5%BC%80%E5%90%AF%E6%88%96%E5%85%B3%E9%97%AD%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%91%BD%E4%BB%A4.html"/>
      <url>/%E5%A6%82%E4%BD%95%E5%9C%A8Mac%20OS%20X%E4%B8%AD%E5%BC%80%E5%90%AF%E6%88%96%E5%85%B3%E9%97%AD%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%91%BD%E4%BB%A4.html</url>
      
        <content type="html"><![CDATA[<p>显示：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com<span class="selector-class">.apple</span><span class="selector-class">.finder</span> AppleShowAllFiles -bool true</span><br></pre></td></tr></table></figure></p><p>隐藏：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com<span class="selector-class">.apple</span><span class="selector-class">.finder</span> AppleShowAllFiles -bool false</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac os </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用 gperf 实现高效的 C/C++ 命令行处理</title>
      <link href="/%E4%BD%BF%E7%94%A8gperf%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%95%88%E7%9A%84C%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%84%E7%90%86.html"/>
      <url>/%E4%BD%BF%E7%94%A8gperf%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%95%88%E7%9A%84C%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%84%E7%90%86.html</url>
      
        <content type="html"><![CDATA[<h2 id="常见-gperf-选项"><a href="#常见-gperf-选项" class="headerlink" title="常见 gperf 选项"></a>常见 gperf 选项</h2><p>Gperf 是可以接受不同选项的高度可定制工具。gperf 在线手册（参阅 <a href="http://www.ibm.com/developerworks/cn/linux/l-gperf.html#resources" rel="external nofollow noopener noreferrer" target="_blank">参考资料小节</a> 中的链接）说明了 gperf 中所有可用的选项，包括：</p><ul><li><strong><code>-L _language-name_</code>：</strong>指示 gperf 使用指定的语言生成输出。目前支持以下几个选项：<ul><li><strong><code>KR-C</code>：</strong>这种老式的 K&amp;R C 可以得到新旧 C 编译器的支持，但是新的符合 ANSI C 标准的编译器可能会生成警告，或者，某些情况下甚至会生成标志错误。</li><li><strong>C：</strong>该选项将生成 C 代码，但是如果不对已有源代码进行调整，则可能无法使用某些旧的 C 编译器进行编译。</li><li><strong><code>ANSI-C</code>：</strong>该选项生成符合 ANSI C 标准的代码，只能使用符合 ANSI C 标准的编译器或 C++ 编译器进行编译。</li><li><strong>C++：</strong>该选项生成 C++ 代码。</li></ul></li><li><strong><code>-N</code>：</strong>该选项允许用户修改查找函数的名称。默认名为 <code>in_word_set()</code>。</li><li><strong><code>-H</code>：</strong>该选项允许用户修改散列例程的名称。默认名为 <code>hash()</code>。</li><li><strong><code>-Z</code>：</strong>该选项在提供了 <code>-L</code> C++ 选项时使用。它允许用户指定所生成的 C++ 类的名称，该类包含 <code>in_word_set()</code> 和 <code>hash()</code> 函数。默认名为<code>Perfect_Hash</code>。</li><li><strong><code>-G</code>：</strong>该选项将生成查找表并将其作为静态全局变量，而不是在查找函数内生成以隐藏该表（默认行为）。</li><li><strong><code>-C</code>：</strong>前面讨论了 Gperf 将生成查找表。<code>-C</code> 选项将创建使用 <code>const</code> 关键字声明的查找表。所有生成的查找表中的内容都是常量 — 即只读形式。很多编译器通过将表放入只读内存中可以生成更高效的代码。</li><li><strong><code>-D</code>：</strong>该选项将处理散列为重复值的关键字。</li><li><strong><code>-t</code>：</strong>该选项允许包含关键字结构。</li><li><strong><code>-K</code>：</strong>该选项允许用户选择关键字结构中的关键字组件的名称。</li><li><strong><code>-p</code>：</strong>该选项可以与较早版本的 gperf 兼容。在早期版本中，它将生成的函数 <code>in_word_set()</code> 返回的默认布尔值（即 0 或 1 ）修改为<code>pointer to wordlist array</code> 类型。这个选项非常有用，尤其是在使用 <code>-t</code>（允许使用用户定义的 <code>structs</code>）选项时。在最新版的 gperf 中并不要求使用该选项并且可以将其删除。</li></ul><p>转自原文：<a href="http://www.ibm.com/developerworks/cn/linux/l-gperf.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.ibm.com/developerworks/cn/linux/l-gperf.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gperf </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>automake工具</title>
      <link href="/automake%E5%B7%A5%E5%85%B7.html"/>
      <url>/automake%E5%B7%A5%E5%85%B7.html</url>
      
        <content type="html"><![CDATA[<p>转自<a href="http://blog.csdn.net/fd315063004/article/details/7785504" rel="external nofollow noopener noreferrer" target="_blank">http://blog.csdn.net/fd315063004/article/details/7785504</a> <img src="/upload/old/2012020923064228.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> automake </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JNI基础数据签名类型字段对应关系</title>
      <link href="/JNI%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%AD%BE%E5%90%8D%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB.html"/>
      <url>/JNI%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%AD%BE%E5%90%8D%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB.html</url>
      
        <content type="html"><![CDATA[<h2 id="Type-Signatures"><a href="#Type-Signatures" class="headerlink" title="Type Signatures"></a>Type Signatures</h2><table><thead><tr><th>Type Signature</th><th>Java Type</th></tr></thead><tbody><tr><td>Z</td><td>boolean</td></tr><tr><td>B</td><td>byte</td></tr><tr><td>C</td><td>char</td></tr><tr><td>S</td><td>short</td></tr><tr><td>I</td><td>int</td></tr><tr><td>J</td><td>long</td></tr><tr><td>F</td><td>float</td></tr><tr><td>D</td><td>double</td></tr><tr><td>L fully-qualified-class;</td><td>fully-qualified-class</td></tr><tr><td>[ type</td><td>type[]</td></tr><tr><td>( arg-types ) ret-type</td><td>method type</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 基础开发知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jni </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Xposed之拦截经验分享</title>
      <link href="/Xposed%E4%B9%8B%E6%8B%A6%E6%88%AA%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB.html"/>
      <url>/Xposed%E4%B9%8B%E6%8B%A6%E6%88%AA%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-简述"><a href="#0x00-简述" class="headerlink" title="0x00 简述"></a>0x00 简述</h2><p>Xposed可以拦截Davik和Art虚拟机中的Java级方法，包括定义的jni接口，所以它能做的事情很多，只有想不到，没有做不到。</p><h2 id="0x01-某信拦截"><a href="#0x01-某信拦截" class="headerlink" title="0x01 某信拦截"></a>0x01 某信拦截</h2><p>某信是国内目前最流行的通信软件，相信大家都有很多这样那样的新想法，比如某商、某营销等等；下面针对某信里面的一些拦截思路进行整理，与大家分享一下。</p><h2 id="0x02-反编译工具"><a href="#0x02-反编译工具" class="headerlink" title="0x02 反编译工具"></a>0x02 反编译工具</h2><p>首先，我们要拦截某信，肯定是需要对某信的业务代码进行分析，所以需要对某信应用进行反编译（如果应用加壳的话，会增加一定难度，这里仅讨论未加壳的情况）。 用到的工具有：</p><h3 id="1、dex2jar-jd-gui"><a href="#1、dex2jar-jd-gui" class="headerlink" title="1、dex2jar+jd-gui"></a>1、dex2jar+jd-gui</h3><p>很好用的一个工具，但是反编译出来的java代码会有一些错误。</p><h3 id="2、Smali2Java"><a href="#2、Smali2Java" class="headerlink" title="2、Smali2Java"></a>2、Smali2Java</h3><p>和上面的工具差不多，只有windows平台版本。</p><h3 id="3、apktool"><a href="#3、apktool" class="headerlink" title="3、apktool"></a>3、apktool</h3><p>该工具用于对APK进行解包，如AndroidMinifest.xml文件等，它还可以把dex反编译为smali代码，当上述反编译工具得到的代码不全的时候可以结合smali代码进行分析。</p><h2 id="0x03-功能拦截思路"><a href="#0x03-功能拦截思路" class="headerlink" title="0x03 功能拦截思路"></a>0x03 功能拦截思路</h2><p>大多数的APK应用都没有加壳保护，但是都进行了混淆，这样使得反编译出来的代码都是一些无意义的abcd…，这样增大了我们逆向分析的难度。所以我们需要一些方法去查找我们想要的功能，并进行拦截。<br>针对某信的文本、语音、图片的拦截思路都是大同小异，就是根据<strong>系统提供的方法</strong>去往上追溯分析（<strong>Framework层提供的API不会被混淆，应用和系统资源交互一定会使用到这些API</strong>），然后找到一个合适的拦截点进行拦截，然后对输入的数据进行自定义需求处理。<br>比如说文本的替换功能分析，我们可以通过对TextView的getText和setText方法进行拦截，因为应用要获取用户输入的消息必须从编辑框（系统控件）中获取信息，然后最终进行业务处理后进行发送，我们就可以在这一些地方进行拦截进行测试；<br>这样拦截后我们又遇到一个问题，因为应用很多地方都用到上述两个方法，我们怎么定位到想到的地方，这里我们可以通过打印栈信息往上分析： <strong>Log.d(tag, Log.getStackTraceString(new Throwable()));</strong> 在拦截点通过上述方式可以把调用的栈信息打印出来，结合反编译出来的代码进行分析，找到我们想要的拦截点。<br>与此类推，语音和图片的拦截点查找也是如此，通过对系统录音的几个方法进行拦截找到拦截测试点，再通过栈信息查找到最优的拦截点进行拦截处理。语音和图片都是文件，所以它们也可以通过<strong>文件IO的API（FileInputStream和FileOutputStream）</strong>去进行拦截然后分析栈信息。</p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p>上述大概讲述了一下某信应用的一些拦截思路，这一块的理解需要更多的实践去消化，另外如果有更好的方法可以在下方给我们留言，大家一同探讨。</p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> xposed </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Android应用强制停止工具</title>
      <link href="/Android%E5%BA%94%E7%94%A8%E5%BC%BA%E5%88%B6%E5%81%9C%E6%AD%A2%E5%B7%A5%E5%85%B7.html"/>
      <url>/Android%E5%BA%94%E7%94%A8%E5%BC%BA%E5%88%B6%E5%81%9C%E6%AD%A2%E5%B7%A5%E5%85%B7.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-背景需求"><a href="#0x00-背景需求" class="headerlink" title="0x00 背景需求"></a>0x00 背景需求</h2><p>自己使用的Android定制手机，用了一段时间后总是发现系统响应慢或者死机，所以根据Android系统设置中强制停止应用的原理，写了一个简单小工具，给自己用，也和大家分享一下。</p><h2 id="0x01-技术实现"><a href="#0x01-技术实现" class="headerlink" title="0x01 技术实现"></a>0x01 技术实现</h2><p>Android系统中Setting设置有个功能，应用程序强制停止，该功能只能执行单个应用的停止，而且由于界面跳转和操作繁琐，对如今我们所使用的手机存在几十个应用的情况，更是像一个鸡肋； 借着这个思路我写一个小程序实现批量的应用程序停止操作，借鉴framework源码，查到该功能使用了ActivityManager.forceStopPackage方法；</p><h2 id="0x02-关键代码"><a href="#0x02-关键代码" class="headerlink" title="0x02 关键代码"></a>0x02 关键代码</h2><p>//通过传入应用程序包名强制停止该应用，并且不允许该应用自动启动，直到用户手动启动它<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">killProcesses</span><span class="params">(String packname)</span> </span>&#123;</span><br><span class="line">    ActivityManager am = (ActivityManager)<span class="keyword">this</span>.getSystemService(</span><br><span class="line">    Context.ACTIVITY_SERVICE);</span><br><span class="line">    am.forceStopPackage(packname);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上述方法需要的包名我们可以通过两种方式获取，一种是通过Android的服务接口获取当前所安装的应用，另一种是通过shell命令获取； 下面讲的就是通过shell命令获取的方法：<br>//获取第三方安装的应用包名列表，可以使用adb shell终端输入看看结果</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm <span class="type">list</span> packages <span class="number">-3</span></span><br></pre></td></tr></table></figure><p>得到包名后就可以结合上述killProcesses方法进行批量应用的停止清理操作了； 具体工程参考：<br><a href="https://github.com/angelmeng86/AppForceStop" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/angelmeng86/AppForceStop</a></p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OpenSSL常用命令</title>
      <link href="/OpenSSL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
      <url>/OpenSSL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</url>
      
        <content type="html"><![CDATA[<p>把自己经常使用的openssl命令进行记录，方便查阅</p><h3 id="x509证书格式转换-DER-PEM"><a href="#x509证书格式转换-DER-PEM" class="headerlink" title="x509证书格式转换 DER-PEM"></a>x509证书格式转换 DER-PEM</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -inform DER -outform PEM -<span class="keyword">in</span> cert<span class="selector-class">.der</span> -out cert.pem</span><br><span class="line">openssl x509 -inform PEM -outform DER -<span class="keyword">in</span> cert<span class="selector-class">.pem</span> -out cert.der</span><br></pre></td></tr></table></figure><p>命令帮助：<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl <span class="keyword">x</span><span class="number">509</span> -h</span><br></pre></td></tr></table></figure></p><h3 id="Pkcs7-p7b-证书链使用"><a href="#Pkcs7-p7b-证书链使用" class="headerlink" title="Pkcs7 p7b 证书链使用"></a>Pkcs7 p7b 证书链使用</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl crl2pkcs7 -nocrl -certfile cert1<span class="selector-class">.pem</span> -certfile cert2<span class="selector-class">.pem</span> -certfile cert3<span class="selector-class">.pem</span> -out certchain.p7b</span><br></pre></td></tr></table></figure><p>命令帮助：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">openssl</span> crl2pkcs7 -h</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openssl </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
      <url>/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x01-安装包安装卸载"><a href="#0x01-安装包安装卸载" class="headerlink" title="0x01 安装包安装卸载"></a>0x01 安装包安装卸载</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install google-chrome-unstable</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> <span class="builtin-name">remove</span> --purge google-chrome-unstable</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> autoremove</span><br></pre></td></tr></table></figure><h2 id="0x02-监控文件更新信息，用于查看日志文件"><a href="#0x02-监控文件更新信息，用于查看日志文件" class="headerlink" title="0x02 监控文件更新信息，用于查看日志文件"></a>0x02 监控文件更新信息，用于查看日志文件</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /<span class="built_in">var</span>/<span class="built_in">log</span>/messages</span><br></pre></td></tr></table></figure><h2 id="0x03-开启root用户权限"><a href="#0x03-开启root用户权限" class="headerlink" title="0x03 开启root用户权限"></a>0x03 开启root用户权限</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo passwd root</span></span><br></pre></td></tr></table></figure><h2 id="0x04-ssh开启root远程登录权限"><a href="#0x04-ssh开启root远程登录权限" class="headerlink" title="0x04 ssh开启root远程登录权限"></a>0x04 ssh开启root远程登录权限</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi <span class="regexp">/etc/</span>ssh<span class="regexp">/sshd_config</span></span><br></pre></td></tr></table></figure><p>将PermitRootLogin without-password 修改为PermitRootLogin yes<br>重启ssh服务</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">service ssh restart</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础开发知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ubuntu下编译Strongswan5.5</title>
      <link href="/Ubuntu%E4%B8%8B%E7%BC%96%E8%AF%91Strongswan5.5.html"/>
      <url>/Ubuntu%E4%B8%8B%E7%BC%96%E8%AF%91Strongswan5.5.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-下载源码"><a href="#0x00-下载源码" class="headerlink" title="0x00 下载源码"></a>0x00 下载源码</h2><p>首先去官网Download</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//download.strongswan.org/strongswan-5.5.0.tar.bz2</span></span><br><span class="line"></span><br><span class="line">tar -xvf strongswan-<span class="number">5.5</span>.<span class="number">0</span><span class="selector-class">.tar</span><span class="selector-class">.bz2</span></span><br></pre></td></tr></table></figure><h2 id="0x01-系统环境"><a href="#0x01-系统环境" class="headerlink" title="0x01 系统环境"></a>0x01 系统环境</h2><p>Ubuntu 14.04TLS</p><h2 id="0x02-编译依赖"><a href="#0x02-编译依赖" class="headerlink" title="0x02 编译依赖"></a>0x02 编译依赖</h2><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install libssl-<span class="built_in">dev</span> libgmp-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure><h2 id="0x03-编译配置"><a href="#0x03-编译配置" class="headerlink" title="0x03 编译配置"></a>0x03 编译配置</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./configure</span> <span class="params">--prefix=/usr</span> <span class="params">--sysconfdir=/etc</span> <span class="params">--enable-openssl</span> <span class="params">--enable-nat-transport</span> <span class="params">--disable-mysql</span> <span class="params">--disable-ldap</span> <span class="params">--disable-static</span> <span class="params">--enable-shared</span> <span class="params">--enable-md4</span> <span class="params">--enable-eap-mschapv2</span> <span class="params">--enable-eap-aka</span> <span class="params">--enable-eap-aka-3gpp2</span> <span class="params">--enable-eap-gtc</span> <span class="params">--enable-eap-identity</span> <span class="params">--enable-eap-md5</span> <span class="params">--enable-eap-peap</span> <span class="params">--enable-eap-radius</span> <span class="params">--enable-eap-sim</span> <span class="params">--enable-eap-sim-file</span> <span class="params">--enable-eap-simaka-pseudonym</span> <span class="params">--enable-eap-simaka-reauth</span> <span class="params">--enable-eap-simaka-sql</span> <span class="params">--enable-eap-tls</span> <span class="params">--enable-eap-tnc</span> <span class="params">--enable-eap-ttls</span></span><br></pre></td></tr></table></figure><h2 id="0x04-编译安装"><a href="#0x04-编译安装" class="headerlink" title="0x04 编译安装"></a>0x04 编译安装</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span></span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure><h2 id="0x05-配置使用"><a href="#0x05-配置使用" class="headerlink" title="0x05 配置使用"></a>0x05 配置使用</h2><p>请参考<a href="https://zh.opensuse.org/SDB:Setup_Ipsec_VPN_with_Strongswan" rel="external nofollow noopener noreferrer" target="_blank">https://zh.opensuse.org/SDB:Setup_Ipsec_VPN_with_Strongswan</a></p>]]></content>
      
      
      <categories>
          
          <category> 服务端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ipsec </tag>
            
            <tag> strongswan </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iOS中backBarButtonItem去掉文字，保留原生箭头方法</title>
      <link href="/iOS%E4%B8%ADbackBarButtonItem%E5%8E%BB%E6%8E%89%E6%96%87%E5%AD%97%EF%BC%8C%E4%BF%9D%E7%95%99%E5%8E%9F%E7%94%9F%E7%AE%AD%E5%A4%B4%E6%96%B9%E6%B3%95.html"/>
      <url>/iOS%E4%B8%ADbackBarButtonItem%E5%8E%BB%E6%8E%89%E6%96%87%E5%AD%97%EF%BC%8C%E4%BF%9D%E7%95%99%E5%8E%9F%E7%94%9F%E7%AE%AD%E5%A4%B4%E6%96%B9%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">self</span>.navigationItem.backBarButtonItem = </span><br><span class="line">    [[<span class="built_in">UIBarButtonItem</span> alloc] initWithTitle:<span class="string">@""</span> </span><br><span class="line">                             style:<span class="built_in">UIBarButtonItemStylePlain</span> </span><br><span class="line">                             target:<span class="literal">nil</span> action:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Gitlab源码管理及持续集成</title>
      <link href="/Gitlab%E6%BA%90%E7%A0%81%E7%AE%A1%E7%90%86%E5%8F%8A%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90.html"/>
      <url>/Gitlab%E6%BA%90%E7%A0%81%E7%AE%A1%E7%90%86%E5%8F%8A%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90.html</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-Gitlab安装"><a href="#0x00-Gitlab安装" class="headerlink" title="0x00 Gitlab安装"></a>0x00 Gitlab安装</h1><p>Gitlab到目前为止已经发展得很成熟了，可以登录其官方网站进行对于操作系统的安装包下载，基本安装方式都是一键傻瓜安装。 网址：<a href="https://about.gitlab.com/" rel="external nofollow noopener noreferrer" target="_blank">https://about.gitlab.com/</a><br>我使用的是Ubuntu 64位系统，安装包gitlab-ce_8.7.3-ce.0_amd64.deb，建议安装8.0以上版本，因为该版本可以很好的支持可持续集成功能。</p><h1 id="0x01-Gitlab源码管理"><a href="#0x01-Gitlab源码管理" class="headerlink" title="0x01 Gitlab源码管理"></a>0x01 Gitlab源码管理</h1><p>1、首先，登录Gitlab，添加自己的SSH Keys，如图<br><img src="/upload/old/201606snapshot1.png" alt="snapshot1"> </p><p>2、创建一个test仓库 <img src="/upload/old/201606snapshot2.png" alt="snapshot2">    </p><p>3、输入如下命令，提交代码至仓库中。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir <span class="built_in">test</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> touch main.c</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim main.c</span></span><br></pre></td></tr></table></figure></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello GitLab!\\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git init</span><br><span class="line"><span class="variable">$ </span>git add -A</span><br><span class="line"><span class="variable">$ </span>git commit -m <span class="string">"git init"</span></span><br><span class="line"><span class="variable">$ </span>git remote add origin  git<span class="variable">@192</span>.<span class="number">168.1</span>.<span class="number">5</span><span class="symbol">:mapple/test</span>.git</span><br><span class="line"><span class="variable">$ </span>ssh-add SSH Key对应的私钥文件</span><br><span class="line"><span class="variable">$ </span>git push -u origin master</span><br></pre></td></tr></table></figure><h1 id="0x02-Gitlab持续集成"><a href="#0x02-Gitlab持续集成" class="headerlink" title="0x02 Gitlab持续集成"></a>0x02 Gitlab持续集成</h1><p>首先，在你进行持续集成的服务器上安装如下工具</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L http<span class="variable">s:</span>//packages.gitlab.<span class="keyword">com</span>/install/repositories/runner/gitlab-ci-multi-runner/script.<span class="keyword">deb</span>.<span class="keyword">sh</span> | sudo bash</span><br><span class="line">sudo apt-<span class="built_in">get</span> install gitlab-ci-multi-runner</span><br></pre></td></tr></table></figure><p>然后注册<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gitlab-ci-multi-runner <span class="keyword">register</span></span><br></pre></td></tr></table></figure></p><p>当中会让你填写一些信息. 例如你的 gitlab-ci coordinator 的地址和注册这个 runner 的 token，这两个在你 GitLab 中可以找到。关于 executor 的话, 我这里使用的是 shell, 因为我将 runner 直接运行在物理机的系统上。如下图，在项目的Settings里，有个Runner选项。<br><img src="/upload/old/201606snapshot3.png" alt="snapshot3"> </p><p>上图里面的地址为<a href="http://11.12.110.79/ci" rel="external nofollow noopener noreferrer" target="_blank">http://11.12.110.79/ci</a><br>token为UsxTMH-QCwxQxsoPLa9y </p><p><img src="/upload/old/201606snapshot4.png" alt="snapshot4"><br>如上，配置完成后可以在界面中看到配置好的Runner。<br><img src="/upload/old/201606snapshot5.png" alt="snapshot5"><br>接下来，参考<a href="http://docs.gitlab.com/ce/ci/quick_start/README.html" rel="external nofollow noopener noreferrer" target="_blank">http://docs.gitlab.com/ce/ci/quick_start/README.html</a><br>添加.gitlab-ci.yml文件到test仓库根目录下，我的内容如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">before_script:</span><br><span class="line">- java -version</span><br><span class="line"></span><br><span class="line">testbuild:</span><br><span class="line">script:</span><br><span class="line">- gcc main.c</span><br><span class="line">- cp <span class="selector-tag">a</span><span class="selector-class">.out</span> ~/</span><br><span class="line">- ./<span class="selector-tag">a</span>.out</span><br></pre></td></tr></table></figure><p>上述代码中，before_script为脚本执行前的准备工作，每一行就相当于在shell中执行一个命令，上述内容的意思就是打印java的版本信息，然后gcc编译main.c文件，拷贝编译出来的a.out至当前用户的主目录下，执行当前编译出来的可执行程序，该文件执行一些命令很灵活，可以进行相应的自动构建编译，然后自动单元测试，最后自动部署。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git add .gitlab-ci.yml</span><br><span class="line"><span class="variable">$ </span>git commit -m <span class="string">"add.gitlab-ci.yml"</span></span><br><span class="line"><span class="variable">$ </span>git push</span><br></pre></td></tr></table></figure><p>该文件推送到仓库后会自动触发上述自动脚本的执行。<br><img src="/upload/old/201606snapshot6.png" alt="snapshot6"><br>基本的用法就讲到这，给大家抛砖引玉啦。</p>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ubuntu下Android 5.0源码环境搭建</title>
      <link href="/Ubuntu%E4%B8%8BAndroid%205.0%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"/>
      <url>/Ubuntu%E4%B8%8BAndroid%205.0%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</url>
      
        <content type="html"><![CDATA[<p><strong>1、安装ubuntu</strong></p><p>编译Android 5.1需要ubuntu 14.04 TLS 64位的操作系统，在百度上搜索ubuntu，到ubuntu官网下载Ubuntu 64位桌面（desktop）版本，进行安装。安装完成后，需要更新一下ubuntu源。</p><p> Android5.1系统源码编译的磁盘空间要求较高，ubuntu 的磁盘空间需要分配60G以上，内存需要4G以上，否则容易出现编译错误等问题。</p><p><strong>2、安装openjdk-7（编译Android 5.0以上）</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install openjdk-7-jdk</span><br></pre></td></tr></table></figure><p><strong>3、安装编译依赖的软件</strong></p><p>使用如下命令安装依赖软件：</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install bison build-essential curl flex git gnupg gperf libesd0-<span class="built_in">dev</span> liblz4-tool libncurses5-<span class="built_in">dev</span> libsdl1<span class="number">.2</span>-<span class="built_in">dev</span> libwxgtk2<span class="number">.8</span>-<span class="built_in">dev</span> libxml2 libxml2-utils lzop maven openjdk<span class="number">-7</span>-jdk pngcrush schedtool squashfs-tools xsltproc zip zlib1g-<span class="built_in">dev</span> mkisofs</span><br><span class="line">sudo apt-<span class="built_in">get</span> install g++-multilib gcc-multilib lib32ncurses5-<span class="built_in">dev</span> lib32readline-gplv2-<span class="built_in">dev</span> lib32z1-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure><p><strong>4、配置Cache</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install ccache</span><br><span class="line"></span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 嵌入式开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Android 4.0.3源码环境搭建及编译常见问题</title>
      <link href="/Android%204.0.3%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E7%BC%96%E8%AF%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html"/>
      <url>/Android%204.0.3%E6%BA%90%E7%A0%81%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E7%BC%96%E8%AF%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html</url>
      
        <content type="html"><![CDATA[<p>#一、完全编译说明</p><blockquote><p>系统：Ubuntu12.04.3-i386<br>JDK：jdk-6u29-linux-i586<br>源码：iTop4412_ICS</p></blockquote><p>虚拟机硬件要求：建议2GB内存，交换空间至少4GB（Android4.0以上要求），编译的硬盘空间至少25GB以上。<br>首先按照开发版中的说明文档进行编译环境的搭建，在上述运行环境下出现的错误及解决办法说明：</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install xinetd build-essential nfs-kernel-server apache2 samba git-core gnupg flex bison gperf libsdl-<span class="built_in">dev</span> libesd0-<span class="built_in">dev</span> libwxgtk2<span class="number">.6</span>-<span class="built_in">dev</span> build-essential zip curl libncurses5-<span class="built_in">dev</span> zlib1g-<span class="built_in">dev</span> cscope uboot-mkimage</span><br><span class="line">sudo apt-<span class="built_in">get</span> install lib32z1-<span class="built_in">dev</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install lib32ncurses5-<span class="built_in">dev</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install libswitch-perl</span><br><span class="line">sudo apt-<span class="built_in">get</span> install git gnupg flex bison gperf build-essential zip curl libc6-<span class="built_in">dev</span> libncurses5-<span class="built_in">dev</span>:i386 x11proto-core-<span class="built_in">dev</span> libx11-<span class="built_in">dev</span>:i386 libreadline6-<span class="built_in">dev</span>:i386 libgl1-mesa-dri:i386 libgl1-mesa-<span class="built_in">dev</span> g++-multilib mingw32 tofrodos python-markdown libxml2-utils xsltproc zlib1g-<span class="built_in">dev</span>:i386 dpkg-<span class="built_in">dev</span> lib32z1-<span class="built_in">dev</span> lib32ncurses5-<span class="built_in">dev</span> libswitch-perl</span><br></pre></td></tr></table></figure><p>##1.内核源码编译成功！</p><p>##2.Android源码编译问题依次如下：<br>错误一</p><blockquote><p>make: *** [out/host/linux-x86/obj/EXECUTABLES/obbtool_intermediates/Main.o] Error 1</p></blockquote><p>此处编译错误是由于ubuntu 11.10采用了GCC4.6.1导致的。<br>解决方法：</p><blockquote><p>修改源码目录下/build/core/combo/HOST_linux-x86.mk文件：<br>将以下语句<br>HOST_GLOBAL_CFLAGS += -D_FORTIFY_SOURCE=0<br>修改为</p></blockquote><h2 id="HOST-GLOBAL-CFLAGS-U-FORTIFY-SOURCE-D-FORTIFY-SOURCE-0"><a href="#HOST-GLOBAL-CFLAGS-U-FORTIFY-SOURCE-D-FORTIFY-SOURCE-0" class="headerlink" title="HOST_GLOBAL_CFLAGS += -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0"></a>HOST_GLOBAL_CFLAGS += -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0</h2><p>错误二</p><blockquote><p>frameworks/compile/slang/slang_rs_export_foreach.cpp:249:23: 错误： variable ‘ParamName’ set but not used [-Werror=unused-but-set-variable]<br>cc1plus: all warnings being treated as errors<br>make: *** [out/host/linux-x86/obj/EXECUTABLES/llvm-rs-cc_intermediates/slang_rs_export_foreach.o] 错误 1</p></blockquote><p>解决办法：</p><blockquote><p>首先，在工程根目录下，打开下面的makefile文件： $ vi frameworks/compile/slang/Android.mk 其次，在打开的makefile文件中按照下面更改(22行)： local_cflags_for_slang := -Wno-sign-promo -Wall -Wno-unused-parameter -Werror</p></blockquote><h2 id="修改为-local-cflags-for-slang-Wno-sign-promo-Wall-Wno-unused-parameter"><a href="#修改为-local-cflags-for-slang-Wno-sign-promo-Wall-Wno-unused-parameter" class="headerlink" title="修改为 local_cflags_for_slang := -Wno-sign-promo -Wall -Wno-unused-parameter"></a>修改为 local_cflags_for_slang := -Wno-sign-promo -Wall -Wno-unused-parameter</h2><p>错误三</p><blockquote><p>[out/host/linux-x86/obj/STATIC_LIBRARIES/libMesa_intermediates/src/glsl/linker.o]</p></blockquote><p>解决办法：</p><blockquote><p>$ vi external/mesa3d/src/glsl/linker.cpp 添加： #include <cstddef></cstddef></p></blockquote><hr><blockquote><p>错误四<br>[out/host/linux-x86/obj/STATIC_LIBRARIES/liboprofile_pp_intermediates/arrange_profiles.o]</p></blockquote><p>解决办法：</p><blockquote><p>$ vim external/oprofile/libpp/format_output.h</p></blockquote><h2 id="找到-94行，把-mutable-字符串注释掉；"><a href="#找到-94行，把-mutable-字符串注释掉；" class="headerlink" title="找到 94行，把 mutable 字符串注释掉；"></a>找到 94行，把 mutable 字符串注释掉；</h2><p>错误五</p><blockquote><p>[out/host/linux-x86/obj/STATIC_LIBRARIES/libgtest_host_intermediates/gtest-all.o]</p></blockquote><p>解决办法：</p><blockquote><p>$ vi external/gtest/include/gtest/internal/gtest-param-util.h 添加： #include <cstddef></cstddef></p></blockquote><hr><p>错误六</p><blockquote><p>[out/host/linux-x86/obj/EXECUTABLES/test-librsloader_intermediates/test-librsloader]</p></blockquote><p>解决办法：</p><blockquote><p>$vim external/llvm/llvm-host-build.mk<br>在文件中插入一行： LOCAL_LDLIBS := -lpthread -ldl</p></blockquote><p>上述问题解决后，Android源码的编译过程应该能正确通过。</p><p>##64Bit补充：</p><p>错误一</p><blockquote><p>[out/host/linux-x86/obj/EXECUTABLES/aapt_intermediates/aapt] Error 1</p></blockquote><p>解决：</p><blockquote><p>sudo apt-get install lib32z1-dev</p></blockquote><p>错误二</p><blockquote><p>[out/host/linux-x86/obj/EXECUTABLES/adb_intermediates/adb] Error 1</p></blockquote><p>解决：</p><blockquote><p>sudo apt-get install lib32ncurses5-dev</p></blockquote><p>#二、源码模块单独编译说明</p><p>在进行下述操作之前，我们需要手工对iTop4412源码进行单独的目标平台配置，拷贝iTop4412/iTop4412_ICS/device/moto/stingray/vendorsetup.sh文件至iTop4412/iTop4412_ICS/device/samsung/smdk4x12/目录下，然后进行修改：</p><blockquote><p>add_lunch_combo full_stingray-userdebug<br>修改为<br>add_lunch_combo full_smdk4x12-eng</p></blockquote><p>最后在源码目录下执行source ./build/envsetup.sh命令进行目标编译项加载，再执行指令lunch选择full_smdk4x12-eng作为编译目标平台，至此配置进行完毕。</p><p>注：在执行source ./build/envsetup.sh命令时有可能提示build/envsetup.sh: 1: Syntax error: “(“ unexpected 错误，解决方法：执行$sudo dpkg-reconfigure dash命令，并选择“否”。</p><p>Google为我们准备了另外的命令来支持编译单独的模块，以及重新打包system.img的命令。</p><p>一. 首先在Android源代码目录下的build目录下，有个脚本文件envsetup.sh，执行这个脚本文件后，就可以获得一些有用的工具：</p><p><strong>USER-NAME@MACHINE-NAME:~/iTop4412_ICS$source ./build/envsetup.sh</strong></p><p>注意，这是一个source命令，执行之后，就会有一些额外的命令可以使用：</p><p><strong>- croot: Changes directory to the top of the tree.</strong><br><strong>- m: Makes from the top of the tree.</strong><br><strong>- mm: Builds all of the modules in the current directory.</strong><br><strong>- mmm: Builds all of the modules in the supplied directories.</strong><br><strong>- cgrep: Greps on all local C/C++ files.</strong><br><strong>- jgrep: Greps on all local Java files.</strong><br><strong>- resgrep: Greps on all local res/*.xml files.</strong><br><strong>- godir: Go to the directory containing a file.</strong></p><p>这些命令的具体用法，可以在命令的后面加-help来查看，这里我们只关注mmm命令，也就是可以用它来编译指定目录的所有模块，通常这个目录只包含一个模块。</p><p>二. 使用mmm命令来编译指定的模块，例如Email应用程序：</p><p><strong>USER-NAME@MACHINE-NAME:~/iTop4412_ICS$ mmm packages/apps/Email/</strong></p><p>编译完成之后，就可以在out/target/product/smdk4x12/system/app目录下看到Email.apk文件了。Android 系统自带的App都放在这具目录下。另外，Android系统的一些可执行文件，例如C编译的可执行文件，放在out/target/product/smdk4x12/system/bin目录下，动态链接库文件放在out/target/product/smdk4x12/system/lib目录下，out/target/product/smdk4x12/system/lib/hw目录存放的是硬件抽象层（HAL）接口文件。</p><p>三. 编译好模块后，还要重新打包一下system.img文件，这样我们把system.img运行在模拟器上时，就可以看到我们的程序了。</p><p><strong>USER-NAME@MACHINE-NAME:~/iTop4412_ICS$ make snod</strong></p><p>四. 参照<a href="http://blog.csdn.net/luoshengyang/article/details/6559955" rel="external nofollow noopener noreferrer" target="_blank">Ubuntu</a><a href="http://blog.csdn.net/luoshengyang/article/details/6559955" rel="external nofollow noopener noreferrer" target="_blank">上下载、编译和安装</a><a href="http://blog.csdn.net/luoshengyang/article/details/6559955" rel="external nofollow noopener noreferrer" target="_blank">Android</a><a href="http://blog.csdn.net/luoshengyang/article/details/6559955" rel="external nofollow noopener noreferrer" target="_blank">最新源代码</a>一文介绍的方法运行模拟器：</p><p><strong>USER-NAME@MACHINE-NAME:~/iTop4412_ICS$ emulator</strong></p><p>三、单独编译模拟器调试</p><h2 id="make-snod-and-emulator-builds"><a href="#make-snod-and-emulator-builds" class="headerlink" title="make snod and emulator builds."></a>make snod and emulator builds.</h2><p><strong>Symptom</strong>: When using make snod (make system no dependencies) on emulator builds, the resulting build doesn’t work.<br><strong>Cause</strong>: All emulator builds now run Dex optimization at build time by default, which requires to follow all dependencies to re-optimize the applications each time the framework changes.<br><strong>Fix</strong>: Locally disable Dex optimizations with export WITH_DEXPREOPT=false, delete the existing optimized versions with make installclean and run a full build to re-generate non-optimized versions. After that, make snod will work.</p><h2 id="Stale-ODEX-dependencies-cause-unbootable-Android"><a href="#Stale-ODEX-dependencies-cause-unbootable-Android" class="headerlink" title="Stale ODEX dependencies cause unbootable Android"></a>Stale ODEX dependencies cause unbootable Android</h2><p>This document is based on the code of Android 4.1.1_r6.1 (Jelly Bean).</p><p>Suppose that you want to customiz your android system, you may want to modify /system/framework/framework.jar (source files are in the directory frameworks/base). During development, let’s assume that you just did a full build, and you decide to make some changes to some source files. After that, you want to build again. Ideally, the building system can correctly re-build everything that is dependent on the changes you just made. However, seems that the android building system does not do it properly. You will get an unbootable image caused by <em>mismatched dex signature</em>. If you check the log when system boots, you will see an error message like the following:</p><p>07-30 06:50:56.042: I/dalvikvm(393): DexOpt: mismatch dep signature for ‘/system/framework/framework.odex’ 07-30 06:50:56.042: E/dalvikvm(393): /system/framework/apache-xml.jar odex has stale dependencies</p><p>The reason is that many system apks which was optimized before (ODEX) need to be rebuilt because they are dependent on system framework jar (but they are not). This causes odex mismatch error at bootup which leads to unbootable android in the worst case.</p><p>To solve this problem, you have two options:</p><p>1) Set variable WITH_DEXPREOPT to false in build/target/board/generic/BoardConfig.mk</p><p>2) Add WITH_DEXPREOPT=false when make. It’s like the following:</p><p># make -j4 WITH_DEXPREOPT=false</p><p>上述方法已经测试通过，证明可用于模拟器的源码修改调试，需要注意的是要替换system.img、ramdisk.img、userdata.img三个文件，并重新建立avd模拟器。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ubuntu14.04LTS更新源</title>
      <link href="/Ubuntu14.04LTS%E6%9B%B4%E6%96%B0%E6%BA%90.html"/>
      <url>/Ubuntu14.04LTS%E6%9B%B4%E6%96%B0%E6%BA%90.html</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.cnblogs.com/stone-dan-dan/p/4246027.html?utm_source=tuicool&amp;utm_medium=referral" rel="external nofollow noopener noreferrer" target="_blank">_原文_</a> </p><h4 id="第一步：备份源列表"><a href="#第一步：备份源列表" class="headerlink" title="第一步：备份源列表"></a>第一步：备份源列表</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp <span class="regexp">/etc/</span>apt<span class="regexp">/sources.list /</span>etc<span class="regexp">/apt/</span>sources.list_backup</span><br></pre></td></tr></table></figure><h4 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h4><p>打开源列表并进行更改（我用gedit命令）：<br>此处附上我的源列表（取您所需）：<br>官方源：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="regexp">//</span>archive.ubuntu.com<span class="regexp">/ubuntu/</span> trusty main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//</span>archive.ubuntu.com<span class="regexp">/ubuntu/</span> trusty-security main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//</span>archive.ubuntu.com<span class="regexp">/ubuntu/</span> trusty-updates main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//</span>archive.ubuntu.com<span class="regexp">/ubuntu/</span> trusty-proposed main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//</span>archive.ubuntu.com<span class="regexp">/ubuntu/</span> trusty-backports main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//</span>archive.ubuntu.com<span class="regexp">/ubuntu/</span> trusty main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//</span>archive.ubuntu.com<span class="regexp">/ubuntu/</span> trusty-security main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//</span>archive.ubuntu.com<span class="regexp">/ubuntu/</span> trusty-updates main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//</span>archive.ubuntu.com<span class="regexp">/ubuntu/</span> trusty-proposed main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//</span>archive.ubuntu.com<span class="regexp">/ubuntu/</span> trusty-backports main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/ubuntu/</span> trusty main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>163源：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/ubuntu/</span> trusty-security main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/ubuntu/</span> trusty-updates main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/ubuntu/</span> trusty-proposed main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/ubuntu/</span> trusty-backports main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/ubuntu/</span> trusty main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/ubuntu/</span> trusty-security main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/ubuntu/</span> trusty-updates main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/ubuntu/</span> trusty-proposed main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.<span class="number">163</span>.com<span class="regexp">/ubuntu/</span> trusty-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>阿里源：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> trusty main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> trusty-security main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> trusty-updates main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> trusty-proposed main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> trusty-backports main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> trusty main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> trusty-security main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> trusty-updates main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> trusty-proposed main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> trusty-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>centos源（放心使用）：</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">deb</span> http://centos.<span class="keyword">bitcomm.cn/ubuntu </span>trusty main restricted universe <span class="keyword">multiverse </span></span><br><span class="line"><span class="symbol">deb</span> http://centos.<span class="keyword">bitcomm.cn/ubuntu </span>trusty-security main restricted universe <span class="keyword">multiverse </span></span><br><span class="line"><span class="symbol">deb</span> http://centos.<span class="keyword">bitcomm.cn/ubuntu </span>trusty-updates main restricted universe <span class="keyword">multiverse </span></span><br><span class="line"><span class="symbol">deb</span> http://centos.<span class="keyword">bitcomm.cn/ubuntu </span>trusty-<span class="keyword">backports </span>main restricted universe <span class="keyword">multiverse </span></span><br><span class="line"><span class="symbol">deb</span> http://centos.<span class="keyword">bitcomm.cn/ubuntu </span>trusty-proposed main restricted universe <span class="keyword">multiverse </span></span><br><span class="line"><span class="symbol">deb</span>-src http://centos.<span class="keyword">bitcomm.cn/ubuntu </span>trusty main restricted universe <span class="keyword">multiverse </span></span><br><span class="line"><span class="symbol">deb</span>-src http://centos.<span class="keyword">bitcomm.cn/ubuntu </span>trusty-security main restricted universe <span class="keyword">multiverse </span></span><br><span class="line"><span class="symbol">deb</span>-src http://centos.<span class="keyword">bitcomm.cn/ubuntu </span>trusty-updates main restricted universe <span class="keyword">multiverse </span></span><br><span class="line"><span class="symbol">deb</span>-src http://centos.<span class="keyword">bitcomm.cn/ubuntu </span>trusty-<span class="keyword">backports </span>main restricted universe <span class="keyword">multiverse </span></span><br><span class="line"><span class="symbol">deb</span>-src http://centos.<span class="keyword">bitcomm.cn/ubuntu </span>trusty-proposed main restricted universe <span class="keyword">multiverse</span></span><br></pre></td></tr></table></figure><p>搜狐源：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/ubuntu/</span> trusty main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/ubuntu/</span> trusty-security main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/ubuntu/</span> trusty-updates main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/ubuntu/</span> trusty-proposed main restricted universe multiverse </span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/ubuntu/</span> trusty-backports main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/ubuntu/</span> trusty main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/ubuntu/</span> trusty-security main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/ubuntu/</span> trusty-updates main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/ubuntu/</span> trusty-proposed main restricted universe multiverse </span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.sohu.com<span class="regexp">/ubuntu/</span> trusty-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>第三步：选择好你要的源并且复制到你的源列表之后，关闭列表，使用下列命令更新 </p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br></pre></td></tr></table></figure><p>第四步：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> upgrade</span><br></pre></td></tr></table></figure><p>提示：如果使用虚拟机可以支持进行复制粘帖这些操作，那么可以进行该操作，如果像我一样使用virtualbox的用户或者是使用的是server版Linux的用户怎么办呢？<br>建议：你使用putty进行远程操作，因为你习惯了之后你会发现putty可以进行复制黏贴之类的还有就是省去了老是在虚拟机和真实主机之间的频繁切换的操作。更方便。<br>最后，附上我参考的地址：<br><a href="http://wiki.ubuntu.org.cn/Qref/Source" rel="external nofollow noopener noreferrer" target="_blank">http://wiki.ubuntu.org.cn/Qref/Source</a></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>U盘安装Ubuntu Server（转）</title>
      <link href="/U%E7%9B%98%E5%AE%89%E8%A3%85Ubuntu%20Server%EF%BC%88%E8%BD%AC%EF%BC%89.html"/>
      <url>/U%E7%9B%98%E5%AE%89%E8%A3%85Ubuntu%20Server%EF%BC%88%E8%BD%AC%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<p>在网上找了很多教程，都不起效，提示：“从光盘上读取数据出错”。 总结出了几个关键点。 </p><p>首先，版本<a href="http://www.centos.bz/category/other-system/ubuntu/" title="Ubuntu" rel="external nofollow noopener noreferrer" target="_blank">Ubuntu</a> 12.04 Server，一般的U盘安装都会报：“从光盘上读取数据出错”。如果是桌面版(Desktop)，则可以正常安装。 </p><p>其次，ISO转化成U盘的安装工具，选择win32diskimager，其他工具都会转化的时候可以正常制作成功，但是在安装过程会报：“从光盘上读取数据出错”。<br>在这两个点上面，我折腾了很久，用了很多尝试方法，包括： 无光驱U盘安装 ubuntu server 12.04.1 跳过光驱检测的方法 完成之后打开U盘目录下的isolinuxsyslinux.cfg，<br>将default vesamenu.c32<br>注释为<br># default vesamenu.c32<br>按了F6后面有启动参数添加栏，在后方输入：<br>install cdrom-detect/try-usb=true<br>并回车，进入安装 以上这些方法都是坑爹的。 </p><p>只需要选择win32diskimager制作U盘安装程序，就可以正常安装Ubuntu 12.04 Server。<br>win32diskimager是一款绿色软件，无需安装。</p><p>解压后运行exe文件即可，界面如下：<br><a href="/upload/old/20160615Wdi1.jpg"><img src="http://www.centos.bz/wp-content/uploads/2013/03/Wdi1.jpg" alt="Wdi1" title="U盘安装 &lt;wbr&gt;Ubuntu &lt;wbr&gt;从光盘上读取数据出错"></a> </p><p>文本框用来输入文件完整地址，后面的文件夹图标是浏览窗口，默认只能识别img文件。只需要将iso文件全路径输入在Image File中。 填好镜像的完整地址后右边有个下拉列表用来选择移动设备，千万别选错了！建议只插一个U盘，以免误操作。<br>之后点击Wirte按钮就开始写入了。<br>写入后重启，从U盘启动就可以进入Ubuntu 12.04 Server安装程序了！</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Opencart网上商店</title>
      <link href="/Opencart%E7%BD%91%E4%B8%8A%E5%95%86%E5%BA%97.html"/>
      <url>/Opencart%E7%BD%91%E4%B8%8A%E5%95%86%E5%BA%97.html</url>
      
        <content type="html"><![CDATA[<p>基于mycncart搭建的一个网上商店，为个人、商家提供在线商品销售的一站式服务，包括商品展示、购物车、在线支付（微信支付、支付宝支付），提供二次定制开发服务。移动端应用正在开发中，将会陆续上线，敬请期待…</p>]]></content>
      
      
      <categories>
          
          <category> 服务端开发 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>GMAT客户端</title>
      <link href="/GMAT%E5%AE%A2%E6%88%B7%E7%AB%AF.html"/>
      <url>/GMAT%E5%AE%A2%E6%88%B7%E7%AB%AF.html</url>
      
        <content type="html"><![CDATA[<p><strong>GMAT客户端收录了关于GMAT考试的语法、逻辑、阅读等各项知识点，为需要进行GMAT考试的学生提供帮助。<br>GMAT是研究生管理科学入学考试的简称；<br>它是国外的一种入学考试。</strong></p><p><img src="/upload/old/20160669gmat.png" alt=""><br><img src="/upload/old/20160669选择.png" alt=""><br><img src="/upload/old/20160669文章.png" alt=""><br><img src="/upload/old/20160669收藏.png" alt=""><br><img src="/upload/old/20160669文章末尾.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 个人作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> app </tag>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>微小果客户端</title>
      <link href="/%E5%BE%AE%E5%B0%8F%E6%9E%9C%E5%AE%A2%E6%88%B7%E7%AB%AF.html"/>
      <url>/%E5%BE%AE%E5%B0%8F%E6%9E%9C%E5%AE%A2%E6%88%B7%E7%AB%AF.html</url>
      
        <content type="html"><![CDATA[<p><strong>微小果客户端提供各种商品展示、店铺商家入驻、团购优惠等服务。</strong></p><p><img src="/upload/old/2016066101今日.jpg" alt=""><br><img src="/upload/old/2016066103优店.jpg" alt=""><br><img src="/upload/old/2016066104聚优汇.jpg" alt=""><br><img src="/upload/old/2016066102遇见.jpg" alt=""><br><img src="/upload/old/2016066105分类页.jpg" alt=""><br><img src="/upload/old/2016066106详情.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 个人作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> app </tag>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>视频监控应用</title>
      <link href="/%E8%A7%86%E9%A2%91%E7%9B%91%E6%8E%A7%E5%BA%94%E7%94%A8.html"/>
      <url>/%E8%A7%86%E9%A2%91%E7%9B%91%E6%8E%A7%E5%BA%94%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<p><strong>视频监控应用结合高清摄像头和后台流媒体服务器，能够通过移动设备进行摄像头的实时监控和控制。</strong> </p><p><img src="/upload/old/20160650IMG_0143_.jpg" alt=""><br><img src="/upload/old/20160650IMG_0144_.jpg" alt=""><br><img src="/upload/old/20160650IMG_0145.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 个人作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> app </tag>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Android APK应用加固方案</title>
      <link href="/Android%20APK%E5%BA%94%E7%94%A8%E5%8A%A0%E5%9B%BA%E6%96%B9%E6%A1%88.html"/>
      <url>/Android%20APK%E5%BA%94%E7%94%A8%E5%8A%A0%E5%9B%BA%E6%96%B9%E6%A1%88.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-需求"><a href="#0x00-需求" class="headerlink" title="0x00 需求"></a>0x00 需求</h2><p>应客户需求，针对Android应用进行安全加固，本方案目前实现了防止应用被静态分析，防止二次打包功能。</p><h2 id="0x01-背景"><a href="#0x01-背景" class="headerlink" title="0x01 背景"></a>0x01 背景</h2><p>关于Android加壳的技术分析早几年都已在网上讨论开了，我也是多方参考看学论坛、CSDN等网站，进行了实践测试得出的方案。 APK应用加固如果仅从应用程序包本身去做安全，是不可能做到天衣无缝（毕竟你终究得让系统认得你，能够加载你，最后可以运行你），所以这种方式仅仅是防小白不能轻易的静态分析APK，比如使用apktool，backsmail，jdgui等工具反编译应用。所以市面上的不管是邦邦加固、腾讯加固、爱加密等等，针对APK应用加固也都是为了提高被反编译的难度，不能绝对的保护应用。单从加密机制方面分析，他们做的很多工作都是躲躲藏藏的，当然这在应用加固肯定能够增加一定的混淆性，但不能最终的保护应用免遭破解。 上面也说了，即使你保护的非常好，但是最终运行起来后，仍需要加载到内存中，需要虚拟机识别，这时候数据也就暴露出来了，如果该应用是运行在一台ROOT的手机上，那恭喜你，你的应用已无生还。通过一些工具dump内存就可以找到你的DEX文件，我在看雪论坛中也看到一个帖子叫脱壳神器，也是依赖于定制的Android系统对应用进行脱壳，最终得到DEX文件。</p><h2 id="0x02-思路"><a href="#0x02-思路" class="headerlink" title="0x02 思路"></a>0x02 思路</h2><p>APK应用加固不仅仅是从应用自身去做安全加固，更应结合应用所运行的系统一块去做安全加固。 目前所采用的方案中就是结合咱公司的安全芯片去做APK应用安全加固，通过安全芯片的硬算法去分散密钥加密DEX文件来保证应用的安全性，只有安全芯片的手机才能运行安全加固的应用。 关于APK加壳的技术，相信很多人都非常感兴趣，我也是参考别人文章，然后再分析Android源码最终优化得出来的一种方案。我大致讲一下原理，有不懂的地方请参考相关资料，应用在启动时（即四大组件调用）都会首先启动Application，所以加壳就在这里做，结合APK动态加载技术（这个可以参考谷歌官方代码android-support-multidex.jar）就完成了。</p><h2 id="0x03-PC端加壳实现流程"><a href="#0x03-PC端加壳实现流程" class="headerlink" title="0x03 PC端加壳实现流程"></a>0x03 PC端加壳实现流程</h2><p>开发语言使用JAVA，加上shell脚本进行APK的安全加固。 1、输入文件：已签名的APK应用包 2、使用apktool工具对该APK包进行decode，记住这里不反编译classes.dex，只解析资源文件（如果某些应用无法使用apktool工具解析，则无法进行安全加固，请注意） 3、对AndroidManifest.xml中的Application节点做修改，把android:name修改为解壳使用的XdjaApplication全称，如果应用存在android:name则把该类名称保存为meta-data，供解壳程序使用。 4、把安全加固相关的so文件根据不同平台，拷贝至相应libs目录下； 5、提取出APK中的签名证书，加密后保存至assets目录中； 6、提取目录下的源dex文件，加密后保存至assets目录中； 7、拷贝解壳classes.dex至解压目录下； 8、最后再使用apktool对该目录进行重新打包，得到加固后的APK文件； 9、加固后的APK不带签名，且签名必须使用原签名证书对应的私钥进行签名； 上述操作后，APK已经完成加固功能，可以分别使用公司ACE手机和其它手机做对比测试。</p><h2 id="0x04-解壳实现流程"><a href="#0x04-解壳实现流程" class="headerlink" title="0x04 解壳实现流程"></a>0x04 解壳实现流程</h2><p>1、实现MappleApplication类继承Application，实现attachBaseContext和onCreate接口； 2、attachBaseContext接口中，首先检查应用的签名是否与原签名一致，如果不相同则直接抛出异常；然后参考android-support-multidex.jar源码中加载多dex的方法，把assets中加密的源dex进行解密并加载至当前的ClassLoader中； 3、onCreate接口中，读取AndroidManifest.xml文件，解析meta-data中是否存在应用自定义的Application（参加0x03中第3步），如果存在则实例化该类并调用其onCreate方法。 4、接下来应用就会正常运行起来了。</p><h2 id="0x05-总结"><a href="#0x05-总结" class="headerlink" title="0x05 总结"></a>0x05 总结</h2><p>上述已经简单描述了实现流程还有实现关键点，目前APK安全加固只实现了防二次打包、源DEX保护功能，仍有其它安全功能有待实现，如应用资源保护、应用so保护等。</p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> 加壳 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Android 5.0 Recovery分区还原机制</title>
      <link href="/Android%205.0%20Recovery%E5%88%86%E5%8C%BA%E8%BF%98%E5%8E%9F%E6%9C%BA%E5%88%B6.html"/>
      <url>/Android%205.0%20Recovery%E5%88%86%E5%8C%BA%E8%BF%98%E5%8E%9F%E6%9C%BA%E5%88%B6.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h2><p>近段时间在做OTA升级项目中发现，单独对recovery分区刷入新的版本后，启动进入到系统后，再进入recovery模式，会发现recovery被还原为之前的版本，导致校验结果失败。</p><h2 id="0x01-真相"><a href="#0x01-真相" class="headerlink" title="0x01 真相"></a>0x01 真相</h2><p>首先，Andorid编译过程中会生成system/recovery-from-boot.p，该包是由recovery.img与boot.img计算产生的patch包，用于还原recovery分区准备的。<br>其次，Android编译输出目录下，root目录的init.rc加入如下启动项： service flash_recovery /system/bin/install-recovery.sh class main seclabel u:r:install_recovery:s0 oneshot 我们再来看看这个install-recovery.sh脚本，<br>如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/system/bin/sh </span></span><br><span class="line"><span class="keyword">if</span> ! applypatch -c EMMC:/dev/block/bootdevice/by-name/recovery:32059648:5ab7bc2f80c9c6f98f444b2ff8e72277ceb7e142; </span><br><span class="line"><span class="keyword">then</span> applypatch -b /system/etc/recovery-resource.dat EMMC:/dev/block/bootdevice/by-name/boot:31394048:34dd9856663d4a11a8eaaafd422e10ce88c03b47 EMMC:/dev/block/bootdevice/by-name/recovery 5ab7bc2f80c9c6f98f444b2ff8e72277ceb7e142 32059648 34dd9856663d4a11a8eaaafd422e10ce88c03b47:/system/recovery-from-boot.p &amp;&amp; <span class="built_in">log</span> -t recovery “Installing new recovery image: succeeded” || <span class="built_in">log</span> -t recovery “Installing new recovery image: failed” </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">log</span> -t recovery “Recovery image already installed” </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><h2 id="0x02-总结"><a href="#0x02-总结" class="headerlink" title="0x02 总结"></a>0x02 总结</h2><p>通过上述脚本，发现系统每次启动时会判断recovery分区的摘要值是否正确，如果正确则在logcat中打印“Recovery image already installed”，如果不正确，则会执行applypatch命令，首先判断boot分区的摘要值是否正确，如果正确则使用recovery-from-boot.p补丁包进行recovery分区的恢复，恢复成功打印logcat日志”Installing new recovery image: succeeded”，恢复失败则打印”Installing new recovery image: failed”。 通过以上分析，根据具体系统定制的需求，可在编译时把该启动脚本屏蔽掉即可。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>iPad网上商城</title>
      <link href="/iPad%E7%BD%91%E4%B8%8A%E5%95%86%E5%9F%8E.html"/>
      <url>/iPad%E7%BD%91%E4%B8%8A%E5%95%86%E5%9F%8E.html</url>
      
        <content type="html"><![CDATA[<p><strong>iPad网上商城实现了热销商品、限时商品、商品分类、商品比较、商品展示、购物车等功能，能够满足商家在线销售商品的需求。</strong> </p><p><img src="/upload/old/201606IMG_0563-768x576.png" alt=""><br><img src="/upload/old/201606IMG_0579-768x576.png" alt=""><br><img src="/upload/old/201606IMG_0570-768x576.png" alt=""><br><img src="/upload/old/201606IMG_0589-768x576.png" alt=""><br><img src="/upload/old/201606Screenshot-2013.01.15-11.39.05-768x576.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 个人作品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> app </tag>
            
            <tag> ios </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
